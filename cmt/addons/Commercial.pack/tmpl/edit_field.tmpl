<__trans_section component="Commercial">
<mt:if name="id">
    <mt:setvarblock name="page_title"><__trans phrase="Edit Custom Field"></mt:setvarblock>
<mt:else>
    <mt:setvar name="page_title" value="<__trans phrase="Create Custom Field">">
    <mt:setvar name="new_object" value="1">
</mt:if>
<mt:setvar name="screen_id" value="edit_field">
<mt:setvar name="position_actions_bottom" value="1">
<mt:setvarblock name="system_msg">
    <mt:if name="saved">
        <mtapp:statusmsg
            id="saved"
            class="success">
            <__trans phrase="Your changes have been saved.">
        </mtapp:statusmsg>
    </mt:if>
    <mt:if name="saved_deleted">
        <mtapp:statusmsg
            id="saved-deleted"
            class="success">
            <__trans phrase="The selected fields(s) has been deleted from the database.">
        </mtapp:statusmsg>
    </mt:if>
    <mt:if name="error">
        <mtapp:statusmsg
            id="generic-error"
            class="error">
            <mt:var name="error" escape="html">
        </mtapp:statusmsg>
    </mt:if>
    <mtapp:statusmsg
     id="blank-fields"
     class="error hidden">
        <__trans phrase="You must enter information into the required fields highlighted below before the Custom Field can be created.">
    </mtapp:statusmsg>
</mt:setvarblock>
<mt:setvarblock name="html_head">
    <link rel="stylesheet" href="<mt:var name="static_uri">addons/Commercial.pack/styles-customfields.css" type="text/css" media="screen" title="CustomFields Stylesheet" charset="utf-8" />
    <script type="text/javascript">
    <!--
        var customfield_types_loop = <mt:var name="customfield_types_loop" to_json="1">

        function toggleClassName(el, cn) {
            if (DOM.hasClassName(el, cn))
                DOM.removeClassName(el, cn);
            else
                DOM.addClassName(el, cn);
        }

        function toggleCode(el) {
            var name = getByID('name').value;
            var code = getByID('code');
            var tag = getByID('tag').value;
            var text = '&lt;mt:If tag="' + tag + '"&gt;<br />' + name + ': &lt;mt:' + tag + '&gt;<br />&lt;/mt:If&gt;';
            code.innerHTML = text;

            var opt = getByID(el);
            if (opt) {
                toggleClassName(opt, 'active');
            }
        }

        function toggleFile() {
            var fld = getByID("basename");
            if (fld) {
                fld.disabled = false;
                fld.focus();
                var baseman = getByID("basename_manual");
                if (baseman) baseman.value = "1";
                var basewarn = getByID("basename-warning");
                if (basewarn) basewarn.style.display = "block";
            }
            var img = getByID("basename-lock");
            if (img)
                img.style.display = 'none';
            return false;
        }

        function rebasename(title) {
            if (!orig_basename) {
                dir_title = dirify(title.value);
                dir_title = dir_title.substring(0, <$mt:var name="basename_limit"$>);
                trimmed = dir_title.match(/^(.*[^_])/);
                if (trimmed && trimmed.length) {
                    setElementValue('basename', trimmed[0]);
                } else {
                    setElementValue('basename', '');
                }
            }
        }

        function capitalizeMe(val) {
                newVal = '';
                val = val.split(' ');
                for(var c=0; c < val.length; c++) {
                        newVal += val[c].substring(0,1).toUpperCase() +
                        val[c].substring(1,val[c].length);
                }
                return newVal.replace(/^\s+/g, '').replace(/\s+$/g, '');
        }

        var cloneTypes;
        function changeTypeByObject() {
<mt:unless name="id">
           var obj = jQuery('#obj_type');
           if ( obj[0].value == 'comment' ) {
               if (!cloneTypes) {
                   cloneTypes = jQuery('.cf-type-asset').clone();
                   jQuery('.cf-type-asset').remove();
               }
           } else {
               if (cloneTypes) {
                   jQuery('#type').append(cloneTypes);
                   cloneTypes = null;
               }
           }
</mt:unless>
        }

        function changeName(t) {
            <mt:unless name="id">
            var opt = getByID('tag');
            var name = dirify(getByID('name').value);
            name = name.replace(/-/g, '');
            var tag = getByID('tag').value;
            var obj_type = getByID('obj_type').value;

            if(!t)
                tag = getByID('tag').value = capitalizeMe(obj_type) + 'Data' + capitalizeMe(name);
            </mt:unless>
        }

        function changeType(s) {
            if(!s)
                s = document.getElementById('type');

            <mt:if name="new_object">
            var type_key = s.options[s.selectedIndex].value;
            <mt:else>
            var type_key = s.value;
            </mt:if>

            var type_obj;
            for (var i = 0; i < customfield_types_loop.length; i++) {
                if(customfield_types_loop[i].key == type_key) {
                    type_obj = customfield_types_loop[i];
                    break;
                }
            }

            if(!type_obj)
                return;

            // Set options_field
            if(type_obj.options_field) {
                show('options-field');
                var optField = DOM.getElementsByClassName(getByID('options-field'), 'field-content')[0];
                optField.innerHTML = type_obj.options_field;
            } else {
                hide('options-field');
            }

            // Set default_field
            if(type_obj.default_field) {
                show('default-field');
                var optField = DOM.getElementsByClassName(getByID('default-field'), 'field-content')[0];

                // If it's got some options that can be set, the default will need to be set after a save
                if(!type_obj.options_field || "<mt:var name="type">" == type_key) {
                    hide('default-save');
                    optField.innerHTML = type_obj.default_field;
                } else {
                    hide('default-field');
                    show('default-save');
                }
            } else {
                hide('default-field');
                hide('default-save');
            }
        }

        function checkRequired(f) {
            var fields = new Array('obj_type', 'name', 'type','tag');
            var submit = true;
            for (var i = 0; i < fields.length; i++) {
                var field = document.getElementById(fields[i]);
                if(!field.value || field.value == '') {
                    if(DOM.hasClassName(field.parentNode, 'textarea-wrapper'))
                        field.parentNode.style.borderColor = '#FF0000';
                    else
                        field.style.borderColor = '#FF0000';
                    field.focus();
                    submit = false;
                    DOM.removeClassName(getByID('blank-fields'), 'hidden');
                } else {
                    if(DOM.hasClassName(field.parentNode, 'textarea-wrapper'))
                        field.parentNode.style.borderColor = '#DADADA';
                    else
                        field.style.borderColor = '#DADADA';
                }
            }

            return submit;
        }

        var orig_basename;

        function init() {
            changeType();
            changeName();
            var basename = getByID("basename");
            var basename_old = getByID("basename_old");
            var title = getByID("title");
            if (basename) {
                if (basename.value != '') {
                    <mt:if name="reedit">
                    toggleFile();
                    </mt:if>
                    orig_basename = basename.value;
                }<mt:if name="reedit"> else {
                    <mt:if name="id">
                    basename.value = basename_old.value;
                    <mt:else>
                    basename.value = dirify(title.value);
                    </mt:if>
                }</mt:if>
                <mt:unless name="id">
                basename.disabled = false;
                </mt:unless>
            }
        }

        TC.attachLoadEvent(init);
    //-->
    </script>
</mt:setvarblock>

<mt:include name="include/header.tmpl">

<form method="post" action="<mt:var name="script_url">" onsubmit="return checkRequired(this);">
    <input type="hidden" name="__mode" value="save" id="__mode" />
    <input type="hidden" name="_type" value="field" />
    <input type="hidden" name="blog_id" value="<mt:var name="blog_id" default="0">" />
    <mt:if name="id"><input type="hidden" name="id" value="<mt:var name="id">" /></mt:if>
    <input type="hidden" name="magic_token" value="<mt:var name="magic_token">" id="magic_token" />
    <input type="hidden" name="return_args" value="<mt:var name="return_args">" id="return_args" />

    <fieldset>
    <mtapp:setting
        id="obj_type"
        label="<__trans phrase="System Object">"
        required="1"
        hint="<__trans phrase="Choose the system object where this Custom Field should appear.">"
        show_hint="$new_object">
        <mt:if name="id">
            <mt:loop name="obj_type_loop">
            <mt:if name="selected">
                <input type="hidden" name="obj_type" id="obj_type" value="<mt:var name="obj_type">" />
                <mt:var name="obj_type_label" escape="html">
            </mt:if>
            </mt:loop>
        <mt:else>
        <select name="obj_type" id="obj_type" onchange="changeName(); changeTypeByObject()">
            <option value=""><__trans phrase="Select..."></option>
            <mt:loop name="obj_type_loop">
                <option value="<mt:var name="obj_type">"<mt:if name="selected"> selected="selected"</mt:if>><mt:var name="obj_type_label" escape="html"></option>
            </mt:loop>
        </select>
        </mt:if>
    </mtapp:setting>

    <mtapp:setting
        id="name"
        label="<__trans phrase="Name">"
        required="1">
        <div class="textarea-wrapper">
            <input type="text" name="name" value="<mt:var name="name" escape="html">" id="name" class="full-width" onchange="rebasename(this); changeName();" />
        </div>
    </mtapp:setting>

    <mtapp:setting
        id="description"
        label="<__trans phrase="Description">">
        <textarea id="description" name="description" rows="3" cols="72" class="full-width"><mt:var name="description" escape="html"></textarea>
    </mtapp:setting>

    <mtapp:setting
        id="type"
        label="<__trans phrase="Type">"
        required="1">

        <mt:if name="id">
            <mt:loop name="customfield_types_loop"><mt:if name="type" eq="$key">
                <input type="hidden" name="type" id="type" value="<mt:var name="key">" />
                <mt:var name="label" escape="html">
            </mt:if></mt:loop>
        <mt:else>
            <select name="type" onchange="changeType(this);" id="type">
            <mt:loop name="customfield_types_loop">
                <mt:If name="show_column">
                <option<mt:if name="asset_type"> class="cf-type-asset"</mt:if> value="<mt:var name="key">"<mt:if name="type" eq="$key"> selected="selected"</mt:if>><mt:var name="label" escape="html"></option>
                </mt:If>
            </mt:loop>
            </select>
        </mt:if>
    </mtapp:setting>

    <mtapp:setting
        id="options"
        label="<__trans phrase="Options">"
        required="1">
    </mtapp:setting>

    <mtapp:setting
        id="required"
        label="<__trans phrase="Required?">"
        hint="<__trans phrase="Is data entry required in this Custom Field?">"
        show_hint="0">
        <p class="hint"><input type="checkbox" name="required" value="1" id="required"<mt:if name="required"> checked="checked"</mt:if> /> <__trans phrase="Must the user enter data into this Custom Field before the object may be saved?"></p>
    </mtapp:setting>

    <mtapp:setting
        id="default"
        label="<__trans phrase="Default">">
    </mtapp:setting>

    <mtapp:statusmsg
        id="default-save"
        class="info">
        <__trans phrase="You must save this Custom Field before setting a default value.">
    </mtapp:statusmsg>

    <mtapp:setting
        id="basename"
        label="<__trans phrase="_CF_BASENAME">"
        required="1"
        hint='<__trans phrase="The basename must be unique within this [_1]." params="<mt:var name="level_label">">'
        show_hint="1">
        <input type="text" name="basename" id="basename" class="mt-edit-field<mt:if name="error"> show-input</mt:if>" maxlength="65" value="<mt:var name="basename" escape="html">" onchange="setElementValue('basename_manual', '1');" />
        <p class="alert-warning-inline" id="basename-warning" style="display: none;">
        <img src="<mt:var name="static_uri">images/status_icons/warning.gif" alt="<__trans phrase="Warning">" width="9" height="9" />
        <__trans phrase="Warning: Changing this field's basename may require changes to existing templates.">
        </p>
        <input type="hidden" name="basename_manual" id="basename_manual"value="0" />
    </mtapp:setting>

    <mtapp:setting
        id="tag"
        label="<__trans phrase="Template Tag">"
        required="1">
        <input type="text" name="tag" value="<mt:var name="tag" escape="html">" id="tag" class="full-width" onkeyup="changeName(1);" />
        <div class="spinner">
           <p><a href="#bottom" onclick="toggleCode('tag-field'); "><img src="<mt:var name="static_uri">images/spacer.gif" alt="" width="7" height="7" /></a> <a href="#bottom" onclick="toggleCode('tag-field');"><__trans phrase="Example Template Code"></a></p>
        </div>
        <pre id="code"></pre>
    </mtapp:setting>

<mt:if name="blog_id">
    <mt:if name="categories">
    <fieldset>
        <h3><mt:var name="container_label_plural"></h3>
        <mtapp:setting
            id="show_fields"
            label='<__trans phrase="Show In These [_1]" params="<mt:var name="container_label_plural">">'
            content_class="field-content-text">
            <input type="hidden" name="container_type" value="<mt:var name="container_type">" />
            <ul>
            <mt:loop name="categories">
                <li style="margin-left: <mt:var name="category_pixel_depth">px;"><label for="<mt:var name="basename">"><input type="checkbox" name="show_field_<mt:var name="id">" id="<mt:var name="basename">" value="1"<mt:if name="selected"> checked="checked"</mt:if> /> <mt:var name="label" escape="html"></label><input type="hidden" name="selected_fields_<mt:var name="id">" value="<mt:var name="selected_fields" escape="html">" /></li>
            </mt:loop>
            </ul>
        </mtapp:setting>
    </fieldset>
    </mt:if>
</mt:if>

<mt:setvarblock name="action_buttons">
    <button
        type="submit"
        accesskey="s"
        title="<__trans phrase="Save this field (s)">"
        class="save action primary-button"
        ><__trans phrase="Save"></button>
    <mt:if name="id">
    <button
        onclick="doRemoveItems(this.form, '<__trans phrase="field">', '<__trans phrase="fields">', 'id', {'return_args' : '__mode=list_field&amp;blog_id=<mt:var name="blog_id">'})"
        type="submit"
        accesskey="x"
        title="<__trans phrase="Delete this field (x)">"
        class="delete action"
        ><__trans phrase="Delete"></button>
    </mt:if>
</mt:setvarblock>
<mt:include name="include/actions_bar.tmpl" bar_position="bottom" hide_pager="1" settings_bar="1">

</form>
<mt:include name="include/footer.tmpl">
</__trans_section>
