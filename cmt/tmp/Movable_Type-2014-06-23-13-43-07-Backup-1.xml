<?xml version='1.0'?>
<movabletype xmlns='http://www.sixapart.com/ns/movabletype'
backup_what='' backup_by='admin(ID: 1)' schema_version='5.0019' backup_on='2014-06-23T13:43:07'>
<field id='5' basename='entry_important' blog_id='0' name='重要な記事' obj_type='entry' required='0' tag='entryimportant' type='checkbox'><description>重要な記事を指定する場合チェックしてください。</description></field>
<field id='6' basename='website_keywords' blog_id='0' name='ウェブサイトのキーワード' obj_type='website' required='0' tag='websitekeywords' type='text'><description>ウェブサイト共通のMETA Keywordsをカンマ区切りで入力してください。</description></field>
<field id='7' basename='entry_extref' blog_id='0' name='外部サイトリンク' obj_type='entry' required='0' tag='entryextref' type='text'><description>記事一覧のリンクを外部サイトに変更する場合、ここにURLを記入してください。</description></field>
<field id='8' basename='website_analytics' blog_id='0' name='アクセス解析タグ' obj_type='website' required='0' tag='websiteanaliticstag' type='textarea'><description>ウェブサイトのアクセス解析タグを入力してください。</description></field>
<field id='9' basename='website_copyright' blog_id='0' name='コピーライト' obj_type='website' required='0' tag='websitecopyright' type='text'><description>コピーライトを入力してください。 例) SKYARC System Co., Ltd,</description></field>
<field id='10' basename='website_title' blog_id='0' name='ウェブサイトのタイトル' obj_type='website' required='0' tag='websitetitle' type='text'><description>ウェブサイトのTITLEを入力してください。 例) スカイアークシステム サービスサイト</description></field>
<website id='2' allow_comment_html='1' allow_commenter_regist='1' allow_comments_default='1' allow_pings='0' allow_pings_default='1' allow_reg_comments='0' allow_unreg_comments='0' archive_type='Page' autodiscover_links='0' autolink_urls='1' basename_limit='100' children_modified_on='20140620124826' class='website' convert_paras='richtext' convert_paras_comments='__default__' created_by='1' created_on='20110606220559' custom_dynamic_templates='none' days_on_index='0' email_new_comments='1' email_new_pings='1' entries_on_index='10' file_extension='html' internal_autodiscovery='0' junk_folder_expiry='14' junk_score_threshold='0' language='ja' moderate_pings='1' moderate_unreg_comments='2' modified_by='1' modified_on='20140318182352' name='声優・ナレーターなら　日本ナレーション演技研究所' ping_blogs='0' ping_google='0' ping_technorati='0' ping_weblogs='0' require_comment_emails='0' sanitize_spec='0' server_offset='9' site_path='/usr/home/z304150/html/' site_url='http://nichinare.com/' sort_order_comments='ascend' sort_order_posts='descend' status_default='2' theme_id='theme_from_nichinare' use_comment_confirmation='1' use_revision='1' words_in_excerpt='40' nwc_replace_field='title,text,text_more,keywords,excerpt,tags' template_set='HASH(0xa04e3c4)' commenter_authenticators='MovableType,LiveJournal,Vox' max_revisions_template='20' max_revisions_entry='20' nofollow_urls='1' include_cache='1' nwc_smart_replace='0' page_layout='layout-wtt' follow_auth_links='1' captcha_provider='none'></website>
<blog id='3' allow_comment_html='1' allow_commenter_regist='1' allow_comments_default='1' allow_pings='0' allow_pings_default='1' allow_reg_comments='0' allow_unreg_comments='0' archive_type='Monthly,Individual' archive_type_preferred='Individual' autodiscover_links='0' autolink_urls='1' basename_limit='100' children_modified_on='20140620130001' class='blog' convert_paras='__default__' convert_paras_comments='__default__' created_by='1' created_on='20110606221545' custom_dynamic_templates='none' days_on_index='0' email_new_comments='1' email_new_pings='1' entries_on_index='10' file_extension='html' internal_autodiscovery='0' junk_folder_expiry='14' junk_score_threshold='0' language='ja' moderate_pings='1' moderate_unreg_comments='2' modified_by='1' modified_on='20110606221704' name='最新情報' parent_id='2' ping_blogs='0' ping_google='0' ping_technorati='0' ping_weblogs='0' require_comment_emails='0' sanitize_spec='0' server_offset='9' site_path='news' site_url='/::/news/' sort_order_comments='ascend' sort_order_posts='descend' status_default='2' theme_id='theme_from_news' use_comment_confirmation='1' use_revision='1' words_in_excerpt='40' nwc_replace_field='title,text,text_more,keywords,excerpt,tags' template_set='HASH(0xa0617a8)' commenter_authenticators='MovableType,LiveJournal,Vox' max_revisions_template='20' max_revisions_entry='20' nofollow_urls='1' include_cache='1' page_layout='layout-wtt' nwc_smart_replace='0' follow_auth_links='1' captcha_provider='none'></blog>
<blog id='4' allow_comment_html='1' allow_commenter_regist='1' allow_comments_default='1' allow_pings='0' allow_pings_default='1' allow_reg_comments='0' allow_unreg_comments='0' archive_type='Page' autodiscover_links='0' autolink_urls='1' basename_limit='100' children_modified_on='20140408165903' class='blog' convert_paras='richtext' convert_paras_comments='__default__' created_by='1' created_on='20110606223353' custom_dynamic_templates='none' days_on_index='0' email_new_comments='1' email_new_pings='1' entries_on_index='10' file_extension='html' internal_autodiscovery='0' junk_folder_expiry='14' junk_score_threshold='0' language='ja' moderate_pings='1' moderate_unreg_comments='2' modified_by='1' modified_on='20110606223427' name='コース紹介' parent_id='2' ping_blogs='0' ping_google='0' ping_technorati='0' ping_weblogs='0' require_comment_emails='0' sanitize_spec='0' server_offset='9' site_path='course' site_url='/::/course/' sort_order_comments='ascend' sort_order_posts='descend' status_default='2' theme_id='theme_from_course' use_comment_confirmation='1' use_revision='1' words_in_excerpt='40' nwc_replace_field='title,text,text_more,keywords,excerpt,tags' template_set='HASH(0xa06ed20)' commenter_authenticators='MovableType,LiveJournal,Vox' max_revisions_template='20' max_revisions_entry='20' nofollow_urls='1' include_cache='1' page_layout='layout-wtt' nwc_smart_replace='0' follow_auth_links='1' captcha_provider='none'></blog>
<blog id='5' allow_comment_html='1' allow_commenter_regist='1' allow_comments_default='1' allow_pings='0' allow_pings_default='1' allow_reg_comments='0' allow_unreg_comments='0' archive_type='Page' autodiscover_links='0' autolink_urls='1' basename_limit='100' children_modified_on='20140607113118' class='blog' convert_paras='richtext' convert_paras_comments='__default__' created_by='1' created_on='20110606225428' custom_dynamic_templates='none' days_on_index='0' email_new_comments='1' email_new_pings='1' entries_on_index='10' file_extension='html' internal_autodiscovery='0' junk_folder_expiry='14' junk_score_threshold='0' language='ja' moderate_pings='1' moderate_unreg_comments='2' modified_by='1' modified_on='20110606225506' name='日ナレについて' parent_id='2' ping_blogs='0' ping_google='0' ping_technorati='0' ping_weblogs='0' require_comment_emails='0' sanitize_spec='0' server_offset='9' site_path='about' site_url='/::/about/' sort_order_comments='ascend' sort_order_posts='descend' status_default='2' theme_id='theme_from_about' use_comment_confirmation='1' use_revision='1' words_in_excerpt='40' nwc_replace_field='title,text,text_more,keywords,excerpt,tags' template_set='HASH(0xa0715b4)' commenter_authenticators='MovableType,LiveJournal,Vox' max_revisions_template='20' max_revisions_entry='20' nofollow_urls='1' include_cache='1' page_layout='layout-wtt' nwc_smart_replace='0' follow_auth_links='1' captcha_provider='none'></blog>
<blog id='6' allow_comment_html='1' allow_commenter_regist='1' allow_comments_default='1' allow_pings='0' allow_pings_default='1' allow_reg_comments='0' allow_unreg_comments='0' archive_type='Page' autodiscover_links='0' autolink_urls='1' basename_limit='100' children_modified_on='20140621112317' class='blog' convert_paras='richtext' convert_paras_comments='__default__' created_by='1' created_on='20110606225806' custom_dynamic_templates='none' days_on_index='0' email_new_comments='1' email_new_pings='1' entries_on_index='10' file_extension='html' internal_autodiscovery='0' junk_folder_expiry='14' junk_score_threshold='0' language='ja' moderate_pings='1' moderate_unreg_comments='2' modified_by='1' modified_on='20110606230014' name='入所方法／面接日程' parent_id='2' ping_blogs='0' ping_google='0' ping_technorati='0' ping_weblogs='0' require_comment_emails='0' sanitize_spec='0' server_offset='9' site_path='application' site_url='/::/application/' sort_order_comments='ascend' sort_order_posts='descend' status_default='2' theme_id='theme_from_application' use_comment_confirmation='1' use_revision='1' words_in_excerpt='40' nwc_replace_field='title,text,text_more,keywords,excerpt,tags' template_set='HASH(0xa07c688)' commenter_authenticators='MovableType,LiveJournal,Vox' max_revisions_template='20' max_revisions_entry='20' nofollow_urls='1' include_cache='1' page_layout='layout-wtt' nwc_smart_replace='0' follow_auth_links='1' captcha_provider='none'></blog>
<blog id='7' allow_comment_html='1' allow_commenter_regist='1' allow_comments_default='1' allow_pings='0' allow_pings_default='1' allow_reg_comments='0' allow_unreg_comments='0' archive_type='Individual,Monthly,Page' archive_type_preferred='Individual' autodiscover_links='0' autolink_urls='1' basename_limit='100' children_modified_on='20140621112853' class='blog' convert_paras='richtext' convert_paras_comments='__default__' created_by='1' created_on='20110609162441' custom_dynamic_templates='none' days_on_index='0' email_new_comments='1' email_new_pings='1' entries_on_index='10' file_extension='php' internal_autodiscovery='0' junk_folder_expiry='14' junk_score_threshold='0' language='ja' moderate_pings='1' moderate_unreg_comments='2' modified_by='1' modified_on='20110609163114' name='携帯サイト' parent_id='2' ping_blogs='0' ping_google='0' ping_technorati='0' ping_weblogs='0' require_comment_emails='0' sanitize_spec='0' server_offset='9' site_path='m' site_url='/::/m/' sort_order_comments='ascend' sort_order_posts='descend' status_default='2' theme_id='classic_blog' use_comment_confirmation='1' use_revision='1' words_in_excerpt='40' nwc_replace_field='title,text,text_more,keywords,excerpt,tags' template_set='HASH(0xa072e28)' commenter_authenticators='MovableType,LiveJournal,Vox' max_revisions_template='20' max_revisions_entry='20' nofollow_urls='1' include_cache='1' page_layout='layout-wtt' nwc_smart_replace='0' follow_auth_links='1' captcha_provider='none'></blog>
<blog id='8' allow_comment_html='1' allow_commenter_regist='1' allow_comments_default='1' allow_pings='0' allow_pings_default='1' allow_reg_comments='0' allow_unreg_comments='0' archive_type_preferred='Individual' autodiscover_links='0' autolink_urls='1' basename_limit='100' children_modified_on='20140403111413' class='blog' convert_paras='richtext' convert_paras_comments='__default__' created_by='1' created_on='20110610125206' custom_dynamic_templates='none' days_on_index='0' email_new_comments='1' email_new_pings='1' entries_on_index='10' file_extension='html' internal_autodiscovery='0' junk_folder_expiry='14' junk_score_threshold='0' language='ja' moderate_pings='1' moderate_unreg_comments='2' modified_by='1' modified_on='20110610125525' name='緊急用' parent_id='2' ping_blogs='0' ping_google='0' ping_technorati='0' ping_weblogs='0' require_comment_emails='0' sanitize_spec='0' server_offset='9' site_url='/::/' sort_order_comments='ascend' sort_order_posts='descend' status_default='2' theme_id='classic_blog' use_comment_confirmation='1' use_revision='1' words_in_excerpt='40' nwc_replace_field='title,text,text_more,keywords,excerpt,tags' template_set='HASH(0xa072e28)' commenter_authenticators='MovableType,LiveJournal,Vox' max_revisions_template='20' max_revisions_entry='20' nofollow_urls='1' include_cache='1' page_layout='layout-wtt' nwc_smart_replace='0' follow_auth_links='1' captcha_provider='none'><description>PC版TOPページのFlashエリア下に黒枠で掲載します</description></blog>
<blog id='9' allow_comment_html='1' allow_commenter_regist='1' allow_comments_default='0' allow_pings='0' allow_pings_default='0' allow_reg_comments='0' allow_unreg_comments='0' archive_type_preferred='Individual' autodiscover_links='0' autolink_urls='1' basename_limit='100' children_modified_on='20140401100707' class='blog' convert_paras='richtext' convert_paras_comments='__default__' created_by='1' created_on='20120123183054' custom_dynamic_templates='none' days_on_index='0' email_new_comments='1' email_new_pings='1' entries_on_index='10' file_extension='html' internal_autodiscovery='0' junk_folder_expiry='14' junk_score_threshold='0' language='ja' moderate_pings='1' moderate_unreg_comments='2' modified_by='1' modified_on='20120123183332' name='スマートフォン' parent_id='2' ping_blogs='0' ping_google='0' ping_technorati='0' ping_weblogs='0' require_comment_emails='0' sanitize_spec='0' server_offset='9' site_path='sp/' site_url='/::/sp/' sort_order_comments='ascend' sort_order_posts='descend' status_default='2' theme_id='classic_blog' use_comment_confirmation='1' use_revision='1' words_in_excerpt='40' nwc_replace_field='title,text,text_more,keywords,excerpt,tags' template_set='HASH(0xa072e28)' commenter_authenticators='MovableType,LiveJournal,Vox' max_revisions_template='20' max_revisions_entry='20' nofollow_urls='1' include_cache='0' page_layout='layout-wtt' nwc_smart_replace='0' follow_auth_links='1' captcha_provider='none'></blog>
<blog id='10' allow_comment_html='1' allow_commenter_regist='1' allow_comments_default='1' allow_pings='1' allow_pings_default='1' allow_reg_comments='1' allow_unreg_comments='0' archive_type='Page' archive_type_preferred='Individual' autolink_urls='1' basename_limit='100' children_modified_on='20120313180851' class='blog' convert_paras='richtext' convert_paras_comments='1' created_by='1' created_on='20120313171702' custom_dynamic_templates='none' days_on_index='0' email_new_comments='1' email_new_pings='1' entries_on_index='10' file_extension='php' internal_autodiscovery='0' junk_folder_expiry='14' junk_score_threshold='0' language='ja' moderate_pings='1' moderate_unreg_comments='2' modified_by='1' modified_on='20120313171832' name='コードテスト' parent_id='2' ping_blogs='0' ping_google='0' ping_technorati='0' ping_weblogs='0' require_comment_emails='0' sanitize_spec='0' server_offset='9' site_path='m/test' site_url='/::/m/test/' sort_order_comments='ascend' sort_order_posts='descend' status_default='2' theme_id='classic_blog' use_comment_confirmation='1' use_revision='1' words_in_excerpt='40' template_set='HASH(0xa072e28)' commenter_authenticators='MovableType,LiveJournal,Vox' max_revisions_template='20' max_revisions_entry='20' nofollow_urls='1' include_cache='0' page_layout='layout-wtt' follow_auth_links='1'></blog>
<blog id='11' allow_comment_html='1' allow_commenter_regist='1' allow_comments_default='1' allow_pings='0' allow_pings_default='1' allow_reg_comments='0' allow_unreg_comments='0' autodiscover_links='0' autolink_urls='1' basename_limit='100' children_modified_on='20140318180655' class='blog' convert_paras='richtext' convert_paras_comments='__default__' created_by='1' created_on='20130517174227' custom_dynamic_templates='none' days_on_index='0' email_new_comments='1' email_new_pings='1' entries_on_index='10' file_extension='html' internal_autodiscovery='0' junk_folder_expiry='14' junk_score_threshold='0' language='ja' moderate_pings='1' moderate_unreg_comments='2' modified_by='1' modified_on='20130517210232' name='声優をめざすあなたへ' parent_id='2' ping_blogs='0' ping_google='0' ping_technorati='0' ping_weblogs='0' require_comment_emails='0' sanitize_spec='0' server_offset='9' site_path='toyou' site_url='/::/toyou/' sort_order_comments='ascend' sort_order_posts='descend' status_default='2' theme_id='classic_blog' use_comment_confirmation='1' use_revision='1' words_in_excerpt='40' nwc_replace_field='title,text,text_more,keywords,excerpt,tags' template_set='HASH(0xa072e28)' commenter_authenticators='MovableType,LiveJournal,Vox' max_revisions_template='20' max_revisions_entry='20' nofollow_urls='1' include_cache='1' page_layout='layout-wtt' nwc_smart_replace='0' follow_auth_links='1' captcha_provider='none'><description>PC版TOPページエリア「声優をめざすあなたへ」に掲載します</description></blog>
<field id='1' basename='titleimg' blog_id='2' name='ページタイトル画像' obj_type='page' required='1' tag='TitleImg' type='image'><description>ページタイトル画像の指定</description></field>
<field id='2' basename='titleimg' blog_id='4' name='ページタイトル画像' obj_type='page' required='1' tag='TitleImg' type='image'><description>ページタイトル画像の指定</description></field>
<field id='3' basename='titleimg' blog_id='5' name='ページタイトル画像' obj_type='page' required='1' tag='TitleImg' type='image'><description>ページタイトル画像の指定</description></field>
<field id='4' basename='titleimg' blog_id='6' name='ページタイトル画像' obj_type='page' required='1' tag='TitleImg' type='image'><description>ページタイトル画像の指定</description></field>
<field id='11' basename='linkurl' blog_id='3' name='直接ページリンク' obj_type='entry' required='0' tag='urldata' type='url'><description>直接ページにリンクを貼る場合</description></field>
<field id='12' basename='linkurl' blog_id='7' name='直接ページリンク' obj_type='entry' required='0' tag='urldata' type='url'><description>直接ページにリンクを貼る場合</description></field>
<author id='1' api_password='8jicq21v' auth_type='MT' basename='admin' created_on='20110606204234' email='ishihara@patweb.jp' modified_on='20110606204234' name='admin' nickname='admin' password='$1$ll$BnabiFgnptCYifauCdiGj1' preferred_language='ja' status='1' type='1'><widgets>U0VSRwAAAAAAAAACSAAAAAwAAAAQZGFzaGJvYXJkOmJsb2c6OEgAAAABAAAADFNpdGVtYXAtYmxvZ0gAAAACAAAABW9yZGVyLQAAAAExAAAAA3NldC0AAAAEbWFpbgAAABBkYXNoYm9hcmQ6YmxvZzoySAAAAAIAAAAPU2l0ZW1hcC13ZWJzaXRlSAAAAAIAAAAFb3JkZXItAAAAATEAAAADc2V0LQAAAARtYWluAAAADHJlY2VudF9ibG9nc0gAAAACAAAABW9yZGVyLQAAAAExAAAAA3NldC0AAAAEbWFpbgAAABBkYXNoYm9hcmQ6YmxvZzo2SAAAAAEAAAAMU2l0ZW1hcC1ibG9nSAAAAAIAAAAFb3JkZXItAAAAATEAAAADc2V0LQAAAARtYWluAAAAEGRhc2hib2FyZDpibG9nOjVIAAAAAQAAAAxTaXRlbWFwLWJsb2dIAAAAAgAAAAVvcmRlci0AAAABMQAAAANzZXQtAAAABG1haW4AAAAQZGFzaGJvYXJkOmJsb2c6OUgAAAABAAAADFNpdGVtYXAtYmxvZ0gAAAACAAAABW9yZGVyLQAAAAExAAAAA3NldC0AAAAEbWFpbgAAABBkYXNoYm9hcmQ6YmxvZzo0SAAAAAEAAAAKYmxvZ19zdGF0c0gAAAADAAAABW9yZGVyLQAAAAExAAAABXBhcmFtSAAAAAEAAAADdGFiLQAAAAVlbnRyeQAAAANzZXQtAAAABG1haW4AAAAQZGFzaGJvYXJkOmJsb2c6MUgAAAABAAAADHJlY2VudF9ibG9nc0gAAAACAAAABW9yZGVyLQAAAAExAAAAA3NldC0AAAAEbWFpbgAAABBkYXNoYm9hcmQ6YmxvZzo3SAAAAAIAAAAMU2l0ZW1hcC1ibG9nSAAAAAIAAAAFb3JkZXItAAAAATEAAAADc2V0LQAAAARtYWluAAAAEnJlY2VudF9zdWJtaXNzaW9uc0gAAAACAAAABW9yZGVyLQAAAAExAAAAA3NldC0AAAAEbWFpbgAAABBkYXNoYm9hcmQ6dXNlcjoxSAAAAAMAAAANdGhpc19pc195b3UtMUgAAAACAAAABW9yZGVyLQAAAAExAAAAA3NldC0AAAAEbWFpbgAAAA5mYXZvcml0ZV9ibG9nc0gAAAADAAAABW9yZGVyLQAAAAEyAAAABXBhcmFtSAAAAAIAAAACLnItAAAAETAuNjM4MzM3ODA3MjY0MTc5AAAAA3RhYi0AAAAEYmxvZwAAAANzZXQtAAAABG1haW4AAAAMU2l0ZW1hcC11c2VySAAAAAIAAAAFb3JkZXItAAAAATEAAAADc2V0LQAAAARtYWluAAAAEGRhc2hib2FyZDpibG9nOjNIAAAAAQAAAApibG9nX3N0YXRzSAAAAAMAAAAFb3JkZXItAAAAATEAAAAFcGFyYW1IAAAAAQAAAAN0YWItAAAABWVudHJ5AAAAA3NldC0AAAAEbWFpbgAAABFkYXNoYm9hcmQ6YmxvZzoxMUgAAAACAAAADFNpdGVtYXAtYmxvZ0gAAAACAAAABW9yZGVyLQAAAAExAAAAA3NldC0AAAAEbWFpbgAAABJyZWNlbnRfc3VibWlzc2lvbnNIAAAAAgAAAAVvcmRlci0AAAABMQAAAANzZXQtAAAABG1haW4AAAAQZGFzaGJvYXJkOnN5c3RlbUgAAAABAAAAD3JlY2VudF93ZWJzaXRlc0gAAAACAAAABW9yZGVyLQAAAAExAAAAA3NldC0AAAAEbWFpbg==</widgets><favorite_blogs>U0VSRwAAAAAAAAACQQAAAAktAAAAATQtAAAAAjExLQAAAAIxMC0AAAABOS0AAAABNi0AAAABNS0AAAABMy0AAAABNy0AAAABOA==</favorite_blogs><favorite_websites>U0VSRwAAAAAAAAACQQAAAAItAAAAATItAAAAATE=</favorite_websites></author>
<author id='2' api_password='7d8rzp9b' auth_type='MT' basename='favor' created_by='1' created_on='20110623204914' email='otani@favor.co.jp' entry_prefs='tag_delim=44' modified_on='20110623204914' name='favor尾谷' nickname='favor尾谷' password='$1$Iv$IlaDnCiHhblZMkj7kmxET.' preferred_language='ja' status='1' text_format='0' type='1'></author>
<author id='3' api_password='rtfrv5em' auth_type='MT' basename='favor_1' created_by='1' created_on='20110708191903' email='ishihara@favor.co.jp' entry_prefs='tag_delim=44' modified_on='20110708191903' name='favor石原' nickname='favor石原' password='$1$VJ$Xn4F7nBE0gtICeseSMAOJ1' preferred_language='ja' status='1' text_format='0' type='1'></author>
<template id='38' blog_id='0' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606204235' identifier='profile_view' modified_on='20110606204235' name='プロフィール' rebuild_me='1' type='profile_view' current_revision='0'><text>
&lt;$mt:Var name=&quot;page_layout&quot; value=&quot;layout-wt&quot;$&gt;
&lt;mt:IfBlog&gt;
    &lt;mt:SetVarBlock name=&quot;blog_name&quot;&gt;&lt;$mt:BlogName encode_html=&quot;1&quot;$&gt;&lt;/mt:SetVarBlock&gt;
    &lt;mt:SetVarBlock name=&quot;page_title&quot;&gt;ユーザーのプロフィール&lt;/mt:SetVarBlock&gt;
    &lt;mt:SetVarBlock name=&quot;title&quot;&gt;&lt;mt:If name=&quot;blog_id&quot;&gt;&lt;$mt:Var name=&quot;blog_name&quot;$&gt;: &lt;/mt:If&gt;&lt;$mt:Var name=&quot;page_title&quot;$&gt;: &lt;$mt:AuthorDisplayName encode_html=&quot;1&quot;$&gt;&lt;/mt:SetVarBlock&gt;
&lt;mt:Else&gt;
    &lt;mt:SetVarBlock name=&quot;blog_name&quot;&gt;ブログ名&lt;/mt:SetVarBlock&gt;
    &lt;mt:SetVarBlock name=&quot;page_title&quot;&gt;ユーザーのプロフィール&lt;/mt:SetVarBlock&gt;
    &lt;mt:SetVarBlock name=&quot;title&quot;&gt;&lt;mt:If name=&quot;blog_id&quot;&gt;&lt;$mt:Var name=&quot;blog_name&quot;$&gt;: &lt;/mt:If&gt;&lt;$mt:Var name=&quot;page_title&quot;$&gt;: &lt;$mt:AuthorDisplayName encode_html=&quot;1&quot;$&gt;&lt;/mt:SetVarBlock&gt;
&lt;/mt:IfBlog&gt;
&lt;$mt:Var name=&quot;hide_signout_link&quot; value=&quot;1&quot;$&gt;
&lt;mt:SetVarBlock name=&quot;html_head&quot;&gt;
&lt;link type=&quot;application/atom+xml&quot; rel=&quot;alternate&quot; title=&quot;最近の&lt;$mt:AuthorDisplayName encode_html=&quot;1&quot;$&gt;のアクション&quot; href=&quot;&lt;$mt:CGIPath$&gt;&lt;$mt:CommunityScript$&gt;?__mode=feed&amp;amp;_type=actions&amp;amp;blog_id=&lt;$mt:BlogID$&gt;&amp;amp;id=&lt;$mt:AuthorID$&gt;&quot; /&gt;
&lt;link type=&quot;application/atom+xml&quot; rel=&quot;alternate&quot; title=&quot;&lt;$mt:AuthorDisplayName encode_html=&quot;1&quot;$&gt;の最近のブログ記事&quot; href=&quot;&lt;$mt:CGIPath$&gt;&lt;$mt:CommunityScript$&gt;?__mode=feed&amp;amp;_type=posts&amp;amp;blog_id=&lt;$mt:BlogID$&gt;&amp;amp;id=&lt;$mt:AuthorID$&gt;&quot; /&gt;
&lt;link type=&quot;application/atom+xml&quot; rel=&quot;alternate&quot; title=&quot;&lt;$mt:AuthorDisplayName encode_html=&quot;1&quot;$&gt;からのコメント&quot; href=&quot;&lt;$mt:CGIPath$&gt;&lt;$mt:CommunityScript$&gt;?__mode=feed&amp;amp;_type=comments&amp;amp;blog_id=&lt;$mt:BlogID$&gt;&amp;amp;id=&lt;$mt:AuthorID$&gt;&quot; /&gt;
&lt;link type=&quot;application/atom+xml&quot; rel=&quot;alternate&quot; title=&quot;&lt;$mt:AuthorDisplayName encode_html=&quot;1&quot;$&gt;のコメントへの返信&quot; href=&quot;&lt;$mt:CGIPath$&gt;&lt;$mt:CommunityScript$&gt;?__mode=feed&amp;amp;_type=replies&amp;amp;blog_id=&lt;$mt:BlogID$&gt;&amp;amp;id=&lt;$mt:AuthorID$&gt;&quot; /&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
&lt;!--
function relations(following, followed, u) {
    mtSetUser(u);
    if ( u &amp;&amp; u.name )
        conditional_block(&lt;mt:If name=&quot;profile_self&quot;&gt;true&lt;mt:Else&gt;false&lt;/mt:If&gt;, &apos;edit_profile&apos;);
&lt;mt:If name=&quot;profile_self&quot;&gt;
    var a = document.getElementById(&apos;edit_profile_link&apos;);
    a.href = &apos;&lt;$mt:CGIPath$&gt;&lt;$mt:CommunityScript$&gt;?__mode=edit&amp;blog_id=&lt;$mt:BlogID$&gt;&amp;return_to=&apos; + encodeURIComponent(document.URL);
&lt;/mt:If&gt;
    conditional_block(followed, &apos;followed_&lt;$mt:AuthorID$&gt;&apos;);
    conditional_block(following, &apos;following_&lt;$mt:AuthorID$&gt;&apos;);
}
//--&gt;
&lt;/script&gt;
&lt;/mt:SetVarBlock&gt;

&lt;$mt:Include module=&quot;ヘッダー&quot; body_class=&quot;mt-profile-view&quot;$&gt;

&lt;$mt:Include module=&quot;プロフィール画像&quot; userpic_type=&quot;profile&quot; userpic_size=&quot;90&quot;$&gt;

&lt;h1 id=&quot;page-title&quot;&gt;&lt;$mt:AuthorDisplayName encode_html=&quot;1&quot;$&gt;&lt;/h1&gt;

&lt;mt:IfLoggedIn element_id=&quot;edit_profile&quot;&gt;
&lt;p&gt;&lt;a id=&quot;edit_profile_link&quot; href=&quot;#&quot;&gt;ユーザー情報の編集&lt;/a&gt;&lt;/p&gt;
&lt;mt:Else&gt;
&lt;p class=&quot;edit-relation&quot;&gt;
    &lt;span id=&quot;following-status&quot;&gt;&lt;/span&gt;
    &lt;mt:AuthorIfFollowing script=&quot;0&quot;&gt;
    &lt;$mt:AuthorDisplayName encode_html=&quot;1&quot;$&gt;に注目しています。 &lt;$mt:AuthorUnfollowLink text=&quot;注目をやめる&quot;$&gt;
    &lt;mt:Else&gt;
    &lt;$mt:AuthorFollowLink text=&quot;注目する&quot;$&gt;
    &lt;/mt:AuthorIfFollowing&gt;
&amp;nbsp;&lt;/p&gt;

    &lt;mt:Ignore&gt;
        &lt;mt:AuthorIfFollowed script=&quot;0&quot;&gt;
&lt;p&gt;&lt;$mt:AuthorDisplayName encode_html=&quot;1&quot;$&gt;に注目されています。&lt;/p&gt;
        &lt;mt:Else&gt;
&lt;p&gt;&lt;$mt:AuthorDisplayName encode_html=&quot;1&quot;$&gt;は注目していません。&lt;/p&gt;
        &lt;/mt:AuthorIfFollowed&gt;
    &lt;/mt:Ignore&gt;

    &lt;mt:SetVarBlock name=&quot;html_body_footer&quot; append=&quot;1&quot;&gt;
    &lt;script type=&quot;text/javascript&quot; src=&quot;&lt;$mt:CGIPath$&gt;&lt;$mt:CommunityScript$&gt;?__mode=relations_js&amp;author_id=&lt;$mt:AuthorID$&gt;&lt;mt:If name=&quot;blog_id&quot;&gt;&amp;blog_id=&lt;$mt:Var name=&quot;blog_id&quot;$&gt;&lt;/mt:If&gt;&quot;&gt;&lt;/script&gt;
    &lt;/mt:SetVarBlock&gt;
&lt;/mt:IfLoggedIn&gt;

&lt;ul id=&quot;profile-data&quot;&gt;
&lt;mt:If tag=&quot;AuthorURL&quot;&gt;
    &lt;li&gt;&lt;strong&gt;ウェブサイト&lt;/strong&gt; &lt;a href=&quot;&lt;$mt:AuthorURL encode_html=&quot;1&quot;$&gt;&quot; target=&quot;_blank&quot;&gt;&lt;$mt:AuthorURL regex_replace=&quot;/^\w+:\/\//&quot;,&quot;&quot; encode_html=&quot;1&quot;$&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/mt:If&gt;
&lt;mt:Loop name=&quot;field_loop&quot;&gt;
    &lt;mt:If name=&quot;value&quot;&gt;
    &lt;li&gt;&lt;strong&gt;&lt;$mt:Var name=&quot;name&quot; escape=&quot;html&quot;$&gt;:&lt;/strong&gt;&lt;mt:If name=&quot;type&quot; eq=&quot;datetime&quot;&gt;&lt;$mt:Var name=&quot;field_value&quot;$&gt;&lt;mt:Else&gt;&lt;$mt:Var name=&quot;field_value&quot; sanitize=&quot;1&quot;$&gt;&lt;/mt:If&gt;&lt;/li&gt;
    &lt;/mt:If&gt;
&lt;/mt:Loop&gt;
&lt;/ul&gt;

&lt;ul id=&quot;tabs&quot;&gt; 
    &lt;li&gt;&lt;a href=&quot;#profile-recent-actions&quot; class=&quot;active&quot; onclick=&quot;switchTabs(&apos;tabs&apos;,this)&quot;&gt;最近のアクション&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;#profile-comment-threads&quot; class=&quot;&quot; onclick=&quot;switchTabs(&apos;tabs&apos;,this)&quot;&gt;コメントスレッド&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;

&lt;div id=&quot;profile-recent-actions&quot; class=&quot;tab_content&quot;&gt; 
    &lt;h3 class=&quot;tab_content_label&quot;&gt;最近のアクション&lt;/h3&gt;

&lt;mt:Actions namespace=&quot;community_pack_recommend&quot; include_blogs=&quot;all&quot; sort_order=&quot;descend&quot; lastn=&quot;30&quot;&gt;
    &lt;mt:ActionsHeader&gt;
    &lt;ul class=&quot;recent-actions&quot;&gt;
    &lt;/mt:ActionsHeader&gt;
    &lt;mt:ActionsEntry&gt;
        &lt;li class=&quot;entry icon-entry&quot;&gt;
            &lt;a href=&quot;&lt;$mt:EntryBlogURL$&gt;&quot; class=&quot;icon-blog&quot;&gt;&lt;$mt:EntryBlogName$&gt;&lt;/a&gt;に&lt;a href=&quot;&lt;$mt:EntryLink$&gt;&quot;&gt;&lt;$mt:EntryTitle encode_html=&quot;1&quot;$&gt;&lt;/a&gt;を作成しました。
            &lt;div class=&quot;excerpt&quot;&gt;&lt;$mt:EntryExcerpt$&gt;&lt;/div&gt;
        &lt;/li&gt;
    &lt;/mt:ActionsEntry&gt;
    &lt;mt:ActionsComment&gt;
        &lt;li class=&quot;comment icon-comment&quot;&gt;
            &lt;mt:CommentEntry&gt;&lt;a href=&quot;&lt;$mt:CommentLink$&gt;&quot;&gt;&lt;$mt:EntryTitle encode_html=&quot;1&quot;$&gt;&lt;/a&gt;&lt;/mt:CommentEntry&gt;にコメントしました。
            &lt;div class=&quot;excerpt&quot;&gt;&lt;$mt:CommentBody words=&quot;40&quot;$&gt;...&lt;/div&gt;
        &lt;/li&gt;
    &lt;/mt:ActionsComment&gt;
    &lt;mt:ActionsFavorite&gt;
        &lt;li class=&quot;score icon-score&quot;&gt;
            &lt;a href=&quot;&lt;$mt:EntryBlogURL$&gt;&quot; class=&quot;icon-blog&quot;&gt;&lt;$mt:EntryBlogName$&gt;&lt;/a&gt;の&lt;a href=&quot;&lt;$mt:EntryLink$&gt;&quot;&gt;&lt;$mt:EntryTitle encode_html=&quot;1&quot;$&gt;&lt;/a&gt;をお気に入りに追加しました。
        &lt;/li&gt;
    &lt;/mt:ActionsFavorite&gt;
    &lt;mt:ActionsFooter&gt;
    &lt;/ul&gt;
    &lt;/mt:ActionsFooter&gt;
&lt;mt:Else&gt;
    &lt;p class=&quot;note&quot;&gt;最近アクションはありません&lt;/p&gt;

&lt;/mt:Actions&gt;

&lt;img src=&quot;&lt;$mt:StaticWebPath$&gt;images/status_icons/feed.gif&quot; alt=&quot;購読する&quot; /&gt; &lt;a href=&quot;&lt;$mt:CGIPath$&gt;&lt;$mt:CommunityScript$&gt;?__mode=feed&amp;amp;_type=actions&amp;amp;blog_id=&lt;$mt:BlogID$&gt;&amp;amp;id=&lt;$mt:AuthorID$&gt;&quot;&gt;最近の&lt;$mt:AuthorDisplayName encode_html=&quot;1&quot;$&gt;のアクション&lt;/a&gt;
&lt;/div&gt;

&lt;div id=&quot;profile-comment-threads&quot; class=&quot;tab_content hidden&quot;&gt; 
    &lt;h3 class=&quot;tab_content_label&quot;&gt;コメントスレッド&lt;/h3&gt;

&lt;mt:AuthorCommentResponses lastn=&quot;5&quot;&gt;  
    &lt;mt:CommentsHeader&gt;  
    &lt;ul class=&quot;recent-actions&quot;&gt;  
    &lt;/mt:CommentsHeader&gt; 
        &lt;li class=&quot;comment icon-comment&quot;&gt;
            &lt;a href=&quot;&lt;$mt:Var name=&quot;profile_view_url&quot; encode_html=&quot;1&quot;$&gt;&lt;$mt:CommenterID$&gt;&quot;&gt;&lt;$mt:CommenterName encode_html=&quot;1&quot;$&gt;&lt;/a&gt;のコメント: 
                &lt;mt:CommentEntry&gt;&lt;a href=&quot;&lt;$mt:CommentLink$&gt;&quot;&gt;&lt;$mt:EntryTitle encode_html=&quot;1&quot;$&gt;&lt;/a&gt;&lt;/mt:CommentEntry&gt;
            &lt;div class=&quot;excerpt&quot;&gt;&lt;$mt:CommentBody words=&quot;100&quot;$&gt;...&lt;/div&gt;
    &lt;mt:CommentsFooter&gt; 
    &lt;/ul&gt; 
    &lt;/mt:CommentsFooter&gt;  
&lt;mt:Else&gt; 
    &lt;p class=&quot;note&quot;&gt;コメントへの返信がありません。&lt;/p&gt; 
&lt;/mt:AuthorCommentResponses&gt;  
&lt;img src=&quot;&lt;$mt:StaticWebPath$&gt;images/status_icons/feed.gif&quot; alt=&quot;購読する&quot; /&gt; &lt;a href=&quot;&lt;$mt:CGIPath$&gt;&lt;$mt:CommunityScript$&gt;?__mode=feed&amp;_type=replies&amp;blog_id=&lt;$mt:BlogID$&gt;&amp;id=&lt;$mt:AuthorID$&gt;&quot;&gt;&lt;$mt:AuthorDisplayName encode_html=&quot;1&quot;$&gt;のコメントへの返信&lt;/a&gt;

&lt;/div&gt;

&lt;mt:SetVarBlock name=&quot;profile_widgets&quot;&gt;
&lt;div class=&quot;widget-following widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;注目&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
&lt;mt:AuthorFollowing&gt;
    &lt;mt:If name=&quot;__first__&quot;&gt;
        &lt;ul class=&quot;user-listing&quot;&gt;
    &lt;/mt:If&gt;
            &lt;li class=&quot;pkg&quot;&gt;
                &lt;$mt:Include module=&quot;プロフィール画像&quot; userpic_size=&quot;36&quot; userpic_type=&quot;userlist&quot;$&gt;
                &lt;a href=&quot;&lt;$mt:Var name=&quot;profile_view_url&quot; encode_html=&quot;1&quot;$&gt;&lt;$mt:AuthorID$&gt;&quot; class=&quot;user-name&quot;&gt;&lt;$mt:AuthorDisplayName encode_html=&quot;1&quot;$&gt;&lt;/a&gt;
                &lt;a href=&quot;&lt;$mt:AuthorURL$&gt;&quot; class=&quot;user-url&quot;&gt;&lt;$mt:AuthorURL regex_replace=&quot;/^\w+:\/\//&quot;,&quot;&quot; $&gt;&lt;/a&gt;
            &lt;/li&gt;
    &lt;mt:If name=&quot;__last__&quot;&gt;
        &lt;/ul&gt;
    &lt;/mt:If&gt;
&lt;mt:Else&gt;
    &lt;p class=&quot;note&quot;&gt;まだ誰にも注目していません。&lt;/p&gt;
&lt;/mt:AuthorFollowing&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;mt:if name=&quot;profile_self&quot;&gt;
    &lt;div class=&quot;widget-followers widget&quot;&gt;
        &lt;h3 class=&quot;widget-header&quot;&gt;被注目&lt;/h3&gt;
        &lt;div class=&quot;widget-content&quot;&gt;
    &lt;mt:AuthorFollowers&gt;
        &lt;mt:If name=&quot;__first__&quot;&gt;
            &lt;ul class=&quot;user-listing&quot;&gt;
        &lt;/mt:If&gt;
                &lt;li class=&quot;pkg&quot;&gt;
                    &lt;$mt:Include module=&quot;プロフィール画像&quot; userpic_size=&quot;36&quot; userpic_type=&quot;userlist&quot;$&gt;
                    &lt;a href=&quot;&lt;$mt:Var name=&quot;profile_view_url&quot; encode_html=&quot;1&quot;$&gt;&lt;$mt:AuthorID$&gt;&quot; class=&quot;user-name&quot;&gt;&lt;$mt:AuthorDisplayName encode_html=&quot;1&quot;$&gt;&lt;/a&gt;
                    &lt;a href=&quot;&lt;$mt:AuthorURL$&gt;&quot; class=&quot;user-url&quot;&gt;&lt;$mt:AuthorURL regex_replace=&quot;/^\w+:\/\//&quot;,&quot;&quot; $&gt;&lt;/a&gt;
                &lt;/li&gt;
        &lt;mt:If name=&quot;__last__&quot;&gt;
            &lt;/ul&gt;
        &lt;/mt:If&gt;
    &lt;mt:Else&gt;
        &lt;p class=&quot;note&quot;&gt;まだ注目されていないようです。&lt;/p&gt;
    &lt;/mt:AuthorFollowers&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/mt:if&gt;
&lt;/mt:SetVarBlock&gt;

&lt;mt:IfBlog&gt;
&lt;$mt:Include module=&quot;フッター&quot;$&gt;
&lt;mt:Else&gt;
&lt;$mt:Include module=&quot;フッター&quot; hide_sidebar=&quot;1&quot;$&gt;
&lt;/mt:IfBlog&gt;

</text></template>
<template id='39' blog_id='0' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606204235' identifier='notify-entry' modified_on='20110606204235' name='ブログ記事の共有' rebuild_me='1' type='email' current_revision='0'><text>新しい&lt;$mt:EntryClassLabel$&gt;「&lt;$mt:EntryTitle$&gt;」を&lt;$mt:BlogName$&gt;で公開しました。

&lt;mt:If name=&quot;object_type&quot; eq=&quot;entry&quot;&gt;表示する&lt;mt:Else&gt;表示する&lt;/mt:If&gt; &lt;&lt;mt:SetVarBlock name=&quot;entry_status&quot;&gt;&lt;$mt:EntryStatus$&gt;&lt;/mt:SetVarBlock&gt;&lt;mt:If name=&quot;entry_status&quot; eq=&quot;Publish&quot;&gt;&lt;$mt:EntryPermalink$&gt;&lt;mt:Else&gt;&lt;$mt:Var name=&quot;entry_editurl&quot;$&gt;&lt;/mt:If&gt;&gt;

------------------------------------------------------------------------
タイトル: &lt;$mt:EntryTitle$&gt;
日付: &lt;$mt:EntryDate mail=&quot;1&quot;$&gt;
&lt;mt:If name=&quot;send_excerpt&quot;&gt;

&lt;$mt:EntryExcerpt wrap_text=&quot;72&quot;$&gt;
&lt;/mt:If&gt;
------------------------------------------------------------------------

&lt;mt:If name=&quot;message&quot;&gt;メッセージ: 
&lt;$mt:Var name=&quot;message&quot;$&gt;&lt;/mt:If&gt;
&lt;mt:If name=&quot;send_body&quot;&gt;
------------------------------------------------------------------------

&lt;$mt:EntryBody remove_html=&quot;1&quot; wrap_text=&quot;72&quot;$&gt;

------------------------------------------------------------------------&lt;/mt:If&gt;

このメールは&lt;$mt:BlogName$&gt;で新規に作成されたコンテンツに関する通知を送るように設定されているか、またはコンテンツの著者が選択したユーザーに送信されています。このメールを受信したくない場合は、次のユーザーに連絡してください:

&lt;$mt:AuthorDisplayName$&gt; &lt;&lt;$mt:AuthorEmail$&gt;&gt;
</text></template>
<template id='40' blog_id='0' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606204235' identifier='recover-password' modified_on='20110606204235' name='パスワードの再設定' rebuild_me='1' type='email' current_revision='0'><text>パスワードをリセットしようとしています。以下のリンクをクリックして、新しいパスワードを設定してください。

&lt;mt:var name=&quot;link_to_login&quot;&gt;

このメールに心当たりがないときは、何もせずに無視してください。

&lt;mt:include module=&quot;メールフッター&quot;&gt;
</text></template>
<template id='41' blog_id='0' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606204235' identifier='profile_error' modified_on='20110606204235' name='プロフィールエラー' rebuild_me='1' type='profile_error' current_revision='0'><text>
&lt;$mt:Var name=&quot;body_class&quot; value=&quot;mt-profile-error&quot;$&gt;
&lt;mt:SetVarBlock name=&quot;page_title&quot;&gt;プロフィールエラー&lt;/mt:SetVarBlock&gt;
&lt;mt:SetVarBlock name=&quot;title&quot;&gt;&lt;mt:If name=&quot;blog_id&quot;&gt;&lt;$mt:BlogName encode_html=&quot;1&quot;$&gt;: &lt;/mt:If&gt;&lt;$mt:Var name=&quot;page_title&quot;$&gt;&lt;/mt:SetVarBlock&gt;

&lt;$mt:Include module=&quot;ヘッダー&quot;$&gt;

&lt;h1 id=&quot;page-title&quot; class=&quot;asset-name&quot;&gt;&lt;$mt:Var name=&quot;page_title&quot;$&gt;&lt;/h1&gt;

&lt;mt:SetVarBlock name=&quot;status-msg&quot;&gt;＊エラーメッセージを記述してください＊&lt;/mt:SetVarBlock&gt;
&lt;$mt:Include module=&quot;ステータスメッセージ&quot; id=&quot;generic-error&quot; class=&quot;error&quot;$&gt;

&lt;p&gt;&lt;a href=&quot;javascript:void(0)&quot; onclick=&quot;history.back()&quot;&gt;戻る&lt;/a&gt;&lt;/p&gt;

&lt;$mt:Include module=&quot;フッター&quot;$&gt;

</text></template>
<template id='42' blog_id='0' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606204235' identifier='status_message' modified_on='20110606204235' name='ステータスメッセージ' rebuild_me='1' type='custom' current_revision='0'><text>&lt;div id=&quot;&lt;$mt:Var name=&quot;id&quot;$&gt;&quot; class=&quot;&lt;$mt:Var name=&quot;class&quot;$&gt;&quot;&gt;&lt;$mt:Var name=&quot;status-msg&quot;$&gt;&lt;/div&gt;
</text></template>
<template id='43' blog_id='0' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606204235' identifier='email_verification_email' modified_on='20110606204235' name='メールアドレスの確認' rebuild_me='1' type='email' current_revision='0'><text>
&lt;$mt:BlogName$&gt;にご登録いただきありがとうございます。 

セキュリティおよび不正利用を防ぐ観点から、アカウントとメールアドレスの確認をお願いしています。確認され次第、&lt;$mt:BlogName$&gt;にサインインできるようになります。

アカウントの確認のため、次のURLをクリックするか、コピーしてブラウザのアドレス欄に貼り付けてください。

&lt;$mt:Var name=&quot;confirm_url&quot;$&gt;

このメールに覚えがない場合や、&lt;$mt:BlogName$&gt;に登録するのをやめたい場合は、何もする必要はありません。

ご協力ありがとうございます。

 
&lt;$mt:BlogName$&gt;

&lt;$mt:Include module=&quot;メールフッター&quot;$&gt;

</text></template>
<template id='44' blog_id='0' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606204235' identifier='javascript' modified_on='20110606204235' name='GlobalJavaScript' rebuild_me='1' type='custom' current_revision='0'><text>
&lt;mt:Ignore&gt;
/***
 * Movable Type Community Solution Functions
 */
&lt;/mt:Ignore&gt;

function conditional_block(cond, id) {
    var true_block = document.getElementById(id);
    var false_block = document.getElementById(id + &apos;_else&apos;);
    if (cond) {
        if (true_block) {
            var display = true_block.getAttribute(&apos;mt:display_style&apos;);
            if (!display &amp;&amp; false_block)
                display = false_block.getAttribute(&apos;mt:display_style&apos;);
            if (!display) display = &apos;&apos;;
            true_block.style.display = display;
            DOM.removeClassName(true_block, &apos;hidden&apos;);
        }
        if (false_block) {
            false_block.style.display = &apos;none&apos;;
            DOM.addClassName(false_block, &apos;hidden&apos;);
        }
    }
    else {
        if (true_block) {
            true_block.style.display = &apos;none&apos;;
            DOM.addClassName(true_block, &apos;hidden&apos;);
        }
        if (false_block) {
            var display = false_block.getAttribute(&apos;mt:display_style&apos;);
            if (!display &amp;&amp; true_block)
                display = false_block.getAttribute(&apos;mt:display_style&apos;);
            if (!display) display = &apos;&apos;;
            false_block.style.display = display;
            DOM.removeClassName(false_block, &apos;hidden&apos;);
        }
    }
}

if(!this.JSON){JSON={};}(function(){function f(n){return n&lt;10?&apos;0&apos;+n:n;}if(typeof Date.prototype.toJSON!==&apos;function&apos;){Date.prototype.toJSON=function(key){return this.getUTCFullYear()+&apos;-&apos;+f(this.getUTCMonth()+1)+&apos;-&apos;+f(this.getUTCDate())+&apos;T&apos;+f(this.getUTCHours())+&apos;:&apos;+f(this.getUTCMinutes())+&apos;:&apos;+f(this.getUTCSeconds())+&apos;Z&apos;;};String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(key){return this.valueOf();};}var cx=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,escapable=/[\\\&quot;\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta={&apos;\b&apos;:&apos;\\b&apos;,&apos;\t&apos;:&apos;\\t&apos;,&apos;\n&apos;:&apos;\\n&apos;,&apos;\f&apos;:&apos;\\f&apos;,&apos;\r&apos;:&apos;\\r&apos;,&apos;&quot;&apos;:&apos;\\&quot;&apos;,&apos;\\&apos;:&apos;\\\\&apos;},rep;function quote(string){escapable.lastIndex=0;return escapable.test(string)?&apos;&quot;&apos;+string.replace(escapable,function(a){var c=meta[a];return typeof c===&apos;string&apos;?c:&apos;\\u&apos;+(&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);})+&apos;&quot;&apos;:&apos;&quot;&apos;+string+&apos;&quot;&apos;;}function str(key,holder){var i,k,v,length,mind=gap,partial,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;&amp;&amp;typeof value.toJSON===&apos;function&apos;){value=value.toJSON(key);}if(typeof rep===&apos;function&apos;){value=rep.call(holder,key,value);}switch(typeof value){case&apos;string&apos;:return quote(value);case&apos;number&apos;:return isFinite(value)?String(value):&apos;null&apos;;case&apos;boolean&apos;:case&apos;null&apos;:return String(value);case&apos;object&apos;:if(!value){return&apos;null&apos;;}gap+=indent;partial=[];if(Object.prototype.toString.apply(value)===&apos;[object Array]&apos;){length=value.length;for(i=0;i&lt;length;i+=1){partial[i]=str(i,value)||&apos;null&apos;;}v=partial.length===0?&apos;[]&apos;:gap?&apos;[\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+mind+&apos;]&apos;:&apos;[&apos;+partial.join(&apos;,&apos;)+&apos;]&apos;;gap=mind;return v;}if(rep&amp;&amp;typeof rep===&apos;object&apos;){length=rep.length;for(i=0;i&lt;length;i+=1){k=rep[i];if(typeof k===&apos;string&apos;){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}}else{for(k in value){if(Object.hasOwnProperty.call(value,k)){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}}v=partial.length===0?&apos;{}&apos;:gap?&apos;{\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+mind+&apos;}&apos;:&apos;{&apos;+partial.join(&apos;,&apos;)+&apos;}&apos;;gap=mind;return v;}}if(typeof JSON.stringify!==&apos;function&apos;){JSON.stringify=function(value,replacer,space){var i;gap=&apos;&apos;;indent=&apos;&apos;;if(typeof space===&apos;number&apos;){for(i=0;i&lt;space;i+=1){indent+=&apos; &apos;;}}else if(typeof space===&apos;string&apos;){indent=space;}rep=replacer;if(replacer&amp;&amp;typeof replacer!==&apos;function&apos;&amp;&amp;(typeof replacer!==&apos;object&apos;||typeof replacer.length!==&apos;number&apos;)){throw new Error(&apos;JSON.stringify&apos;);}return str(&apos;&apos;,{&apos;&apos;:value});};}if(typeof JSON.parse!==&apos;function&apos;){JSON.parse=function(text,reviver){var j;function walk(holder,key){var k,v,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;){for(k in value){if(Object.hasOwnProperty.call(value,k)){v=walk(value,k);if(v!==undefined){value[k]=v;}else{delete value[k];}}}}return reviver.call(holder,key,value);}cx.lastIndex=0;if(cx.test(text)){text=text.replace(cx,function(a){return&apos;\\u&apos;+(&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);});}if(/^[\],:{}\s]*$/.test(text.replace(/\\(?:[&quot;\\\/bfnrt]|u[0-9a-fA-F]{4})/g,&apos;@&apos;).replace(/&quot;[^&quot;\\\n\r]*&quot;|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,&apos;]&apos;).replace(/(?:^|:|,)(?:\s*\[)+/g,&apos;&apos;))){j=eval(&apos;(&apos;+text+&apos;)&apos;);return typeof reviver===&apos;function&apos;?walk({&apos;&apos;:j},&apos;&apos;):j;}throw new SyntaxError(&apos;JSON.parse&apos;);};}}());

var MT = window.MT || {};

MT.cons = function () {
  return {
    LOG : &apos;log&apos;,
    WARN : &apos;warn&apos;,
    DEBUG : &apos;debug&apos;,
    INFO : &apos;info&apos;,
    ERR : &apos;error&apos;,
    JSON : &apos;json&apos;
  };
}();

&lt;mt:Ignore&gt;
/**
 * Used for base functionality related to MT
 * 
 * @package MT
 * @class core
 * @global
 * @param {Object} o optional configuration object
 * Options:
 */
&lt;/mt:Ignore&gt;
MT.core = function (o) {
  var _debug = false;
  
  return {
    &lt;mt:Ignore&gt;
    /**
     * Makes remote call and handles response
     * 
     * @param {String} url The URL endpoint
     * @param {String} respType The type of response expected
     * @param {Function} respHandler The function to handle the response
     * @return void
     */
    &lt;/mt:Ignore&gt;
    connect : function (url,respType,respHandler) {
      var xh = mtGetXmlHttp();
      if (!xh) return false;
      
      xh.onreadystatechange = function() {
        if ( xh.readyState == 4 ) {
          if ( xh.status &amp;&amp; ( xh.status != 200 ) ) {
            // error - ignore
          } else {
            switch (respType) {
              case &apos;json&apos;:
                respHandler(JSON.parse(xh.responseText));
                break;
                
              case &apos;xml&apos;:
                break;
                
              case &apos;text&apos;:
                break;
            }
          }
        }
      };
      
      xh.open(&apos;GET&apos;,url);
      xh.send(null);
    },
    
    getEl : function (el) {
      return MT.util.checkNodeType(el)===&apos;element&apos; ? id : (document.getElementById(el) || false);
    },
    
    addEvent : function (el,type,func,obj) {
      if(!obj &amp;&amp; document.addEventListener) {
        el.addEventListener(type,func,false);
      } else if(obj &amp;&amp; document.addEventListener) {
        el.addEventListener(type,function () {
          func.call(obj,event);
        },false);
      } else {
        if(obj) {
          el.attachEvent(&apos;on&apos; + type,function () {
            func.call(obj,event);
          });
        } else {
          el.attachEvent(&apos;on&apos; + type,function () {          
            func.call(el,event);
          });
        }
      }
    },
    
    &lt;mt:Ignore&gt;
    /**
     * Basic logging function
     * 
     * @param {String} level The log level (WARN|DEBUG|INFO|ERROR|LOG)
     * Specified by one of the MT constants
     * @param {String} msg The log message
     * @return void
     */
    &lt;/mt:Ignore&gt;
    log : function (level,msg) {
      if(_debug &amp;&amp; window.console) {
        switch(level) {
          case &apos;warn&apos;:
          case &apos;debug&apos;:
          case &apos;info&apos;:
          case &apos;error&apos;:
          case &apos;log&apos;:
            console[level](msg);
            break;
            
          default:
            return false; 
        }
      } else {
        return false;
      }
    }
  }
}();

&lt;mt:Ignore&gt;
/**
 * Utilities class
 * 
 * @package MT
 * @class util
 * @global
 * Options:
 */
&lt;/mt:Ignore&gt;
MT.util = function () {
  return {
    toggleVisibility : {
      show : function () {
        var i = arguments.length;
        
        while(i--) {
          if(MT.util.checkNodeType(arguments[i])===&apos;element&apos;) {
            arguments[i].style.visibility = &apos;visible&apos;;
          } else {
            MT.core.getEl(arguments[i]).style.visibility = &apos;visible&apos;;
          }
        }
      },
      
      hide : function () {
        var i = arguments.length;
        while(i--) {
          if(MT.util.checkNodeType(arguments[i])===&apos;element&apos;) {
            arguments[i].style.visibility = &apos;hidden&apos;;
          } else {
            MT.core.getEl(arguments[i]).style.visibility = &apos;hidden&apos;;
          }
        }
      }
    },
    
    toggleDisplay : {
      show : function () {
        var i = arguments.length;
        while(i--) {
          if(MT.util.checkNodeType(arguments[i])===&apos;element&apos;) {
            arguments[i].style.display = &apos;&apos;;
          } else {
            MT.core.getEl(arguments[i]).style.display = &apos;&apos;;
          }
        }
      },
      
      hide : function () {
        var i = arguments.length;
        while(i--) {
          if(MT.util.checkNodeType(arguments[i])===&apos;element&apos;) {
            arguments[i].style.display = &apos;none&apos;;
          } else {
            MT.core.getEl(arguments[i]).style.display = &apos;none&apos;;
          }
        }
      }
    },
    
    &lt;mt:Ignore&gt;
    /**
     * Finds the nearest defining (i.e. with an id) parent to the given element
     * 
     * @param {HTMLElement} origin the node from which to start the search
     * @return {HTMLElement|Boolean} The parent node with an id attribute or false
     */
    &lt;/mt:Ignore&gt;
    findDefiningParent : function (origin) {
      if(MT.util.checkNodeType(origin)===&apos;element&apos;) {
        for(var node=origin.parentNode;node.parentNode;node=node.parentNode) {
          if((node.hasAttribute &amp;&amp; node.hasAttribute(&apos;id&apos;)) || node.getAttribute(&apos;id&apos;)) {
            return node;
          }
        }
      }
      return false;
    },
    
    &lt;mt:Ignore&gt;
    /**
     * Tests objects to verify if they are DOM nodes
     * 
     * @param {Object} obj The object to be tested
     * @return {String} the values &apos;element&apos;|&apos;textnode&apos;|&apos;whitespace&apos;
     */
    &lt;/mt:Ignore&gt;
    checkNodeType : function (obj) {
      if (obj &amp;&amp; obj.nodeName){
        switch (obj.nodeType) {
          case 1: return &apos;element&apos;;
          case 3: return (/\S/).test(obj.nodeValue) ? &apos;textnode&apos; : &apos;whitespace&apos;;
        }
      }
    }
  }
}();

&lt;mt:Ignore&gt;
/**
 * mtPaginateComments takes the currently generated static page and either:
 *  - Attempts to find an individual comment link in the query string
 *  - If no link is found, the static page loads
 * In either case, the pagination event is set
 */
&lt;/mt:Ignore&gt;
(function () {
  var M = MT.core,
      c = MT.cons,
      u = MT.util,
      cache,
      isLoading,
      direction,
      currentComments,
      commentAnchor,
      commentArrId,
      commentsPerPage,
      commentsTotalPages,
      loadingIcon,
      pageNum,
      commentsOffset,
      totalComments,
      entryID,
      commentContentDiv,
      topNav,
      nav,
      currentCommentsSpan,
      topCurrentCommentsSpan;
            
  M.addEvent(window,&apos;load&apos;,_init);
  
  /**
   * Initializes the class
   * 
   * @return void
   */
  function _init () {
    if(!MT.entryCommentCount) {
      return;
    }
    
    _initializeVariables();
    _setCommentOffset(false);
    _checkForAnchor();
		_setCurrentComments();
    _toggleNavLinks();
    _initializeEvents();
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Initializes variables to their initial values
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _initializeVariables() {
    cache = {};
    isLoading = false;
    commentAnchor = &apos;&apos;;
    commentArrId = &apos;&apos;;
    commentsPerPage = MT.commentsPerPage || 50;
    currentComments = &apos;&apos;;
    direction = &apos;ascend&apos;;
    entryID = MT.entryID;
    totalComments = MT.entryCommentCount;
    commentsTotalPages = Math.ceil(totalComments / commentsPerPage);
    pageNum = 1;
    
    loadingIcon = &quot;&lt;img title=&apos;Loading...&apos; src=&apos;&lt;$MTStaticWebPath$&gt;images/indicator.white.gif&apos; alt=&apos;Loading&apos; /&gt;&quot;;
    
    commentContentDiv = M.getEl(&quot;comments-content&quot;);
    topNav = M.getEl(&quot;top-comment-nav&quot;);
    nav = M.getEl(&quot;comment-nav&quot;);
    
    currentCommentsSpan = M.getEl(&quot;current-comments&quot;);
    topCurrentCommentsSpan = M.getEl(&quot;top-current-comments&quot;);
  }
  
  function _initializeEvents() {
    if (commentsPerPage &lt; totalComments) {
      M.addEvent(nav,&apos;click&apos;,_handleEvents);
      M.addEvent(topNav,&apos;click&apos;,_handleEvents);
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Checks for an existing anchor tag in the query string
   * If found, it looks for it on the current page
   * If that fails, it tries to find it in comment list and loads
   * the desired page
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _checkForAnchor() {
    var found = String(window.location.hash).match( /comment-(\d{1,6})/ );
		
		if (found) {
		  M.log(c.DEBUG,found);
			if (!M.getEl(found[0]).hasOwnProperty(&apos;className&apos;)) {
				if (_findIdMatch(found[1])) {
    			pageNum = Math.floor(commentArrId / commentsPerPage) + 1;
    			M.log(c.DEBUG,&apos;Comment Array Id: &apos; + commentArrId);
    			M.log(c.DEBUG,&apos;Comments Per Page: &apos; + commentsPerPage);
    			M.log(c.DEBUG,&apos;Page Number: &apos; + pageNum);
    			M.log(c.DEBUG,&apos;Comment Offset: &apos; + _getCommentOffset());
    			_updateComments();
    		}
			}
		}
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Sets commentsOffset (i.e. the offset number to the remote list)
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _setCommentOffset() {
    commentsOffset = commentsPerPage * (pageNum-1);
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Gets the commentsOffset (i.e. the offset number to the remote list)
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _getCommentOffset() {
    return commentsOffset;
  }
  
  &lt;mt:Ignore&gt;
  /**
   * General event handler
   * 
   * @param {Event} e The event object
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _handleEvents (e) {
    var origin = e.target || e.srcElement,
        parentId;
        
    // stupid IE
    origin = origin.id &amp;&amp; M.getEl(origin.id) || false;

    if(origin) {
      parentId = u.checkNodeType(origin.parentNode)===&apos;element&apos; &amp;&amp; origin.parentNode.getAttribute(&apos;id&apos;) &amp;&amp; origin.parentNode.id;
    } else {
      return false;
    }
    
    switch(origin.nodeName) {
      case &apos;A&apos;:
        switch (parentId) {
          case &apos;prev-comments&apos;:
          case &apos;top-prev-comments&apos;:
            if(e.preventDefault) {
              e.preventDefault();
            } else {
              e.returnValue =	false;
            }
            if(!isLoading) {
              _previousPage();
            }
            break;
          case &apos;next-comments&apos;:
          case &apos;top-next-comments&apos;:
            if(e.preventDefault) {
              e.preventDefault();
            } else {
              e.returnValue =	false;
            }
            if(!isLoading) {
              _nextPage();
            }
            break;
        }
        break;
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Toggles the visibility of the navigation links
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _toggleNavLinks () {
    M.log(c.DEBUG,M.getEl(&apos;top-prev-comments&apos;));
    if(pageNum &lt;= commentsTotalPages &amp;&amp; pageNum !== 1) {
      u.toggleVisibility.show(&apos;prev-comments&apos;);
      u.toggleVisibility.show(&apos;top-prev-comments&apos;);
    }
    
    if(pageNum &gt;= 1 &amp;&amp; pageNum !== commentsTotalPages) {
      u.toggleVisibility.show(&apos;next-comments&apos;);
      u.toggleVisibility.show(&apos;top-next-comments&apos;);
    }
    
    if(pageNum===1 || nav.style.visibility===&apos;hidden&apos;) {
      u.toggleVisibility.hide(&apos;prev-comments&apos;);
      u.toggleVisibility.hide(&apos;top-prev-comments&apos;);
    }
    
    if(pageNum===commentsTotalPages || nav.style.visibility===&apos;hidden&apos;) {
      u.toggleVisibility.hide(&apos;next-comments&apos;);
      u.toggleVisibility.hide(&apos;top-next-comments&apos;);
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Determines appropriate action based on the id of the parent
   * clicked link. Decrements pageNum based on id.
   * 
   * @param {String} id the id of the parent of the clicked link
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _nextPage () {
    if(pageNum &lt; commentsTotalPages) {
      pageNum++;
      _updateComments();
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Determines appropriate action based on the id of the parent
   * clicked link. Increments/decrements pageNum based on id.
   * 
   * @param {String} id the id of the parent of the clicked link
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _previousPage() {
    if(pageNum &gt; 1) {
      pageNum--;
      _updateComments();
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Searches for a particular comment in the list of ids
   * 
   * @param {String} id The id for which to search
   * @return {Boolean} true, if found, false otherwise
   */
  &lt;/mt:Ignore&gt;
  function _findIdMatch (id) {
    var len = MT.commentIds.length;
    
  	while (len--) {
  		if (MT.commentIds[len] == id) {
  			commentAnchor = &quot;comment-&quot; + id;
  			commentArrId = len;
  			return true;
  		}
  	}
  	
  	return false;
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Sets the current comment counts on the page
   *
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _setCurrentComments() {
    var commentsOnPage = pageNum != commentsTotalPages ? commentsOffset + commentsPerPage : totalComments;
    
    _setCurrentCommentsContent([commentsOffset+1,&quot; - &quot;,commentsOnPage].join(&apos;&apos;));
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Sets the &quot;current-comments&quot; element with the HTML value
   * 
   * @param {String|Element} currentCommentsHTML The content to be set
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _setCurrentCommentsContent(currentCommentsHTML) {
    currentCommentsSpan.innerHTML = currentCommentsHTML;
    topCurrentCommentsSpan.innerHTML = currentCommentsHTML;
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Sets the content of the comment list
   * 
   * @param {String|Element} commentHTML The content to be set 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _setCommentContent(commentHTML) {
    commentContentDiv.innerHTML = commentHTML;
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Builds the appropriate URL to make a remote call to get the
   * next set of comments
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _updateComments() {
    var comments, jsonUrl;
    isLoading = true;
    _setCurrentCommentsContent(loadingIcon);
    _setCommentOffset();
    
    jsonUrl = [
        &quot;&lt;$mt:CGIPath$&gt;&lt;$mt:CommentScript$&gt;?__mode=comment_listing&amp;direction=&quot;,
        direction,
        &quot;&amp;entry_id=&quot;,
        entryID,
        &quot;&amp;limit=&quot;,
        commentsPerPage,
        &quot;&amp;offset=&quot;,
        _getCommentOffset()
      ].join(&apos;&apos;);
  	
  	if (!commentAnchor) {
      commentAnchor = &quot;comments-content&quot;;
    }
    
    if(cache.hasOwnProperty(jsonUrl)) {
      _refreshComments(cache[jsonUrl]);
      isLoading = false;
    } else {
      M.connect(jsonUrl,c.JSON,function (json) {
        cache[jsonUrl] = json.comments;
    	  _refreshComments(json.comments);
    	  isLoading = false;
      });
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Refreshes the comment data with the current
   * 
   * @param {String} commentData The data used to replace current comments
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _refreshComments(commentData) {
    _setCommentContent(commentData);
    _setCurrentComments();
    window.location.hash = &apos;reset&apos;;
    window.location.hash = commentAnchor;
    _toggleNavLinks();
  }
})();

&lt;mt:Ignore&gt;
/***
 * Functions for scoring entries
 * Scoring requires blog context, it is thus conditioned.
 */
&lt;/mt:Ignore&gt;
&lt;mt:IfBlog&gt;
function mtScore(entry_id) {
    var span = DOM.getElement(&apos;scoring-id-&apos; + entry_id);
    if (!span) return false;
    if (DOM.hasClassName(span, &apos;scoring-pending&apos;)) return false;
    var u = mtGetUser();
    var p = &apos;&amp;ow=1&apos;;
    if (DOM.hasClassName(span, &apos;scoring-scored&apos;)) {
        if ( u &amp;&amp; u.is_authenticated ) {
            DOM.removeClassName( span, &apos;scoring-scored&apos; );
            p += &apos;&amp;score=0&apos;;
        } else {
            return false;
        }
    }
    if (!DOM.hasClassName(span, &apos;scoring-scorable&apos;)) return false;

    var xh = mtGetXmlHttp();
    if (!xh) return false;

    DOM.addClassName( span, &apos;scoring-pending&apos; );
    var url = &apos;&lt;$mt:CGIPath$&gt;&lt;$mt:CommunityScript$&gt;&apos;;
    xh.open(&apos;POST&apos;, url, true);
    xh.onreadystatechange = function() {
        if ( xh.readyState == 4 ) {
            if ( xh.status &amp;&amp; ( xh.status != 200 ) ) {
                // error - ignore
            } else {
                eval(xh.responseText);
            }
        }
    };
    xh.setRequestHeader( &apos;Content-Type&apos;, &apos;application/x-www-form-urlencoded&apos; );
    xh.send( &apos;__mode=vote&amp;blog_id=&lt;$mt:BlogID$&gt;&amp;f=scored,count&amp;jsonp=mtScore_cb&amp;id=&apos; + entry_id + p );
    return false;
}

function mtUpdateScores() {
    var u = mtGetUser();
    &lt;mt:IfAnonymousRecommendAllowed&gt;
    &lt;mt:Else&gt;
        if (!u) return false;
    &lt;/mt:IfAnonymousRecommendAllowed&gt;

    var entry_ids = &apos;&apos;;
    var scores = DOM.getElementsByClassName(&quot;scoring&quot;);
    for (var i = 0; i &lt; scores.length; i++) {
        var id = scores[i].id;
        id = id.replace(/^scoring-id-/, &apos;&apos;);
        if (entry_ids != &apos;&apos;) entry_ids += &quot;,&quot;;
        entry_ids += id;
    }
    if (entry_ids == &apos;&apos;) return false;

    var xh = mtGetXmlHttp();
    if (!xh) return false;

    var url = &apos;&lt;$mt:CGIPath$&gt;&lt;$mt:CommunityScript$&gt;&apos;;
    xh.open(&apos;POST&apos;, url, true);
    xh.onreadystatechange = function() {
        if ( xh.readyState == 4 ) {
            if ( xh.status &amp;&amp; ( xh.status != 200 ) ) {
                // error - ignore
            } else {
                eval(xh.responseText);
            }
        }
    };
    xh.setRequestHeader( &apos;Content-Type&apos;, &apos;application/x-www-form-urlencoded&apos; );
    xh.send( &apos;__mode=score&amp;blog_id=&lt;$mt:BlogID$&gt;&amp;f=scored,count&amp;jsonp=mtScore_cb&amp;id=&apos; + entry_ids);
    return false;
}

function mtScore_cb(s_hash) {
    var u = mtGetUser();
    if (s_hash[&apos;error&apos;]) {
        var els = DOM.getElementsByClassName(&apos;scoring-pending&apos;);
        for (var i = 0; i &lt; els.length; i++)
            DOM.removeClassName(els[i], &apos;scoring-pending&apos;);
        // display error
        alert(s_hash[&apos;error&apos;]);
        return;
    }
    for (var id in s_hash) {
        var span = DOM.getElement(&apos;scoring-id-&apos; + id);
        if ( span ) {
            DOM.removeClassName( span, &apos;scoring-pending&apos; );
            DOM.removeClassName( span, &apos;scoring-scorable&apos; );
            DOM.removeClassName( span, &apos;scoring-scored&apos; );
            if ( parseInt(s_hash[id].scored) ) {
                DOM.addClassName( span, &apos;scoring-scored&apos; );
                if ( u &amp;&amp; u.is_authenticated ) {
                    DOM.addClassName( span, &apos;scoring-scorable&apos; );
                }
            } else {
    &lt;mt:IfAnonymousRecommendAllowed&gt;
                DOM.addClassName( span, &apos;scoring-scorable&apos; );
    &lt;mt:Else&gt;
                if ( u &amp;&amp; u.is_authenticated )
                    DOM.addClassName( span, &apos;scoring-scorable&apos; );
    &lt;/mt:IfAnonymousRecommendAllowed&gt;
            }
        }
        var score = DOM.getElement(&apos;scoring-score-&apos; + id);
        if ( score )
            score.innerHTML = s_hash[id].count ? s_hash[id].count : 0;
        var label = DOM.getElement(&apos;scoring-score-label-&apos; + id);
        if ( label ) {
            switch ( s_hash[id].count ) {
                case 1:
                    label.innerHTML = &apos;票&apos;;
                    break;
                default:
                    label.innerHTML = &apos;票&apos;;
                    break;
            }
        }
    }
}
&lt;/mt:IfBlog&gt;

&lt;mt:Ignore&gt;
/***
 * Functions to follow/leave feature
 */
&lt;/mt:Ignore&gt;
function script_follow(id) {
    var u = mtGetUser();
    if (!u || !u.name) return;
    var xh = mtGetXmlHttp();
    if (!xh) return false;
    xh.open(&apos;POST&apos;, &apos;&lt;$mt:CGIPath$&gt;&lt;$mt:CommunityScript$&gt;&apos;, true);
    xh.onreadystatechange = function() {
        if ( xh.readyState == 4 ) {
            if (xh.status &amp;&amp; ( xh.status != 200 ) ) {
                // error - ignore
            } else {
                eval( xh.responseText );
            }
        }
    };
    xh.setRequestHeader( &apos;Content-Type&apos;, &apos;application/x-www-form-urlencoded&apos; );
    xh.send( &apos;__mode=follow&amp;id=&apos; + id + &apos;&amp;magic_token=&apos; + u.sid + &apos;&amp;jsonp=follow&apos; );
    DOM.addClassName( &apos;following_&apos; + id + &apos;_else&apos;, &apos;hidden&apos;);
    var span = document.getElementById(&apos;following-status&apos;);
    if (span) span.innerHTML = &apos;&lt;img src=&quot;&lt;$mt:StaticWebPath$&gt;images/indicator.white.gif&quot; height=&quot;10&quot; width=&quot;10&quot; alt=&quot;Following...&quot; /&gt;&apos;;
}

function script_leave(id) {
    var u = mtGetUser();
    if (!u || !u.name) return;
    var xh = mtGetXmlHttp();
    if (!xh) return false;
    xh.open(&apos;POST&apos;, &apos;&lt;$mt:CGIPath$&gt;&lt;$mt:CommunityScript$&gt;&apos;, true);
    xh.onreadystatechange = function() {
        if ( xh.readyState == 4 ) {
            if (xh.status &amp;&amp; ( xh.status != 200 ) ) {
                // error - ignore
            } else {
                eval( xh.responseText );
            }
        }
    };
    xh.setRequestHeader( &apos;Content-Type&apos;, &apos;application/x-www-form-urlencoded&apos; );
    xh.send( &apos;__mode=leave&amp;id=&apos; + id + &apos;&amp;magic_token=&apos; + u.sid + &apos;&amp;jsonp=leave&apos; );
    DOM.addClassName(&apos;following_&apos; + id, &quot;hidden&quot;);
    var span = document.getElementById(&apos;following-status&apos;);
    if (span) span.innerHTML = &apos;&lt;img src=&quot;&lt;$mt:StaticWebPath$&gt;images/indicator.white.gif&quot; height=&quot;10&quot; width=&quot;10&quot; alt=&quot;Leaving...&quot; /&gt;&apos;;
}

function follow(user_info) {
    conditional_block(true, &apos;following_&apos; + user_info[&apos;id&apos;]);
    var span = document.getElementById(&apos;following-status&apos;);
    if (span) span.innerHTML = &apos;&apos;;
}

function leave(user_info) {
    conditional_block(false, &apos;following_&apos; + user_info[&apos;id&apos;]);
    var span = document.getElementById(&apos;following-status&apos;);
    if (span) span.innerHTML = &apos;&apos;;
}

&lt;mt:Ignore&gt;
/***
 * Utility functions
 */
&lt;/mt:Ignore&gt;

req = null;
function getCommenterName() {
    var u = mtGetUser();
    if (u &amp;&amp; u.name) return u.name;
    return &quot;&quot;;
}

function trimString (str) {
    str = this != window? this : str;
    return str.replace(/^\s+/g, &apos;&apos;).replace(/\s+$/g, &apos;&apos;);
}

defined = function( x ) { return x !== undefined; };

if ( !window.Event )
    try { window.Event = {} } catch(e) { };

Event.prep = function( ev ) {
        ev = ev || window.event;
        if( !defined( ev.stop ) )
            ev.stop = this.stop;
        if( !defined( ev.target ) )
            ev.target = ev.srcElement;
        if( !defined( ev.relatedTarget ) ) {
            ev.relatedTarget = (event.type == &quot;mouseover&quot; || event.type == &quot;mouseenter&quot;)
                ? ev.fromElement
                : ev.toElement;
        }
        return ev;
    };

if ( !window.DOM )
    DOM = {

        getElement: function( e ) {
            return (typeof e == &quot;string&quot; || typeof e == &quot;number&quot;) ? document.getElementById( e ) : e;
        },
    
    
        addEventListener: function( e, en, f, uc ) {
            try {
                if( e.addEventListener )
                    e.addEventListener( en, f, uc );
                else if( e.attachEvent )
                    e.attachEvent( &quot;on&quot; + en, f );
                else
                    e[ &quot;on&quot; + en ] = f;
            } catch( e ) {}
        },

    
        getClassNames: function( e ) {
            if( !e || !e.className )
                return [];
            return e.className.split( /\s+/g );
        },
    
    
        hasClassName: function( e, cn ) {
            e = DOM.getElement( e );
            if( !e || !e.className )
                return false;
            var cs = DOM.getClassNames( e );
            for( var i = 0; i &lt; cs.length; i++ ) {
                if( cs[ i ] == cn )
                    return true;
            }
            return false;
        },
    
    
        addClassName: function( e, cn ) {
            e = DOM.getElement( e );
            if( !e || !cn )
                return false;
            var cs = DOM.getClassNames( e );
            for( var i = 0; i &lt; cs.length; i++ ) {
                if( cs[ i ] == cn )
                    return true;
            }
            cs.push( cn );
            e.className = cs.join( &quot; &quot; );
            return false;
        },
    
    
        removeClassName: function( e, cn ) {
            var r = false;
            e = DOM.getElement( e );
            if( !e || !e.className || !cn )
                return r;
            var cs = (e.className &amp;&amp; e.className.length)
                ? e.className.split( /\s+/g )
                : [];
            var ncs = [];
            /* support regex */
            if( cn instanceof RegExp ) {
                for( var i = 0; i &lt; cs.length; i++ ) {
                    if ( cn.test( cs[ i ] ) ) {
                        r = true;
                        continue;
                    }
                    ncs.push( cs[ i ] );
                }
            } else {
                for( var i = 0; i &lt; cs.length; i++ ) {
                    if( cs[ i ] == cn ) {
                        r = true;
                        continue;
                    }
                    ncs.push( cs[ i ] );
                }
            }
            if( r )
                e.className = ncs.join( &quot; &quot; );
            return r;
        },


        getElementsByTagAndClassName: function( tagName, className, root ) {
            root = DOM.getElement( root );
            if( !root )
                root = document;
            var allElements = root.getElementsByTagName( tagName );
            var elements = [];
            for( var i = 0; i &lt; allElements.length; i++ ) {
                var element = allElements[ i ];
                if( !element )
                    continue;
                if( DOM.hasClassName( element, className ) )
                    elements[ elements.length ] = element;
            }
            return elements;
        },


        getElementsByClassName: function( className, root ) {
            return DOM.getElementsByTagAndClassName( &quot;*&quot;, className, root );
        }


    };


function switchTabs( id, el ) {
  var hash = document.location.hash;
  if ( hash )
      hash = hash.replace( /^#/, &apos;&apos; );
  
  if ( el === undefined &amp;&amp; hash )
      el = hash;
  else if ( el !== undefined )
      el = el.href.match( /#(.*)/ )[ 1 ];

  var tablist = DOM.getElement( id );
  var es = tablist.getElementsByTagName( &quot;*&quot; );
  var tabContent, tabId;
  for ( var i = 0, len = es.length; i &lt; len; i++ ) {
      if ( es[ i ].href &amp;&amp; es[ i ].href.match( /#.*/ ) ) {
          tabId = es[ i ].href.match( /#(.*)/ )[ 1 ];
          var tabContent = DOM.getElement( tabId );
          if ( tabContent === undefined )
              continue;

          if ( el ) {
              if ( tabId == el ) {
                  DOM.addClassName( es[ i ], &quot;active&quot; );
                  DOM.removeClassName( tabContent, &quot;hidden&quot; );
              } else {
                  DOM.removeClassName( es[ i ], &quot;active&quot; );
                  DOM.addClassName( tabContent, &quot;hidden&quot; );
              }
          }
      }
  }
}

function defaultInputFocus( event ) {
    try {
        event = Event.prep( event );
    } catch( e ) {};

    var el = event.target;
    if ( el.value == el.getAttribute( &quot;mt:default&quot; ) ) {
        el.value = &apos;&apos;;
        DOM.removeClassName( el, &quot;input-default&quot; );
    }
}

function defaultInputBlur( event ) {
    try {
        event = Event.prep( event );
    } catch( e ) {};

    var el = event.target;
    if ( el.value == &apos;&apos; ) {
        el.value = el.getAttribute( &quot;mt:default&quot; );
        DOM.addClassName( el, &quot;input-default&quot; );
    }
}

function setupInputDefault() {
    var es = document.getElementsByTagName( &quot;INPUT&quot; );
    for ( var i = 0, len = es.length; i &lt; len; i++ ) {
        if ( !es[ i ].getAttribute )
            continue;
        var val = es[ i ].getAttribute( &quot;mt:default&quot; );
        if ( !val )
            continue;

        if ( es[ i ].value == &apos;&apos; ) {
            DOM.addClassName( es[ i ], &apos;input-default&apos; );
            es[ i ].value = val;
        }
        DOM.addEventListener( es[ i ], &apos;focus&apos;, defaultInputFocus );
        DOM.addEventListener( es[ i ], &apos;focusin&apos;, defaultInputFocus );
        DOM.addEventListener( es[ i ], &apos;blur&apos;, defaultInputBlur );
    }
}


&lt;mt:Ignore&gt;
/***
 * Movable Type Core Functions
 */
&lt;/mt:Ignore&gt;

&lt;mt:Ignore&gt;
/* The following functions are here to support legacy MT templates.
   If you have refreshed your JavaScript template but still use older
   MT comment templates, you may need to uncomment this block in order
   for those templates to work properly. Simply remove the wrapping
   &apos;mt:Ignore&apos; tag to do so. */
function hideDocumentElement(id) { return mtHide(id) }
function showDocumentElement(id) { return mtShow(id) }
function individualArchivesOnLoad() { return mtEntryOnLoad() }
function writeCommenterGreeting() { return mtShowGreeting() }
function rememberMe(f) { return mtRememberMe(f) }
function forgetMe(f) { return mtForgetMe(f) }
function getXmlHttp() { return mtGetXmlHttp() }
&lt;/mt:Ignore&gt;

// The cookie name to use for storing the blog-side comment session cookie.
var mtCookieName = &quot;&lt;$mt:UserSessionCookieName$&gt;&quot;;
var mtCookieDomain = &quot;&lt;$mt:UserSessionCookieDomain$&gt;&quot;;
var mtCookiePath = &quot;&lt;$mt:UserSessionCookiePath$&gt;&quot;;
var mtCookieTimeout = &lt;$mt:UserSessionCookieTimeout$&gt;;

&lt;mt:Ignore&gt;
/***
 * Simple routine for showing a DOM element (applying a CSS display
 * attribute of &apos;none&apos;).
 */
&lt;/mt:Ignore&gt;
function mtHide(id) {
    var el = (typeof id == &quot;string&quot;) ? document.getElementById(id) : id;
    if (el) el.style.display = &apos;none&apos;;
}

&lt;mt:Ignore&gt;
/***
 * Simple routine for showing a DOM element (applying a CSS display
 * attribute of &apos;block&apos;).
 */
&lt;/mt:Ignore&gt;
function mtShow(id) {
    var el = (typeof id == &quot;string&quot;) ? document.getElementById(id) : id;
    if (el) el.style.display = &apos;block&apos;;
}

&lt;mt:Ignore&gt;
/***
 * A utility function for assigning/adding handlers to window events.
 */
&lt;/mt:Ignore&gt;
function mtAttachEvent(eventName,func) {
    var onEventName = &apos;on&apos; + eventName;
    var old = window[onEventName];
    if( typeof old != &apos;function&apos; )
        window[onEventName] = func;
    else {
        window[onEventName] = function( evt ) {
            old( evt );
            return func( evt );
        };
    }
}

&lt;mt:Ignore&gt;
/***
 * Calls the event named, if there are handlers for it.
 */
&lt;/mt:Ignore&gt;
function mtFireEvent(eventName,param) {
    var fn = window[&apos;on&apos; + eventName];
    if (typeof fn == &apos;function&apos;) return fn(param);
    return;
}

&lt;mt:Ignore&gt;
/***
 * Displays a relative date.
 * &apos;ts&apos; is a Date object, &apos;fds&apos; is a string of the date which
 * will be displayed if the given date is older than 1 week.
 */
&lt;/mt:Ignore&gt;
function mtRelativeDate(ts, fds) {
    var now = new Date();
    var ref = ts;
    var delta = Math.floor((now.getTime() - ref.getTime()) / 1000);

    var str;
    if (delta &lt; 60) {
        str = &apos;直前&apos;;
    } else if (delta &lt;= 86400) {
        // less than 1 day
        var hours = Math.floor(delta / 3600);
        var min = Math.floor((delta % 3600) / 60);
        if (hours == 1)
            str = &apos;1 時間前&apos;;
        else if (hours &gt; 1)
            str = &apos;2 時間前&apos;.replace(/2/, hours);
        else if (min == 1)
            str = &apos;1 分前&apos;;
        else
            str = &apos;2 分前&apos;.replace(/2/, min);
    } else if (delta &lt;= 604800) {
        // less than 1 week
        var days = Math.floor(delta / 86400);
        var hours = Math.floor((delta % 86400) / 3600);
        if (days == 1)
            str = &apos;1 日前&apos;;
        else if (days &gt; 1)
            str = &apos;2 日前&apos;.replace(/2/, days);
        else if (hours == 1)
            str = &apos;1 時間前&apos;;
        else
            str = &apos;2 時間前&apos;.replace(/2/, hours);
    }
    return str ? str : fds;
}

&lt;mt:Ignore&gt;
/***
 * Used to display an edit link for the given entry.
 */
&lt;/mt:Ignore&gt;
function mtEditLink(entry_id, author_id) {
    var u = mtGetUser();
    if (! u) return;
    if (! entry_id) return;
    if (! author_id) return;
    if (u.id != author_id) return;
    var link = &apos;&lt;a href=&quot;&lt;$mt:AdminScript$&gt;?__mode=view&amp;amp;_type=entry&amp;amp;id=&apos; + entry_id + &apos;&quot;&gt;編集&lt;/a&gt;&apos;;
    document.write(link);
}

&lt;mt:Ignore&gt;
/***
 * Called when an input field on the comment form receives focus.
 */
&lt;/mt:Ignore&gt;
function mtCommentFormOnFocus() {
    // if CAPTCHA is enabled, this causes the captcha image to be
    // displayed if it hasn&apos;t been already.
    mtShowCaptcha();
}

&lt;mt:Ignore&gt;
/***
 * Displays a captcha field for anonymous commenters.
 */
&lt;/mt:Ignore&gt;
var mtCaptchaVisible = false;
function mtShowCaptcha() {
    var u = mtGetUser();
    if ( u &amp;&amp; u.is_authenticated ) return;
    if (mtCaptchaVisible) return;
    var div = document.getElementById(&apos;comments-open-captcha&apos;);
    if (div) {
        div.innerHTML = &apos;&lt;$mt:CaptchaFields$&gt;&apos;;
        mtCaptchaVisible = true;
    }
}

&lt;mt:Ignore&gt;
/* user object
    -- saved in user cookie --
    u.name (display name)
    u.url (link to home page)
    u.email (for anonymous only)
    u.userpic (url for commenter/author)
    u.profile (link to profile)
    u.is_trusted (boolean)
    u.is_author (user has posting rights)
    u.is_banned (banned status; neither post/comment perms)
    u.can_post (has permission to post)
    u.can_comment (has permission to comment)

    -- status fields --
    u.is_authenticated (boolean)
    u.is_anonymous (user is anonymous)
*/
&lt;/mt:Ignore&gt;

var is_preview;
var user;
&lt;mt:Ignore&gt;
/***
 * Assigns a user object as the actively logged in user; also saves the
 * user information in a browser cookie.
 */
&lt;/mt:Ignore&gt;
function mtSetUser(u) {
    if (u) {
        // persist this
        user = u;
        mtSaveUser();
        // sync up user greeting
        mtFireEvent(&apos;usersignin&apos;);
    }
}

&lt;mt:Ignore&gt;
/***
 * Simple function that escapes single quote characters for storing
 * in a cookie.
 */
&lt;/mt:Ignore&gt;
function mtEscapeJS(s) {
    s = s.replace(/&apos;/g, &quot;&amp;apos;&quot;);
    return s;
}

&lt;mt:Ignore&gt;
/***
 * Simple function that unescapes single quote characters that were
 * stored in a cookie.
 */
&lt;/mt:Ignore&gt;
function mtUnescapeJS(s) {
    s = s.replace(/&amp;apos;/g, &quot;&apos;&quot;);
    return s;
}

&lt;mt:Ignore&gt;
/***
 * Serializes a user object into a string, suitable for storing as a cookie.
 */
&lt;/mt:Ignore&gt;
function mtBakeUserCookie(u) {
    var str = &quot;&quot;;
    if (u.name) str += &quot;name:&apos;&quot; + mtEscapeJS(u.name) + &quot;&apos;;&quot;;
    if (u.url) str += &quot;url:&apos;&quot; + mtEscapeJS(u.url) + &quot;&apos;;&quot;;
    if (u.email) str += &quot;email:&apos;&quot; + mtEscapeJS(u.email) + &quot;&apos;;&quot;;
    if (u.is_authenticated) str += &quot;is_authenticated:&apos;1&apos;;&quot;;
    if (u.profile) str += &quot;profile:&apos;&quot; + mtEscapeJS(u.profile) + &quot;&apos;;&quot;;
    if (u.userpic) str += &quot;userpic:&apos;&quot; + mtEscapeJS(u.userpic) + &quot;&apos;;&quot;;
    if (u.sid) str += &quot;sid:&apos;&quot; + mtEscapeJS(u.sid) + &quot;&apos;;&quot;;
    str += &quot;is_trusted:&apos;&quot; + (u.is_trusted ? &quot;1&quot; : &quot;0&quot;) + &quot;&apos;;&quot;;
    str += &quot;is_author:&apos;&quot; + (u.is_author ? &quot;1&quot; : &quot;0&quot;) + &quot;&apos;;&quot;;
    str += &quot;is_banned:&apos;&quot; + (u.is_banned ? &quot;1&quot; : &quot;0&quot;) + &quot;&apos;;&quot;;
    str += &quot;can_post:&apos;&quot; + (u.can_post ? &quot;1&quot; : &quot;0&quot;) + &quot;&apos;;&quot;;
    str += &quot;can_comment:&apos;&quot; + (u.can_comment ? &quot;1&quot; : &quot;0&quot;) + &quot;&apos;;&quot;;
    str = str.replace(/;$/, &apos;&apos;);
    return str;
}

&lt;mt:Ignore&gt;
/***
 * Unserializes a user cookie and returns a user object with the restored
 * state.
 */
&lt;/mt:Ignore&gt;
function mtUnbakeUserCookie(s) {
    if (!s) return;

    var u = {};
    var m;
    while (m = s.match(/^((name|url|email|is_authenticated|profile|userpic|sid|is_trusted|is_author|is_banned|can_post|can_comment):&apos;([^&apos;]+?)&apos;;?)/)) {
        s = s.substring(m[1].length);
        if (m[2].match(/^(is|can)_/)) // boolean fields
            u[m[2]] = m[3] == &apos;1&apos; ? true : false;
        else
            u[m[2]] = mtUnescapeJS(m[3]);
    }
    if (u.is_authenticated) {
        u.is_anonymous = false;
    } else {
        u.is_anonymous = true;
        u.can_post = false;
        u.is_author = false;
        u.is_banned = false;
        u.is_trusted = false;
    }
    return u;
}

&lt;mt:Ignore&gt;
/***
 * Retrieves an object of the currently logged in user&apos;s state.
 * If no user is logged in or cookied, this will return null.
 */
&lt;/mt:Ignore&gt;
function mtGetUser() {
    if (!user) {
        var cookie = mtGetCookie(mtCookieName);
        if (!cookie) return;
        user = mtUnbakeUserCookie(cookie);
        if (! user) {
            user = {};
            user.is_anonymous = true;
            user.can_post = false;
            user.is_author = false;
            user.is_banned = false;
            user.is_trusted = false;
        }
    }
    return user;
}

&lt;mt:Ignore&gt;
/***
 * Issues a request to the MT comment script to retrieve the currently
 * logged-in user (if any).
 */
&lt;/mt:Ignore&gt;
var mtFetchedUser = false;
&lt;mt:IfBlog&gt;
function mtFetchUser(cb) {
    if (!cb) cb = &apos;mtSetUser&apos;;
    if ( ( cb == &apos;mtSetUser&apos; ) &amp;&amp; mtGetUser() ) {
        var url = document.URL;
        url = url.replace(/#.+$/, &apos;&apos;);
        url += &apos;#comments-open&apos;;
        location.href = url;
    } else {
        // we aren&apos;t using AJAX for this, since we may have to request
        // from a different domain. JSONP to the rescue.
        mtFetchedUser = true;
        var script = document.createElement(&apos;script&apos;);
        var ts = new Date().getTime();
        script.src = &apos;&lt;$mt:CGIPath$&gt;&lt;$mt:CommentScript$&gt;?__mode=session_js&amp;blog_id=&lt;$mt:BlogID$&gt;&amp;jsonp=&apos; + cb + &apos;&amp;ts=&apos; + ts;
        (document.getElementsByTagName(&apos;head&apos;))[0].appendChild(script);
    }
}
&lt;/mt:IfBlog&gt;

&lt;mt:Ignore&gt;
/***
 * Called when the &apos;Remember me&apos; checkbox is changed. If the checkbox
 * is cleared, the cached user cookie is immediately cleared.
 */
&lt;/mt:Ignore&gt;
function mtRememberMeOnClick(b) {
    if (!b.checked)
        mtClearUser(b.form);
    return true;
}

&lt;mt:Ignore&gt;
/***
 * Called when comment form is sent.
 * Required parameter: Form DOM object of comment form.
 * If form has a &apos;bakecookie&apos; member, it will be used to signal
 * storing the anonymous commenter information to a cookie.
 * If form has a &apos;armor&apos; member, it will be used to store
 * a token that is checked by the comment script.
 */
&lt;/mt:Ignore&gt;
&lt;mt:IfBlog&gt;
var mtRequestSubmitted = false;
function mtCommentOnSubmit(f) {
    if (!mtRequestSubmitted) {
        mtRequestSubmitted = true;

        if (f.armor)
            f.armor.value = &apos;&lt;$mt:BlogSitePath encode_sha1=&quot;1&quot;$&gt;&apos;;
        if (f.bakecookie &amp;&amp; f.bakecookie.checked)
            mtSaveUser(f);

        // disable submit buttons
        if (f.preview_button) f.preview_button.disabled = true;
        if (f.post) f.post.disabled = true;

        var u = mtGetUser();
        if ( !is_preview &amp;&amp; ( u &amp;&amp; u.is_authenticated ) ) {
            // validate session; then submit
            mtFetchedUser = false;
            mtFetchUser(&apos;mtCommentSessionVerify&apos;);
            return false;
        }

        return true;
    }
    return false;
}

function mtCommentSessionVerify(app_user) {
    var u = mtGetUser();
    var f = document[&apos;comments_form&apos;];
    if ( u &amp;&amp; app_user &amp;&amp; app_user.sid &amp;&amp; ( u.sid == app_user.sid ) ) {
        f.submit();
    } else {
        alert(&apos;セッションの有効期限が切れています。再度サインインしてください。&apos;);
        mtClearUser();
        mtFireEvent(&apos;usersignin&apos;);
&lt;mt:IfRegistrationRequired&gt;
        mtShow(&apos;comments-form&apos;);
        mtHide(&apos;comments-open-footer&apos;);
&lt;/mt:IfRegistrationRequired&gt;
    }
}

function mtUserOnLoad() {
    var u = mtGetUser();

    // if the user is authenticated, hide the &apos;anonymous&apos; fields
    // and any captcha input if already shown
    if ( document.getElementById(&apos;comments-form&apos;)) {
        if ( u &amp;&amp; u.is_authenticated ) {
            mtShow(&apos;comments-form&apos;);
            mtHide(&apos;comments-open-data&apos;);
            if (mtCaptchaVisible)
                mtHide(&apos;comments-open-captcha&apos;);
        } else {
&lt;mt:IfRegistrationRequired&gt;
            mtHide(&apos;comments-form&apos;);
&lt;/mt:IfRegistrationRequired&gt;
        }
        if ( u &amp;&amp; u.is_banned )
            mtHide(&apos;comments-form&apos;);

        // if we&apos;re previewing a comment, make sure the captcha
        // field is visible
        if (is_preview)
            mtShowCaptcha();
        else
            mtShowGreeting();

        // populate anonymous comment fields if user is cookied as anonymous
        var cf = document[&apos;comments_form&apos;];
        if (cf) {
            if (u &amp;&amp; u.is_anonymous) {
                if (u.email) cf.email.value = u.email;
                if (u.name) cf.author.value = u.name;
                if (u.url) cf.url.value = u.url;
                if (cf.bakecookie)
                    cf.bakecookie.checked = u.name || u.email;
            } else {
                if (u &amp;&amp; u.sid &amp;&amp; cf.sid)
                    cf.sid.value = u.sid;
            }
            if (cf.post &amp;&amp; cf.post.disabled)
                cf.post.disabled = false;
            if (cf.preview_button &amp;&amp; cf.preview_button.disabled)
                cf.preview_button.disabled = false;
            mtRequestSubmitted = false;
        }
    }
}
&lt;/mt:IfBlog&gt;

&lt;mt:Ignore&gt;
/***
 * Called when an entry archive page is loaded.
 * This routine controls which elements of the comment form are shown
 * or hidden, depending on commenter type and blog configuration.
 */
&lt;/mt:Ignore&gt;
&lt;mt:IfBlog&gt;
function mtEntryOnLoad() {
    &lt;mt:Unless tag=&quot;IfPingsAccepted&quot;&gt;mtHide(&apos;trackbacks-info&apos;);&lt;/mt:Unless&gt;
    &lt;mt:Unless tag=&quot;IfCommentsAccepted&quot;&gt;mtHide(&apos;comments-open&apos;);&lt;/mt:Unless&gt;
    mtFireEvent(&apos;usersignin&apos;);
}

function mtEntryOnUnload() {
    if (mtRequestSubmitted) {
        var cf = document[&apos;comments_form&apos;];
        if (cf) {
            if (cf.post &amp;&amp; cf.post.disabled)
                cf.post.disabled = false;
            if (cf.preview_button &amp;&amp; cf.preview_button.disabled)
                cf.preview_button.disabled = false;
        }
        mtRequestSubmitted = false;
    }
    return true;
}

mtAttachEvent(&apos;usersignin&apos;, mtUserOnLoad);
&lt;/mt:IfBlog&gt;

&lt;mt:Ignore&gt;
/***
 * Handles the action of the &quot;Sign in&quot; link. First clears any existing
 * user cookie, then directs to the MT comment script to sign the user in.
 */
&lt;/mt:Ignore&gt;
function mtSignIn() {
    var doc_url = document.URL;
    doc_url = doc_url.replace(/#.+/, &apos;&apos;);
    var url = &apos;&lt;$mt:CGIPath$&gt;&lt;$mt:CommunityScript&gt;?__mode=login&amp;blog_id=&lt;$mt:BlogID$&gt;&apos;;
    if (is_preview) {
        if ( document[&apos;comments_form&apos;] ) {
            var entry_id = document[&apos;comments_form&apos;].entry_id.value;
            url += &apos;&amp;entry_id=&apos; + entry_id;
        } else {
            url += &apos;&amp;return_url=&lt;$mt:BlogURL encode_url=&quot;1&quot;$&gt;&apos;;
        }
    } else {
        url += &apos;&amp;return_url=&apos; + encodeURIComponent(doc_url);
    }
    mtClearUser();
    location.href = url;
}

function mtSignInOnClick(sign_in_element) {
    var el;
    if (sign_in_element) {
        // display throbber
        el = document.getElementById(sign_in_element);
        if (!el)  // legacy MT 4.x element id
            el = document.getElementById(&apos;comment-form-external-auth&apos;);
    }
    if (el)
        el.innerHTML = &apos;サインインします... &lt;span class=&quot;status-indicator&quot;&gt;&amp;nbsp;&lt;/span&gt;&apos;;

    mtClearUser(); // clear any &apos;anonymous&apos; user cookie to allow sign in
    mtFetchUser(&apos;mtSetUserOrLogin&apos;);
    return false;
}

function mtSetUserOrLogin(u) {
    if (u &amp;&amp; u.is_authenticated) {
        mtSetUser(u);
    } else {
        // user really isn&apos;t logged in; so let&apos;s do this!
        mtSignIn();
    }
}

&lt;mt:Ignore&gt;
/***
 * Handles sign out from the web site.
 * First clears any existing user cookie, then direts to the MT comment
 * script to sign the user out.
 */
&lt;/mt:Ignore&gt;
function mtSignOut(entry_id) {
    mtClearUser();
    var doc_url = document.URL;
    doc_url = doc_url.replace(/#.+/, &apos;&apos;);
    var url = &apos;&lt;$mt:CGIPath$&gt;&lt;$mt:CommunityScript$&gt;?__mode=logout&amp;blog_id=&lt;$mt:BlogID$&gt;&apos;;
    if (is_preview) {
        if ( document[&apos;comments_form&apos;] ) {
            var entry_id = document[&apos;comments_form&apos;].entry_id.value;
            url += &apos;&amp;entry_id=&apos; + entry_id;
        } else {
            url += &apos;&amp;return_url=&lt;$mt:BlogURL encode_url=&quot;1&quot;$&gt;&apos;;
        }
    } else {
        url += &apos;&amp;return_url=&apos; + encodeURIComponent(doc_url);
    }
    location.href = url;
}

&lt;mt:Ignore&gt;
/***
 * Handles the action of the &quot;Sign out&quot; link.
 */
&lt;/mt:Ignore&gt;
function mtSignOutOnClick() {
    mtSignOut();
    return false;
}

&lt;mt:Ignore&gt;
/***
 * Handles the display of the greeting message, depending on what kind of
 * user is logged in and blog comment policy.
 */
&lt;/mt:Ignore&gt;
&lt;mt:IfBlog&gt;
function mtShowGreeting() {
&lt;mt:IfRegistrationAllowed&gt;
    var reg_reqd = &lt;mt:IfRegistrationRequired&gt;true&lt;mt:Else&gt;false&lt;/mt:IfRegistrationRequired&gt;;

    var cf = document[&apos;comments_form&apos;];
    if (!cf) return;

    var el = document.getElementById(&apos;comment-greeting&apos;);
    if (!el)  // legacy MT 4.x element id
        el = document.getElementById(&apos;comment-form-external-auth&apos;);
    if (!el) return;

    var eid = cf.entry_id;
    var entry_id;
    if (eid) entry_id = eid.value;

    var phrase;
    var u = mtGetUser();

    if ( u &amp;&amp; u.is_authenticated ) {
        if ( u.is_banned ) {
            phrase = &apos;このブログにコメントする権限を持っていません。(\&lt;a href=\&quot;javas\cript:void(0);\&quot; onclick=\&quot;return mtSignOutOnClick();\&quot;\&gt;サインアウトする\&lt;\/a\&gt;)&apos;;
        } else {
            var user_link;
            if ( u.is_author ) {
                user_link = &apos;&lt;a href=&quot;&lt;$mt:CGIPath$&gt;&lt;$mt:CommunityScript$&gt;?__mode=edit&amp;amp;return_to=&apos; + encodeURIComponent(document.URL) + &apos;&amp;amp;blog_id=&lt;$mt:BlogID$&gt;&apos;;
                user_link += &apos;&quot;&gt;&apos; + u.name + &apos;&lt;/a&gt;&apos;;
            } else {
                // registered user, but not a user with posting rights
                if (u.url)
                    user_link = &apos;&lt;a href=&quot;&apos; + u.url + &apos;&quot;&gt;&apos; + u.name + &apos;&lt;/a&gt;&apos;;
                else
                    user_link = u.name;
            }
            // TBD: supplement phrase with userpic if one is available.
            phrase = &apos;__NAME__としてサインインしています。(\&lt;a href=\&quot;javas\cript:void(0)\&quot; onclick=\&quot;return mtSignOutOnClick();\&quot;\&gt;サインアウト\&lt;\/a\&gt;)&apos;;
            phrase = phrase.replace(/__NAME__/, user_link);
        }
    } else {
        if (reg_reqd) {
            phrase = &apos;コメントするにはまず\&lt;a href=\&quot;javas\cript:void(0)\&quot; onclick=\&quot;return mtSignInOnClick(\&apos;comment-greeting\&apos;)\&quot;\&gt;サインイン\&lt;\/a\&gt;してください。&apos;;
        } else {
            phrase = &apos;コメントする前に\&lt;a href=\&quot;javas\cript:void(0)\&quot; onclick=\&quot;return mtSignInOnClick(\&apos;comment-greeting\&apos;)\&quot;\&gt;サインイン\&lt;\/a\&gt;することもできます。&apos;;
        }
    }
    el.innerHTML = phrase;
&lt;mt:Else&gt;
    mtShowCaptcha();
&lt;/mt:IfRegistrationAllowed&gt;
}
&lt;/mt:IfBlog&gt;

&lt;mt:Ignore&gt;
/***
 * Handles the action of the &apos;Reply&apos; links.
 */
&lt;/mt:Ignore&gt;
function mtReplyCommentOnClick(parent_id, author) {
    mtShow(&apos;comment-form-reply&apos;);

    var checkbox = document.getElementById(&apos;comment-reply&apos;);
    var label = document.getElementById(&apos;comment-reply-label&apos;);
    var text = document.getElementById(&apos;comment-text&apos;);

    // Populate label with new values
    var reply_text = &apos;\&lt;a href=\&quot;#comment-__PARENT__\&quot; onclick=\&quot;location.href=this.href; return false\&quot;\&gt;__AUTHOR__からのコメント\&lt;\/a\&gt;に返信&apos;;
    reply_text = reply_text.replace(/__PARENT__/, parent_id);
    reply_text = reply_text.replace(/__AUTHOR__/, author);
    label.innerHTML = reply_text;

    checkbox.value = parent_id; 
    checkbox.checked = true;
    try {
        // text field may be hidden
        text.focus();
    } catch(e) {
    }

    mtSetCommentParentID();
}

&lt;mt:Ignore&gt;
/***
 * Sets the parent comment ID when replying to a comment.
 */
&lt;/mt:Ignore&gt;
function mtSetCommentParentID() {
    var checkbox = document.getElementById(&apos;comment-reply&apos;);
    var parent_id_field = document.getElementById(&apos;comment-parent-id&apos;);
    if (!checkbox || !parent_id_field) return;

    var pid = 0;
    if (checkbox.checked == true)
        pid = checkbox.value;
    parent_id_field.value = pid;
}

&lt;mt:Ignore&gt;
/***
 * Persists a copy of the current user cookie into the browser cookie stash.
 */
&lt;/mt:Ignore&gt;
function mtSaveUser(f) {
    // We can&apos;t reliably store the user cookie during a preview.
    if (is_preview) return;

    var u = mtGetUser();

    if (f &amp;&amp; (!u || u.is_anonymous)) {
        if ( !u ) {
            u = {};
            u.is_authenticated = false;
            u.can_comment = true;
            u.is_author = false;
            u.is_banned = false;
            u.is_anonymous = true;
            u.is_trusted = false;
        }
        if (f.author != undefined) u.name = f.author.value;
        if (f.email != undefined) u.email = f.email.value;
        if (f.url != undefined) u.url = f.url.value;
    }

    if (!u) return;

    var cache_period = mtCookieTimeout * 1000;

    // cache anonymous user info for a long period if the
    // user has requested to be remembered
    if (u.is_anonymous &amp;&amp; f &amp;&amp; f.bakecookie &amp;&amp; f.bakecookie.checked)
        cache_period = 365 * 24 * 60 * 60 * 1000;

    var now = new Date();
    mtFixDate(now);
    now.setTime(now.getTime() + cache_period);

    var cmtcookie = mtBakeUserCookie(u);
    mtSetCookie(mtCookieName, cmtcookie, now, mtCookiePath, mtCookieDomain,
        location.protocol == &apos;https:&apos;);
}

&lt;mt:Ignore&gt;
/***
 * Clears the blog-side user cookie.
 */
&lt;/mt:Ignore&gt;
function mtClearUser() {
    user = null;
    mtDeleteCookie(mtCookieName, mtCookiePath, mtCookieDomain,
        location.protocol == &apos;https:&apos;);
}

&lt;mt:Ignore&gt;
/***
 * Sets a browser cookie.
 */
&lt;/mt:Ignore&gt;
function mtSetCookie(name, value, expires, path, domain, secure) {
    if (domain &amp;&amp; domain.match(/^\.?localhost$/))
        domain = null;
    var curCookie = name + &quot;=&quot; + escape(value) +
        (expires ? &quot;; expires=&quot; + expires.toGMTString() : &quot;&quot;) +
        (path ? &quot;; path=&quot; + path : &quot;&quot;) +
        (domain ? &quot;; domain=&quot; + domain : &quot;&quot;) +
        (secure ? &quot;; secure&quot; : &quot;&quot;);
    document.cookie = curCookie;
}

&lt;mt:Ignore&gt;
/***
 * Retrieves a browser cookie.
 */
&lt;/mt:Ignore&gt;
function mtGetCookie(name) {
    var prefix = name + &apos;=&apos;;
    var c = document.cookie;
    var cookieStartIndex = c.indexOf(prefix);
    if (cookieStartIndex == -1)
        return &apos;&apos;;
    var cookieEndIndex = c.indexOf(&quot;;&quot;, cookieStartIndex + prefix.length);
    if (cookieEndIndex == -1)
        cookieEndIndex = c.length;
    return unescape(c.substring(cookieStartIndex + prefix.length, cookieEndIndex));
}

&lt;mt:Ignore&gt;
/***
 * Deletes a browser cookie.
 */
&lt;/mt:Ignore&gt;
function mtDeleteCookie(name, path, domain, secure) {
    if (mtGetCookie(name)) {
        if (domain &amp;&amp; domain.match(/^\.?localhost$/))
            domain = null;
        document.cookie = name + &quot;=&quot; +
            (path ? &quot;; path=&quot; + path : &quot;&quot;) +
            (domain ? &quot;; domain=&quot; + domain : &quot;&quot;) +
            (secure ? &quot;; secure&quot; : &quot;&quot;) +
            &quot;; expires=Thu, 01-Jan-70 00:00:01 GMT&quot;;
    }
}

function mtFixDate(date) {
    var skew = (new Date(0)).getTime();
    if (skew &gt; 0)
        date.setTime(date.getTime() - skew);
}

&lt;mt:Ignore&gt;
/***
 * Returns a XMLHttpRequest object (for Ajax operations).
 */
&lt;/mt:Ignore&gt;
function mtGetXmlHttp() {
    if ( !window.XMLHttpRequest ) {
        window.XMLHttpRequest = function() {
            var types = [
                &quot;Microsoft.XMLHTTP&quot;,
                &quot;MSXML2.XMLHTTP.5.0&quot;,
                &quot;MSXML2.XMLHTTP.4.0&quot;,
                &quot;MSXML2.XMLHTTP.3.0&quot;,
                &quot;MSXML2.XMLHTTP&quot;
            ];

            for ( var i = 0; i &lt; types.length; i++ ) {
                try {
                    return new ActiveXObject( types[ i ] );
                } catch( e ) {}
            }

            return undefined;
        };
    }
    if ( window.XMLHttpRequest )
        return new XMLHttpRequest();
}

// BEGIN: fast browser onload init
// Modifications by David Davis, DWD
// Dean Edwards/Matthias Miller/John Resig
// http://dean.edwards.name/weblog/2006/06/again/?full#comment5338

function mtInit() {
    // quit if this function has already been called
    if (arguments.callee.done) return;

    // flag this function so we don&apos;t do the same thing twice
    arguments.callee.done = true;

    // kill the timer
    // DWD - check against window
    if ( window._timer ) clearInterval(window._timer);

    // DWD - fire the window onload now, and replace it
    if ( window.onload &amp;&amp; ( window.onload !== window.mtInit ) ) {
        window.onload();
        window.onload = function() {};
    }
}

/* for Mozilla/Opera9 */
if (document.addEventListener) {
    document.addEventListener(&quot;DOMContentLoaded&quot;, mtInit, false);
}

/* for Internet Explorer */
/*@cc_on @*/
/*@if (@_win32)
document.write(&quot;&lt;script id=__ie_onload defer src=javascript:void(0)&gt;&lt;\/script&gt;&quot;);
var script = document.getElementById(&quot;__ie_onload&quot;);
script.onreadystatechange = function() {
    if (this.readyState == &quot;complete&quot;) {
        mtInit(); // call the onload handler
    }
};
/*@end @*/

/* for Safari */
if (/WebKit/i.test(navigator.userAgent)) { // sniff
    _timer = setInterval(function() {
        if (/loaded|complete/.test(document.readyState)) {
            mtInit(); // call the onload handler
        }
    }, 10);
}

/* for other browsers */
window.onload = mtInit;

// END: fast browser onload init

&lt;mt:IfBlog&gt;
&lt;mt:IfRegistrationAllowed&gt;
/***
 * If request contains a &apos;#_login&apos; or &apos;#_logout&apos; hash, use this to
 * also delete the blog-side user cookie, since we&apos;re coming back from
 * a login, logout or edit profile operation.
 */
var clearCookie = ( window.location.hash &amp;&amp; window.location.hash.match( /^#_log(in|out)/ ) ) ? true : false;
if (clearCookie) {
    // clear any logged in state
    mtClearUser();
    if (RegExp.$1 == &apos;in&apos;)
        mtFetchUser();
} else {
    &lt;mt:Ignore&gt;
    /***
     * Uncondition this call to fetch the current user state (if available)
     * from MT upon page load if no user cookie is already present.
     * This is okay if you have a private install, such as an Intranet;
     * not recommended for public web sites!
     */
    &lt;/mt:Ignore&gt;
    if ( is_preview &amp;&amp; !user )
        mtFetchUser();
}
&lt;/mt:IfRegistrationAllowed&gt;
&lt;/mt:IfBlog&gt;

</text></template>
<template id='45' blog_id='0' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606204235' identifier='new_password_reset_form' modified_on='20110606204235' name='新しいパスワード再設定フォーム' rebuild_me='1' type='new_password_reset_form' current_revision='0'><text>
&lt;$mt:Var name=&quot;screen_id&quot; value=&quot;reset-password&quot;$&gt;
&lt;$mt:Var name=&quot;body_class&quot; value=&quot;mt-profile-reset&quot;$&gt;
&lt;mt:SetVarBlock name=&quot;page_title&quot;&gt;パスワードの再設定&lt;/mt:SetVarBlock&gt;
&lt;mt:SetVarBlock name=&quot;title&quot;&gt;&lt;mt:If name=&quot;blog_id&quot;&gt;&lt;$mt:BlogName encode_html=&quot;1&quot;$&gt;: &lt;/mt:If&gt;&lt;$mt:Var name=&quot;page_title&quot;$&gt;&lt;/mt:SetVarBlock&gt;

&lt;$mt:Include module=&quot;シンプルヘッダー&quot;$&gt;

&lt;mt:if name=&quot;error&quot;&gt;
        &lt;mtapp:statusmsg
            id=&quot;error&quot;
            class=&quot;error&quot;&gt;
            &lt;mt:var name=&quot;error&quot;&gt;
        &lt;/mtapp:statusmsg&gt;
&lt;/mt:if&gt;

&lt;mt:If name=&quot;not_unique_email&quot;&gt;
        &lt;mtapp:statusmsg
            id=&quot;not-unique-email&quot;
            class=&quot;alert&quot;&gt;
            同じメールアドレスを持っているユーザーがいます。ユーザー名を入力してください。
        &lt;/mtapp:statusmsg&gt;
&lt;/mt:if&gt;

&lt;mt:if name=&quot;recovered&quot;&gt;
&lt;p&gt;「&lt;mt:var name=&quot;email&quot; escape=&quot;html&quot;&gt;」にパスワードをリセットするためのリンクを含むメールを送信しました。&lt;/p&gt;

&lt;div class=&quot;actions-bar&quot;&gt;
    &lt;mt:If name=&quot;return_to&quot;&gt;
        &lt;a
            href=&quot;&lt;$mt:var name=&quot;return_to&quot; escape=&quot;html&quot; $&gt;&quot;
            accesskey=&quot;x&quot;
            title=&quot;戻る (x)&quot;
            class=&quot;action button primary-button&quot;
            &gt;戻る&lt;/a&gt;
        &lt;mt:ElseIf name=&quot;can_signin&quot;&gt;
        &lt;a
            href=&quot;&lt;$mt:var name=&quot;script_url&quot;$&gt;&quot;
            accesskey=&quot;s&quot;
            title=&quot;Movable Type にサインイン (s)&quot;
            class=&quot;action button primary-button&quot;
            &gt;Movable Type にサインイン&lt;/a&gt;
        &lt;/a&gt;
    &lt;/mt:If&gt;
&lt;/div&gt;


&lt;mt:else&gt;
    &lt;form method=&quot;post&quot; action=&quot;&lt;$mt:Var name=&quot;script_url&quot;$&gt;&quot;&gt;
    &lt;input type=&quot;hidden&quot; name=&quot;__mode&quot; value=&quot;recover&quot; /&gt;
    &lt;input type=&quot;hidden&quot; name=&quot;return_to&quot; value=&quot;&lt;mt:Var name=&quot;return_to&quot; escape=&quot;html&quot;&gt;&quot; /&gt;
&lt;fieldset&gt;

&lt;mtapp:setting
    id=&quot;email&quot;
    label=&quot;電子メール&quot;
    label_class=&quot;top-label&quot;&gt;
    &lt;input type=&quot;text&quot; name=&quot;email&quot; id=&quot;email&quot; class=&quot;ti&quot; value=&quot;&lt;mt:var name=&quot;email&quot; escape=&quot;html&quot;&gt;&quot; /&gt;
&lt;/mtapp:setting&gt;

&lt;mt:If name=&quot;not_unique_email&quot;&gt;
&lt;mtapp:setting
    id=&quot;name&quot;
    label=&quot;ユーザー名&quot;
    label_class=&quot;top-label&quot;&gt;
    &lt;input type=&quot;text&quot; name=&quot;name&quot; id=&quot;name&quot; class=&quot;ti&quot; value=&quot;&lt;mt:var name=&quot;name&quot; escape=&quot;html&quot;&gt;&quot; /&gt;
&lt;/mtapp:setting&gt;
&lt;/mt:If&gt;

&lt;div class=&quot;actions-bar&quot;&gt;
    &lt;button
        type=&quot;submit&quot;
        accesskey=&quot;s&quot;
        title=&quot;再設定 (s)&quot;
        class=&quot;recover action primary-button&quot;
        &gt;再設定&lt;/button&gt;
    &lt;button
        onclick=&quot;history.back(); return false;&quot;
        type=&quot;submit&quot;
        accesskey=&quot;x&quot;
        title=&quot;戻る (x)&quot;
        class=&quot;action&quot;
        &gt;戻る&lt;/button&gt;
&lt;/div&gt;

&lt;/fieldset&gt;
&lt;/form&gt;
&lt;/mt:if&gt;

&lt;$mt:Include module=&quot;シンプルフッター&quot;$&gt;

</text></template>
<template id='46' blog_id='0' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606204235' identifier='register_form' modified_on='20110606204235' name='登録フォーム' rebuild_me='1' type='register_form' current_revision='0'><text>
&lt;$mt:Var name=&quot;body_class&quot; value=&quot;mt-profile-register&quot;$&gt;
&lt;mt:SetVarBlock name=&quot;page_title&quot;&gt;サインアップ&lt;/mt:SetVarBlock&gt;
&lt;mt:SetVarBlock name=&quot;title&quot;&gt;&lt;mt:If name=&quot;blog_id&quot;&gt;&lt;$mt:BlogName encode_html=&quot;1&quot;$&gt;: &lt;/mt:If&gt;&lt;$mt:Var name=&quot;page_title&quot;$&gt;&lt;/mt:SetVarBlock&gt;

&lt;$mt:Include module=&quot;シンプルヘッダー&quot;$&gt;

&lt;mt:If name=&quot;error&quot;&gt;
    &lt;mt:App:StatusMsg
        id=&quot;generic-error&quot;
        class=&quot;error&quot;&gt;
        &lt;$mt:Var name=&quot;error&quot;$&gt;
    &lt;/mt:App:StatusMsg&gt;
&lt;/mt:If&gt;
&lt;mt:If name=&quot;message&quot;&gt;
    &lt;mt:App:StatusMsg
        id=&quot;message&quot;
        class=&quot;alert&quot;&gt;
        &lt;$mt:Var name=&quot;message&quot;$&gt;
    &lt;/mt:App:StatusMsg&gt;
&lt;/mt:If&gt;

&lt;mt:SetVarBlock name=&quot;common_fields&quot; id=&quot;common_fields&quot;&gt;
    &lt;mt:App:Setting
        id=&quot;nickname&quot;
        label=&quot;表示名&quot;
        label_class=&quot;top-label&quot;
        required=&quot;1&quot;
        hint=&quot;あなたのコメントに表示される名前です。&quot;&gt;
        &lt;input type=&quot;text&quot; name=&quot;nickname&quot; id=&quot;nickname&quot; class=&quot;ti&quot; value=&quot;&lt;$mt:Var name=&quot;nickname&quot; escape=&quot;html&quot;$&gt;&quot; /&gt;
    &lt;/mt:App:Setting&gt;

    &lt;mt:App:Setting
        id=&quot;email&quot;
        label=&quot;電子メール&quot;
        label_class=&quot;top-label&quot;
        required=&quot;1&quot;
        hint=&quot;あなたのメールアドレスです。&quot;&gt;
        &lt;input type=&quot;text&quot; name=&quot;email&quot; id=&quot;email&quot; class=&quot;ti&quot; value=&quot;&lt;$mt:Var name=&quot;email&quot; escape=&quot;html&quot;$&gt;&quot; /&gt;
    &lt;/mt:App:Setting&gt;
&lt;/mt:SetVarBlock&gt;

&lt;form method=&quot;post&quot; action=&quot;&lt;$mt:Var name=&quot;script_url&quot;$&gt;&quot;&gt;
&lt;input type=&quot;hidden&quot; name=&quot;blog_id&quot; value=&quot;&lt;$mt:Var name=&quot;blog_id&quot; escape=&quot;html&quot;$&gt;&quot; /&gt;
&lt;input type=&quot;hidden&quot; name=&quot;return_to&quot; value=&quot;&lt;$mt:Var name=&quot;return_to&quot; escape=&quot;html&quot;$&gt;&quot; /&gt;
&lt;mt:If name=&quot;auth_mode_mt&quot;&gt;
&lt;input type=&quot;hidden&quot; name=&quot;__mode&quot; value=&quot;do_register&quot; /&gt;

    &lt;mt:App:Setting
        id=&quot;username&quot;
        label=&quot;ユーザー名&quot;
        label_class=&quot;top-label&quot;
        required=&quot;1&quot;
        hint=&quot;あなたのログイン名です。&quot;&gt;
        &lt;input type=&quot;text&quot; name=&quot;username&quot; id=&quot;username&quot; class=&quot;ti&quot; value=&quot;&lt;$mt:Var name=&quot;username&quot; escape=&quot;html&quot;$&gt;&quot; /&gt;
    &lt;/mt:App:Setting&gt;

    &lt;$mt:Var name=&quot;common_fields&quot;$&gt;

    &lt;mt:App:Setting
        id=&quot;password&quot;
        label=&quot;初期パスワード&quot;
        label_class=&quot;top-label&quot;
        required=&quot;1&quot;
        hint=&quot;パスワード選択してください。&quot;&gt;
        &lt;input type=&quot;password&quot; name=&quot;password&quot; id=&quot;password&quot; class=&quot;pw&quot; value=&quot;&quot; /&gt;
    &lt;/mt:App:Setting&gt;

    &lt;mt:App:Setting
        id=&quot;pass_verify&quot;
        label=&quot;パスワード再入力&quot;
        label_class=&quot;top-label&quot;
        required=&quot;1&quot;
        hint=&quot;確認のため、パスワードを再入力してください。&quot;&gt;
        &lt;input type=&quot;password&quot; name=&quot;pass_verify&quot; id=&quot;pass_verify&quot; class=&quot;pw&quot; value=&quot;&quot; /&gt;
    &lt;/mt:App:Setting&gt;

    &lt;mt:App:Setting
        id=&quot;url&quot;
        label=&quot;ウェブサイトURL&quot;
        label_class=&quot;top-label&quot;
        hint=&quot;あなたのウェブサイトのURLです。(オプション)&quot;&gt;
        &lt;input type=&quot;text&quot; name=&quot;url&quot; id=&quot;url&quot; class=&quot;ti&quot; value=&quot;&lt;$mt:Var name=&quot;url&quot; escape=&quot;html&quot;$&gt;&quot; /&gt;
    &lt;/mt:App:Setting&gt;

&lt;mt:If name=&quot;captcha_fields&quot;&gt;&lt;div class=&quot;setting&quot;&gt;
&lt;$mt:Var name=&quot;captcha_fields&quot;$&gt;
&lt;/div&gt;&lt;/mt:If&gt;

&lt;mt:Else&gt;
&lt;input type=&quot;hidden&quot; name=&quot;__mode&quot; value=&quot;do_register&quot; /&gt;
&lt;input type=&quot;hidden&quot; name=&quot;external_auth&quot; value=&quot;1&quot; /&gt;
    &lt;mt:App:Setting
        id=&quot;external_username&quot;
        label=&quot;ユーザー名&quot;
        required=&quot;1&quot;
        hint=&quot;あなたのログイン名です。&quot;&gt;
        &lt;input type=&quot;text&quot; name=&quot;username&quot; id=&quot;username&quot; class=&quot;ti&quot; value=&quot;&lt;$mt:Var name=&quot;username&quot; escape=&quot;html&quot;$&gt;&quot; /&gt;
    &lt;/mt:App:Setting&gt;
&lt;/mt:If&gt;

&lt;mt:Loop name=&quot;field_loop&quot;&gt;
    &lt;mt:If name=&quot;__first__&quot;&gt;
    &lt;input type=&quot;hidden&quot; name=&quot;_type&quot; value=&quot;author&quot; id=&quot;obj_type&quot; /&gt;
    &lt;input type=&quot;hidden&quot; name=&quot;customfield_beacon&quot; value=&quot;1&quot; id=&quot;customfield_beacon&quot; /&gt;
    &lt;/mt:If&gt;
    &lt;!-- start-customfield_&lt;$mt:Var name=&quot;basename&quot;$&gt; --&gt;
    &lt;mt:App:Setting
    id=&quot;$field_id&quot;
    label=&quot;$name&quot;
    hint=&quot;$description&quot;
    shown=&quot;$show_field&quot;
    show_hint=&quot;$show_hint&quot;
    required=&quot;$required&quot;&gt;

    &lt;$mt:Var name=&quot;field_html&quot;$&gt;

    &lt;/mt:App:Setting&gt;
    &lt;!-- end-customfield_&lt;$mt:Var name=&quot;basename&quot;$&gt; --&gt;
&lt;/mt:Loop&gt;

    &lt;div class=&quot;actions-bar&quot;&gt;
        &lt;button
            type=&quot;submit&quot;
            class=&quot;sign-up action primary-button&quot;
            accesskey=&quot;s&quot;
            &gt;サインアップ&lt;/button&gt;
    &lt;/div&gt;

&lt;/form&gt;

&lt;$mt:Include module=&quot;シンプルフッター&quot;$&gt;

</text></template>
<template id='47' blog_id='0' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606204235' identifier='register_confirmation' modified_on='20110606204235' name='登録の確認' rebuild_me='1' type='register_confirmation' current_revision='0'><text>
&lt;$mt:Var name=&quot;body_class&quot; value=&quot;mt-profile-register&quot;$&gt;
&lt;mt:If name=&quot;resend&quot;&gt;
    &lt;mt:SetVarBlock name=&quot;page_title&quot;&gt;確認メール送信完了&lt;/mt:SetVarBlock&gt;
&lt;mt:Else&gt;
    &lt;mt:SetVarBlock name=&quot;page_title&quot;&gt;プロフィールを作成しました。&lt;/mt:SetVarBlock&gt;
&lt;/mt:If&gt;
&lt;mt:SetVarBlock name=&quot;title&quot;&gt;&lt;mt:If name=&quot;blog_id&quot;&gt;&lt;$mt:BlogName encode_html=&quot;1&quot;$&gt;: &lt;/mt:If&gt;&lt;$mt:Var name=&quot;page_title&quot;$&gt;&lt;/mt:SetVarBlock&gt;

&lt;$mt:Include module=&quot;シンプルヘッダー&quot;$&gt;

&lt;p&gt;登録を完了するためにまずアカウントを確認する必要があります。&lt;$mt:Var name=&quot;email&quot; escape=&quot;html&quot;$&gt;にメールを送信しました。&lt;/p&gt;

&lt;p&gt;メールを確認して、メールに書かれたリンクをクリックすることで、アカウントを確認して有効化できます。&lt;/p&gt;

&lt;mt:if name=&quot;return_to&quot;&gt;
&lt;p&gt;&lt;a href=&quot;&lt;$mt:Var name=&quot;return_to&quot;$&gt;&quot;&gt;元のページに戻る&lt;/a&gt;&lt;/p&gt;
&lt;/mt:if&gt;

&lt;$mt:Include module=&quot;シンプルフッター&quot;$&gt;

</text></template>
<template id='48' blog_id='0' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606204235' identifier='navigation' modified_on='20110606204235' name='ナビゲーション' rebuild_me='1' type='custom' current_revision='0'><text>
&lt;div id=&quot;header-menu&quot;&gt;
    &lt;ul&gt;
&lt;mt:IfBlog&gt;
        &lt;li&gt;&lt;a href=&quot;&lt;$mt:Link template=&quot;main_index&quot;$&gt;&quot;&gt;ホーム&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&quot;&lt;$mt:Link template=&quot;archive_index&quot;$&gt;&quot;&gt;アーカイブ&lt;/a&gt;&lt;/li&gt;
&lt;mt:Else&gt;
        &lt;li&gt;&lt;a href=&quot;&lt;$mt:Var name=&quot;blog_url&quot;$&gt;&quot;&gt;ホーム&lt;/a&gt;&lt;/li&gt;
&lt;/mt:IfBlog&gt;
    &lt;/ul&gt;
&lt;/div&gt;

</text></template>
<template id='49' blog_id='0' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606204235' identifier='footer-email' modified_on='20110606204235' name='メールフッター' rebuild_me='1' type='custom' current_revision='0'><text>
-- 
Powered by Movable Type &lt;$mt:Version$&gt;
&lt;$mt:Var name=&quot;portal_url&quot;$&gt;
</text></template>
<template id='50' blog_id='0' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606204235' identifier='commenter_notify' modified_on='20110606204235' name='コメントの通知' rebuild_me='1' type='email' current_revision='0'><text>これは新しいユーザーがブログ「&lt;$mt:BlogName$&gt;」に登録を完了したことを通知するメールです。新しいユーザーの情報は以下に記載されています。

新規登録ユーザー:
ユーザー名: &lt;$mt:CommenterUsername$&gt; 
名前: &lt;$mt:CommenterName$&gt;
メール: &lt;$mt:CommenterEmail$&gt;

このユーザーの情報を見たり編集する場合には、下記のURLをクリックするか、URLをコピーしてブラウザのアドレス欄に貼り付けてください。
&lt;$mt:Var name=&quot;profile_url&quot;$&gt;

&lt;$mt:Include module=&quot;メールフッター&quot;$&gt;
</text></template>
<template id='51' blog_id='0' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606204235' identifier='signin' modified_on='20110606204235' name='サインイン' rebuild_me='1' type='custom' current_revision='0'><text>
&lt;div class=&quot;widget-sign-in widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;サインイン&lt;/h3&gt;
    &lt;div id=&quot;signin-widget-content&quot; class=&quot;widget-content&quot;&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
/* &lt;![CDATA[ */
function mtUpdateSignInWidget(u) {
    var separator = &apos;&amp;nbsp;&amp;nbsp;|&amp;nbsp;&amp;nbsp;&apos;;
    var el = document.getElementById(&apos;signin-widget-content&apos;);
    var content = &apos;&apos;;
    if (!el) return;
    if (u) {
        if (u &amp;&amp; u.is_authenticated) {
            user = u;
            mtSaveUser();
        } else {
            // user really isn&apos;t logged in; so let&apos;s do this!
            return mtSignIn();
        }
    } else {
        u = mtGetUser();
    }
    if (u &amp;&amp; u.name) {
        var url;
        if (u.is_authenticated) {
            url = &apos;&lt;$mt:CGIPath$&gt;&lt;$mt:CommunityScript$&gt;?__mode=view&amp;blog_id=&lt;$mt:BlogID$&gt;&apos;;
            url += &apos;&amp;static=&apos; + encodeURIComponent( location.href );
        } else if (u.url) {
            url = u.url;
        } else {
            url = null;
        }
        if (url)
            content += &apos;&lt;a href=&quot;&apos; + url + &apos;&quot;&gt;&apos; + u.name + &apos;&lt;/a&gt;&apos;;
        else
            content += &apos;&apos; + u.name + &apos;&apos;;
        if (u.is_author)
            content += separator + &apos;&lt;a href=&quot;&lt;$mt:CGIPath$&gt;&lt;$mt:CommunityScript$&gt;?__mode=edit&amp;blog_id=&lt;$mt:BlogID$&gt;&amp;return_to=&apos; + encodeURIComponent(document.URL) + &apos;&quot;&gt;ユーザー情報の編集&lt;/a&gt;&apos;;
        &lt;mt:Unless name=&quot;hide_signout_link&quot;&gt;
        content += separator + &apos;&lt;a href=&quot;javascript:void(0)&quot; onclick=&quot;return mtSignOutOnClick()&quot;&gt;サインアウト&lt;/a&gt;&apos;;
        &lt;/mt:Unless&gt;
    } else if (u &amp;&amp; u.is_banned) {
        content = &apos;このブログにサインインする権限がありません。&apos;;
    } else {
        content = &apos;&lt;a href=&quot;javascript:void(0)&quot; onclick=&quot;return mtSignInOnClick(\&apos;signin-widget-content\&apos;)&quot;&gt;サインイン&lt;/a&gt;&apos;;
        &lt;mt:IfExternalUserManagement&gt;
        &lt;mt:Else&gt;
        &lt;mt:IfCommenterRegistrationAllowed&gt;
        content += separator + &apos;&lt;a href=&quot;&lt;$mt:CGIPath$&gt;&lt;$mt:CommunityScript$&gt;?__mode=register&amp;blog_id=&lt;$mt:BlogID$&gt;&amp;return_to=&apos; + encodeURIComponent(document.URL) + &apos;&quot;&gt;登録&lt;/a&gt;&apos;;
        &lt;/mt:IfCommenterRegistrationAllowed&gt;
        &lt;/mt:IfExternalUserManagement&gt;
    }
    el.innerHTML = content;
}
mtAttachEvent(&apos;usersignin&apos;, mtUpdateSignInWidget);
mtUpdateSignInWidget();
/* ]]&gt; */
&lt;/script&gt;

</text></template>
<template id='52' blog_id='0' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606204235' identifier='new_password' modified_on='20110606204235' name='新しいパスワードの設定フォーム' rebuild_me='1' type='new_password' current_revision='0'><text>
&lt;mt:var name=&quot;screen_id&quot; value=&quot;change-password&quot;&gt;
&lt;mt:var name=&quot;body_class&quot; value=&quot;mt-profile-reset&quot;&gt;
&lt;mt:setvarblock name=&quot;page_title&quot;&gt;パスワードの変更&lt;/mt:setvarblock&gt;
&lt;mt:setvar name=&quot;complete&quot; value=&quot;1&quot;&gt;
&lt;mt:SetVarBlock name=&quot;title&quot;&gt;&lt;mt:If name=&quot;blog_id&quot;&gt;&lt;$mt:BlogName encode_html=&quot;1&quot;$&gt;: &lt;/mt:If&gt;&lt;$mt:Var name=&quot;page_title&quot;$&gt;&lt;/mt:SetVarBlock&gt;

&lt;$mt:Include module=&quot;シンプルヘッダー&quot;$&gt;

&lt;mt:if name=&quot;error&quot;&gt;
        &lt;mtapp:statusmsg
            id=&quot;error&quot;
            class=&quot;error&quot;&gt;
            &lt;mt:var name=&quot;error&quot;&gt;
        &lt;/mtapp:statusmsg&gt;
&lt;/mt:if&gt;

    &lt;form method=&quot;post&quot; action=&quot;&lt;mt:var name=&quot;script_url&quot;&gt;&quot;&gt;
    &lt;input type=&quot;hidden&quot; name=&quot;__mode&quot; value=&quot;new_pw&quot; /&gt;
    &lt;input type=&quot;hidden&quot; name=&quot;token&quot; value=&quot;&lt;mt:var name=&quot;token&quot; escape=&quot;html&quot;&gt;&quot; /&gt;
    &lt;input type=&quot;hidden&quot; name=&quot;email&quot; value=&quot;&lt;mt:var name=&quot;email&quot; escape=&quot;html&quot;&gt;&quot; /&gt;
&lt;fieldset&gt;

&lt;mtapp:setting
    id=&quot;name&quot;
    label=&quot;新しいパスワード&quot;
    label_class=&quot;top-label&quot;&gt;
    &lt;input type=&quot;password&quot; name=&quot;password&quot; id=&quot;password&quot; value=&quot;&lt;mt:var name=&quot;password&quot;&gt;&quot; class=&quot;ti&quot; /&gt;
&lt;/mtapp:setting&gt;

&lt;mtapp:setting
    id=&quot;name&quot;
    label=&quot;新しいパスワード確認&quot;
    label_class=&quot;top-label&quot;&gt;
    &lt;input type=&quot;password&quot; name=&quot;password_again&quot; id=&quot;password_again&quot; value=&quot;&lt;mt:var name=&quot;password_again&quot;&gt;&quot; class=&quot;ti&quot; /&gt;
&lt;/mtapp:setting&gt;

&lt;div class=&quot;actions-bar&quot;&gt;
    &lt;button
        type=&quot;submit&quot;
        accesskey=&quot;s&quot;
        title=&quot;変更&quot;
        class=&quot;action primary-button&quot;
        &gt;変更&lt;/button&gt;
&lt;/div&gt;

&lt;/fieldset&gt;
&lt;/form&gt;
&lt;$mt:Include module=&quot;シンプルフッター&quot;$&gt;


</text></template>
<template id='53' blog_id='0' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606204235' identifier='login_form' modified_on='20110606204235' name='ログインフォーム' rebuild_me='1' type='login_form' current_revision='0'><text>&lt;$mt:Var name=&quot;screen_id&quot; value=&quot;sign-in&quot;$&gt;
&lt;$mt:Var name=&quot;body_class&quot; value=&quot;mt-profile-login&quot;$&gt;
&lt;mt:SetVarBlock name=&quot;page_title&quot;&gt;サインイン&lt;/mt:SetVarBlock&gt;
&lt;mt:SetVarBlock name=&quot;title&quot;&gt;&lt;mt:If name=&quot;blog_id&quot;&gt;&lt;$mt:BlogName encode_html=&quot;1&quot;$&gt;: &lt;/mt:If&gt;&lt;$mt:Var name=&quot;page_title&quot;$&gt;&lt;/mt:SetVarBlock&gt;



&lt;$mt:Include module=&quot;シンプルヘッダー&quot;$&gt;

&lt;mt:If name=&quot;auth_loop&quot;&gt;
&lt;mtapp:setting
    id=&quot;comment_signin_options&quot;
    label=&quot;サインイン...&quot;&gt;
    &lt;select name=&quot;auth_options&quot; id=&quot;auth_options&quot;&gt;
        &lt;option value=&quot;&lt;mt:var name=&quot;default_id&quot; escape=&quot;html&quot;&gt;&quot;&gt;&lt;mt:var name=&quot;default_signin&quot; escape=&quot;html&quot;&gt;&lt;/option&gt;
    &lt;mt:loop name=&quot;auth_loop&quot;&gt;
        &lt;option value=&quot;&lt;mt:var name=&quot;id&quot; escape=&quot;html&quot;&gt;&quot;&gt;&lt;mt:var name=&quot;name&quot; escape=&quot;html&quot;&gt;&lt;/option&gt;
    &lt;/mt:loop&gt;
    &lt;/select&gt;
&lt;/mtapp:setting&gt;
&lt;/mt:If&gt;

&lt;mt:If name=&quot;message&quot;&gt;
    &lt;mtapp:statusmsg
        id=&quot;message&quot;
        class=&quot;alert&quot;&gt;
        &lt;$mt:Var name=&quot;message&quot;$&gt;
    &lt;/mt:App:StatusMsg&gt;
&lt;/mt:If&gt;
&lt;mt:If name=&quot;error&quot;&gt;
    &lt;mtapp:statusmsg
        id=&quot;generic-error&quot;
        class=&quot;error&quot;&gt;
        &lt;$mt:Var name=&quot;error&quot;$&gt;
    &lt;/mt:App:StatusMsg&gt;
&lt;/mt:If&gt;

&lt;div id=&quot;signin_with_&lt;mt:var name=&quot;default_id&quot; escape=&quot;html&quot;&gt;&quot;&lt;mt:Unless name=&quot;enabled_MovableType&quot;&gt; style=&quot;display: none&quot;&lt;/mt:Unless&gt;&gt;
    &lt;form method=&quot;post&quot; action=&quot;&lt;$mt:Var name=&quot;script_url&quot;$&gt;&quot;&gt;
        &lt;input type=&quot;hidden&quot; name=&quot;__mode&quot; value=&quot;do_login&quot; /&gt;
        &lt;input type=&quot;hidden&quot; name=&quot;blog_id&quot; value=&quot;&lt;$mt:Var name=&quot;blog_id&quot;$&gt;&quot; /&gt;
        &lt;input type=&quot;hidden&quot; name=&quot;return_to&quot; value=&quot;&lt;$mt:Var name=&quot;return_to&quot;$&gt;&quot; /&gt;
    &lt;mt:Unless name=&quot;auth_mode_mt&quot;&gt;
        &lt;input type=&quot;hidden&quot; name=&quot;external_auth&quot; value=&quot;1&quot; /&gt;
    &lt;/mt:Unless&gt;

        &lt;mtapp:setting
            id=&quot;username&quot;
            label=&quot;ユーザー名&quot;
            label_class=&quot;top-label&quot;&gt;
            &lt;input type=&quot;text&quot; name=&quot;username&quot; id=&quot;username&quot; class=&quot;ti&quot; /&gt;
        &lt;/mt:App:Setting&gt;

        &lt;mtapp:setting
            id=&quot;password&quot;
            label=&quot;パスワード&quot;
            label_class=&quot;top-label&quot;&gt;
            &lt;input type=&quot;password&quot; name=&quot;password&quot; id=&quot;password&quot; class=&quot;pw&quot; /&gt;
        &lt;/mt:App:Setting&gt;

        &lt;p&gt;&lt;label&gt;ログイン情報を記憶する&lt;/label&gt; &lt;input type=&quot;checkbox&quot; name=&quot;remember&quot; value=&quot;1&quot; accesskey=&quot;r&quot; /&gt;&lt;/p&gt;

        &lt;div class=&quot;actions-bar actions-bar-buttom&quot;&gt;
            &lt;button
                type=&quot;submit&quot;
                class=&quot;sign-in action primary-button&quot;
                accesskey=&quot;s&quot;
                &gt;サインイン&lt;/button&gt;
    &lt;mt:If name=&quot;can_recover_password&quot;&gt;
                &lt;p id=&quot;forget-password&quot;&gt;&lt;a href=&quot;&lt;$mt:Var name=&quot;script_url&quot;$&gt;?__mode=start_recover&amp;amp;return_to=&lt;$mt:Var name=&quot;return_to&quot; escape=&quot;url&quot;$&gt;&quot;&gt;パスワードをお忘れですか?&lt;/a&gt;&lt;/p&gt;
    &lt;/mt:If&gt;
       &lt;/div&gt;
    &lt;mt:IfCommenterRegistrationAllowed&gt;
        &lt;mt:IfExternalUserManagement&gt;
        &lt;mt:else&gt;
            &lt;mt:If name=&quot;blog_id&quot;&gt;
       &lt;p id=&quot;sign-up&quot;&gt;アカウントがないときは&lt;a href=&quot;&lt;$mt:Var name=&quot;script_url&quot;$&gt;?__mode=register&amp;blog_id=&lt;$mt:Var name=&quot;blog_id&quot;$&gt;&amp;return_to=&lt;$mt:Var name=&quot;return_to&quot; escape=&quot;url&quot;$&gt;&quot;&gt;サインアップ&lt;/a&gt;してください。&lt;/p&gt;
            &lt;/mt:If&gt;
        &lt;/mt:IfExternalUserManagement&gt;
    &lt;/mt:IfCommenterRegistrationAllowed&gt;

   &lt;/form&gt;
&lt;/div&gt;

&lt;mt:If name=&quot;auth_loop&quot;&gt;
&lt;dl&gt;
&lt;mt:Loop name=&quot;auth_loop&quot;&gt;
    &lt;dd&gt;
        &lt;div id=&quot;signin_with_&lt;mt:var name=&quot;id&quot; escape=&quot;html&quot;&gt;&quot;&lt;mt:If name=&quot;name&quot; ne=&quot;$default_signin&quot;&gt; style=&quot;display: none&quot;&lt;/mt:If&gt;&gt;
            &lt;$mt:Var name=&quot;login_form&quot;$&gt;
        &lt;/div&gt;
    &lt;/dd&gt;
&lt;/mt:Loop&gt;
&lt;/dl&gt;
&lt;/mt:If&gt;

&lt;script type=&quot;text/javascript&quot;&gt;
/* &lt;![CDATA[ */
jQuery(function() {
    jQuery(&apos;#auth_options&apos;).change(function() {
        jQuery(&apos;div[id^=signin_with_]&apos;).hide();
        jQuery(&apos;#signin_with_&apos;+jQuery(this).val()).show();
    });
});
/* ]]&gt; */
&lt;/script&gt;
&lt;$mt:Include module=&quot;シンプルフッター&quot;$&gt;

</text></template>
<template id='54' blog_id='0' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606204235' identifier='verify-subscribe' modified_on='20110606204235' name='購読の確認' rebuild_me='1' type='email' current_revision='0'><text>&lt;$mt:BlogName$&gt;のアップデート通知にご登録いただきありがとうございました。以下のリンクから登録を完了させてください。

&lt;$mt:Var name=&quot;script_path&quot;$&gt;?__mode=confirm;email=&lt;$mt:Var name=&quot;email&quot; escape=&quot;url&quot;$&gt;;magic=&lt;$mt:Var name=&quot;magic&quot; escape=&quot;url&quot;$&gt;;blog_id=&lt;$mt:BlogID$&gt;&lt;mt:If name=&quot;redirect_url&quot;&gt;;redirect=&lt;$mt:Var name=&quot;redirect_url&quot; escape=&quot;url&quot;$&gt;&lt;mt:Else&gt;&lt;mt:If name=&quot;entry&quot;&gt;;entry_id=&lt;$mt:EntryID$&gt;&lt;/mt:If&gt;&lt;/mt:If&gt;

リンクをクリックできない場合は、お使いのウェブブラウザに貼り付けてください。

&lt;$mt:Include module=&quot;メールフッター&quot;$&gt;
</text></template>
<template id='55' blog_id='0' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606204235' identifier='search' modified_on='20110606204235' name='検索' rebuild_me='1' type='custom' current_revision='0'><text>&lt;div class=&quot;header-search&quot;&gt;
    &lt;form method=&quot;get&quot; action=&quot;&lt;$mt:CGIPath$&gt;&lt;$mt:SearchScript$&gt;&quot;&gt;
&lt;mt:IfBlog&gt;
        &lt;input type=&quot;hidden&quot; name=&quot;IncludeBlogs&quot; value=&quot;&lt;$mt:BlogID$&gt;&quot; /&gt;
&lt;/mt:IfBlog&gt;
        &lt;input type=&quot;hidden&quot; name=&quot;limit&quot; value=&quot;&lt;$mt:SearchMaxResults$&gt;&quot; /&gt;
        &lt;label for=&quot;search&quot;&gt;検索&lt;/label&gt;
        &lt;input id=&quot;search&quot; class=&quot;query&quot; name=&quot;search&quot; value=&quot;&lt;$mt:SearchString$&gt;&quot; /&gt;
        &lt;input class=&quot;submit&quot; type=&quot;submit&quot; value=&quot;Go&quot; /&gt;
    &lt;/form&gt;
&lt;/div&gt;
</text></template>
<template id='56' blog_id='0' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606204235' identifier='profile_edit_form' modified_on='20110606204235' name='プロフィールの編集フォーム' rebuild_me='1' type='profile_edit_form' current_revision='0'><text>
&lt;$mt:Var name=&quot;body_class&quot; value=&quot;mt-profile-edit&quot;$&gt;
&lt;mt:SetVarBlock name=&quot;page_title&quot;&gt;ユーザー情報の編集&lt;/mt:SetVarBlock&gt;
&lt;mt:SetVarBlock name=&quot;title&quot;&gt;&lt;mt:If name=&quot;blog_id&quot;&gt;&lt;$mt:BlogName encode_html=&quot;1&quot;$&gt;: &lt;/mt:If&gt;&lt;$mt:Var name=&quot;page_title&quot;$&gt;&lt;/mt:SetVarBlock&gt;

&lt;mt:SetVarBlock name=&quot;content_header&quot; id=&quot;content_header&quot;&gt;
&lt;mt:If name=&quot;saved&quot;&gt;
    &lt;mtapp:statusmsg
        id=&quot;saved&quot;
        class=&quot;success&quot;&gt;
        ユーザー情報を更新しました。&lt;mt:If name=&quot;blog_id&quot;&gt; &lt;a href=&quot;&lt;$mt:Var name=&quot;return_to&quot; escape=&quot;html&quot;$&gt;&quot;&gt;元のページに戻る&lt;/a&gt; / &lt;a href=&quot;&lt;$mt:CGIPath$&gt;&lt;$mt:CommunityScript$&gt;?__mode=view&lt;mt:If name=&quot;blog_id&quot;&gt;&amp;blog_id=&lt;$mt:Var name=&quot;blog_id&quot;$&gt;&lt;/mt:If&gt;&quot;&gt;プロフィールを表示する&lt;/a&gt;&lt;/mt:If&gt;
    &lt;/mt:App:StatusMsg&gt;
&lt;/mt:If&gt;
&lt;mt:If name=&quot;error&quot;&gt;
    &lt;mtapp:statusmsg
        id=&quot;generic-error&quot;
        class=&quot;error&quot;&gt;
        &lt;$mt:Var name=&quot;error&quot;$&gt;
    &lt;/mt:App:StatusMsg&gt;
&lt;/mt:If&gt;
&lt;/mt:SetVarBlock&gt;

&lt;$mt:Include module=&quot;シンプルヘッダー&quot;$&gt;

&lt;$mt:Var name=&quot;content_header&quot;$&gt;

&lt;form name=&quot;profile&quot; id=&quot;profile&quot; method=&quot;post&quot; action=&quot;&lt;$mt:Var name=&quot;script_url&quot;$&gt;&quot; enctype=&quot;multipart/form-data&quot;&gt;
    &lt;input type=&quot;hidden&quot; name=&quot;__mode&quot; value=&quot;save&quot; /&gt;
    &lt;mt:If name=&quot;blog_id&quot;&gt;
    &lt;input type=&quot;hidden&quot; name=&quot;blog_id&quot; value=&quot;&lt;$mt:Var name=&quot;blog_id&quot; escape=&quot;html&quot;$&gt;&quot; /&gt;
    &lt;/mt:If&gt;
    &lt;input type=&quot;hidden&quot; name=&quot;magic_token&quot; value=&quot;&lt;$mt:Var name=&quot;magic_token&quot;$&gt;&quot; /&gt;
    &lt;input type=&quot;hidden&quot; name=&quot;return_args&quot; value=&quot;&lt;$mt:Var name=&quot;return_args&quot; escape=&quot;html&quot;$&gt;&quot; /&gt;
    &lt;input type=&quot;hidden&quot; name=&quot;return_to&quot; value=&quot;&lt;$mt:Var name=&quot;return_to&quot; escape=&quot;html&quot;$&gt;&quot; /&gt;
&lt;mt:If name=&quot;id&quot;&gt;
    &lt;input type=&quot;hidden&quot; name=&quot;id&quot; value=&quot;&lt;$mt:Var name=&quot;id&quot; escape=&quot;html&quot;$&gt;&quot; /&gt;
&lt;/mt:If&gt;

&lt;mt:SetVarBlock name=&quot;field-content&quot;&gt;&lt;span id=&quot;name&quot;&gt;&lt;$mt:Var name=&quot;name&quot; escape=&quot;html&quot;$&gt;&lt;/span&gt;&lt;input type=&quot;hidden&quot; name=&quot;name&quot; class=&quot;ti&quot; value=&quot;&lt;$mt:Var name=&quot;name&quot; escape=&quot;html&quot;$&gt;&quot; /&gt;&lt;/mt:SetVarBlock&gt;
&lt;$mt:Include module=&quot;フォームフィールド&quot; id=&quot;name&quot; class=&quot;&quot; required=&quot;1&quot; label=&quot;ユーザー名&quot;$&gt;

&lt;mt:SetVarBlock name=&quot;field-content&quot;&gt;&lt;input type=&quot;text&quot; name=&quot;nickname&quot; id=&quot;nickname&quot; class=&quot;ti&quot; value=&quot;&lt;$mt:Var name=&quot;nickname&quot; escape=&quot;html&quot;$&gt;&quot; /&gt;&lt;/mt:SetVarBlock&gt;
&lt;$mt:Include module=&quot;フォームフィールド&quot; id=&quot;nickname&quot; class=&quot;&quot; required=&quot;$auth_type_mt&quot; label=&quot;表示名&quot;$&gt;

&lt;mt:SetVarBlock name=&quot;field-content&quot;&gt;&lt;input type=&quot;text&quot; name=&quot;email&quot; id=&quot;email&quot; class=&quot;ti&quot; value=&quot;&lt;$mt:Var name=&quot;email&quot; escape=&quot;html&quot;$&gt;&quot; /&gt;&lt;/mt:SetVarBlock&gt;
&lt;$mt:Include module=&quot;フォームフィールド&quot; id=&quot;email&quot; class=&quot;&quot; required=&quot;$auth_type_mt&quot; label=&quot;電子メール&quot;$&gt;

&lt;mt:If name=&quot;auth_mode_mt&quot;&gt;

    &lt;mt:If name=&quot;can_modify_password&quot;&gt;
    &lt;mt:SetVarBlock name=&quot;field-content&quot;&gt;&lt;input type=&quot;password&quot; name=&quot;pass&quot; id=&quot;pass&quot; class=&quot;pw&quot; /&gt;&lt;/mt:SetVarBlock&gt;
    &lt;$mt:Include module=&quot;フォームフィールド&quot; id=&quot;pass&quot; class=&quot;&quot; label=&quot;新しいパスワード&quot;$&gt;

    &lt;mt:SetVarBlock name=&quot;field-content&quot;&gt;&lt;input type=&quot;password&quot; name=&quot;pass_verify&quot; id=&quot;pass_verify&quot; class=&quot;pw&quot; /&gt;&lt;/mt:SetVarBlock&gt;
    &lt;$mt:Include module=&quot;フォームフィールド&quot; id=&quot;pass_verify&quot; class=&quot;&quot; label=&quot;パスワード確認&quot;$&gt;
    &lt;/mt:If&gt;

&lt;mt:Else&gt;
    &lt;input type=&quot;hidden&quot; name=&quot;external_auth&quot; value=&quot;1&quot; /&gt;
&lt;/mt:If&gt;

&lt;mt:SetVarBlock name=&quot;field-content&quot;&gt;&lt;input type=&quot;text&quot; name=&quot;url&quot; id=&quot;url&quot; class=&quot;ti&quot; value=&quot;&lt;$mt:Var name=&quot;url&quot; escape=&quot;html&quot;$&gt;&quot;  /&gt;&lt;/mt:SetVarBlock&gt;
&lt;$mt:Include module=&quot;フォームフィールド&quot; id=&quot;url&quot; class=&quot;&quot; label=&quot;ウェブサイトURL&quot;$&gt;

&lt;mt:SetVarBlock name=&quot;field-content&quot;&gt;
    &lt;mt:If name=&quot;userpic&quot;&gt;
        &lt;$mt:Var name=&quot;userpic&quot;$&gt;
        &lt;div&gt;
        &lt;input type=&quot;file&quot; name=&quot;file&quot; id=&quot;file&quot; class=&quot;fi&quot; /&gt;
        &lt;/div&gt;
    &lt;mt:else&gt;
        &lt;div&gt;
        &lt;input type=&quot;file&quot; name=&quot;file&quot; id=&quot;file&quot; class=&quot;fi&quot; /&gt;
        &lt;/div&gt;
    &lt;/mt:If&gt;
&lt;/mt:SetVarBlock&gt;
&lt;$mt:Include module=&quot;フォームフィールド&quot; id=&quot;file&quot; class=&quot;&quot; label=&quot;プロフィール画像&quot;$&gt;

&lt;mt:Loop name=&quot;field_loop&quot;&gt;
    &lt;mt:If name=&quot;__first__&quot;&gt;
    &lt;input type=&quot;hidden&quot; name=&quot;_type&quot; value=&quot;author&quot; id=&quot;obj_type&quot; /&gt;
    &lt;input type=&quot;hidden&quot; name=&quot;customfield_beacon&quot; value=&quot;1&quot; id=&quot;customfield_beacon&quot; /&gt;
    &lt;/mt:If&gt;
    &lt;!-- start-customfield_&lt;$mt:Var name=&quot;basename&quot;$&gt; --&gt;
    &lt;mtapp:setting
        id=&quot;$field_id&quot;
        label=&quot;$name&quot;
        hint=&quot;$description&quot;
        shown=&quot;$show_field&quot;
        show_hint=&quot;$show_hint&quot;
        required=&quot;$required&quot;
        content_class=&quot;$content_class&quot;&gt;

    &lt;$mt:Var name=&quot;field_html&quot;$&gt;

    &lt;/mtapp:setting&gt;
    &lt;!-- end-customfield_&lt;$mt:Var name=&quot;basename&quot;$&gt; --&gt;
&lt;/mt:Loop&gt;

&lt;div class=&quot;actions-bar actions-bar-login&quot;&gt;
    &lt;button
        type=&quot;submit&quot;
        accesskey=&quot;s&quot;
        title=&quot;保存&quot;
        class=&quot;save action primary-button&quot;
        &gt;保存&lt;/button&gt;
&lt;/div&gt;

&lt;/form&gt;

&lt;mt:If name=&quot;blog_id&quot;&gt;
&lt;p&gt;&lt;a href=&quot;&lt;$mt:Var name=&quot;return_to&quot; escape=&quot;html&quot;$&gt;&quot;&gt;元のページに戻る&lt;/a&gt; / &lt;a href=&quot;&lt;$mt:CGIPath$&gt;&lt;$mt:CommunityScript$&gt;?__mode=view&lt;mt:If name=&quot;blog_id&quot;&gt;&amp;blog_id=&lt;$mt:Var name=&quot;blog_id&quot;$&gt;&lt;/mt:If&gt;&quot;&gt;プロフィールを表示する&lt;/a&gt;&lt;/p&gt;
&lt;/mt:If&gt;

&lt;$mt:Include module=&quot;シンプルフッター&quot;$&gt;

</text></template>
<template id='57' blog_id='0' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606204235' identifier='profile_feed' modified_on='20110606204235' name='プロフィールフィード' rebuild_me='1' type='profile_feed' current_revision='0'><text>&lt;?xml version=&quot;1.0&quot; encoding=&quot;&lt;$mt:PublishCharset$&gt;&quot;?&gt;
&lt;feed xmlns=&quot;http://www.w3.org/2005/Atom&quot;&gt;
    &lt;title&gt;&lt;$mt:Var name=&quot;feed_title&quot;$&gt;&lt;/title&gt;
    &lt;generator uri=&quot;http://www.sixapart.com/movabletype/&quot;&gt;&lt;$mt:ProductName version=&quot;1&quot;$&gt;&lt;/generator&gt;
    &lt;link rel=&quot;self&quot; href=&quot;&lt;$mt:Var name=&quot;feed_self&quot;$&gt;&quot; /&gt;
    &lt;link type=&quot;text/html&quot; rel=&quot;alternate&quot; href=&quot;&lt;$mt:CGIPath$&gt;&lt;$mt:CommunityScript$&gt;?__mode=view&amp;amp;id=&lt;$mt:AuthorID$&gt;&lt;mt:If name=&quot;blog_id&quot;&gt;&amp;amp;blog_id=&lt;$mt:Var name=&quot;blog_id&quot;$&gt;&lt;/mt:If&gt;&quot; title=&quot;&lt;$mt:AuthorDisplayName encode_html=&quot;1&quot;$&gt;&quot;/&gt;
    &lt;mt:If name=&quot;feed_updated&quot;&gt;&lt;updated&gt;&lt;$mt:Var name=&quot;feed_updated&quot;$&gt;&lt;/updated&gt;&lt;/mt:If&gt;
    &lt;id&gt;&lt;$mt:Var name=&quot;feed_self&quot;$&gt;&lt;/id&gt;
&lt;mt:If name=&quot;entry&quot;&gt;
    &lt;mt:Entries lastn=&quot;15&quot;&gt;
    &lt;entry&gt;
        &lt;title&gt;&lt;$mt:EntryTitle remove_html=&quot;1&quot; encode_xml=&quot;1&quot;$&gt;&lt;/title&gt;
        &lt;link rel=&quot;alternate&quot; type=&quot;text/html&quot; href=&quot;&lt;$mt:EntryPermalink encode_xml=&quot;1&quot;$&gt;&quot; /&gt;
        &lt;id&gt;&lt;$mt:EntryAtomID$&gt;&lt;/id&gt;

        &lt;published&gt;&lt;$mt:EntryDate utc=&quot;1&quot; format=&quot;%Y-%m-%dT%H:%M:%SZ&quot;$&gt;&lt;/published&gt;
        &lt;updated&gt;&lt;$mt:EntryModifiedDate utc=&quot;1&quot; format=&quot;%Y-%m-%dT%H:%M:%SZ&quot;$&gt;&lt;/updated&gt;

        &lt;summary&gt;&lt;$mt:EntryExcerpt remove_html=&quot;1&quot; encode_xml=&quot;1&quot;$&gt;&lt;/summary&gt;
        &lt;author&gt;
            &lt;name&gt;&lt;$mt:EntryAuthorDisplayName encode_xml=&quot;1&quot;$&gt;&lt;/name&gt;
            &lt;uri&gt;&lt;$mt:CGIPath encode_xml=&quot;1&quot;$&gt;&lt;$mt:CommunityScript encode_xml=&quot;1&quot;$&gt;?__mode=view&amp;amp;blog_id=&lt;$mt:BlogID$&gt;&amp;amp;id=&lt;$mt:EntryAuthorID$&gt;&lt;/uri&gt;
        &lt;/author&gt;
        &lt;mt:EntryCategories&gt;
            &lt;category term=&quot;&lt;$mt:CategoryLabel encode_xml=&quot;1&quot;$&gt;&quot; scheme=&quot;http://www.sixapart.com/ns/types#category&quot; /&gt;
        &lt;/mt:EntryCategories&gt;
        &lt;mt:EntryTags&gt;&lt;category term=&quot;&lt;$mt:TagName normalize=&quot;1&quot; encode_xml=&quot;1&quot;$&gt;&quot; label=&quot;&lt;$mt:TagName encode_xml=&quot;1&quot;$&gt;&quot; scheme=&quot;http://www.sixapart.com/ns/types#tag&quot; /&gt;&lt;/mt:EntryTags&gt;
        &lt;content type=&quot;html&quot; xml:lang=&quot;&lt;$mt:BlogLanguage ietf=&quot;1&quot;$&gt;&quot; xml:base=&quot;&lt;$mt:BlogURL encode_xml=&quot;1&quot;$&gt;&quot;&gt;
            &lt;$mt:EntryBody encode_xml=&quot;1&quot;$&gt;
            &lt;$mt:EntryMore encode_xml=&quot;1&quot;$&gt;
        &lt;/content&gt;
    &lt;/entry&gt;
    &lt;/mt:Entries&gt;
&lt;mt:ElseIf name=&quot;comment&quot;&gt;
    &lt;mt:Comments lastn=&quot;15&quot;&gt;
    &lt;entry&gt;
        &lt;title&gt;&lt;$mt:CommentBody trim=&quot;20&quot; remove_html=&quot;1&quot; encode_xml=&quot;1&quot;$&gt;&lt;/title&gt;
        &lt;link rel=&quot;alternate&quot; type=&quot;text/html&quot; href=&quot;&lt;$mt:CommentLink encode_xml=&quot;1&quot;$&gt;&quot; /&gt;
        &lt;id&gt;&lt;mt:CommentEntry&gt;&lt;$mt:EntryAtomID$&gt;&lt;/mt:CommentEntry&gt;#&lt;$mt:CommentID$&gt;&lt;/id&gt;
        &lt;updated&gt;&lt;$mt:CommentDate utc=&quot;1&quot; format=&quot;%Y-%m-%dT%H:%M:%SZ&quot;$&gt;&lt;/updated&gt;
        &lt;author&gt;
            &lt;name&gt;&lt;$mt:CommentAuthor encode_xml=&quot;1&quot;$&gt;&lt;/name&gt;
            &lt;mt:If tag=&quot;CommenterURL&quot;&gt;&lt;uri&gt;&lt;$mt:CommenterURL encode_xml=&quot;1&quot;$&gt;&lt;/uri&gt;&lt;/mt:If&gt;
        &lt;/author&gt;
        &lt;content type=&quot;html&quot; xml:lang=&quot;&lt;$mt:BlogLanguage ietf=&quot;1&quot;$&gt;&quot; xml:base=&quot;&lt;$mt:BlogURL encode_xml=&quot;1&quot;$&gt;&quot;&gt;
            &lt;$mt:CommentBody encode_xml=&quot;1&quot;$&gt;
        &lt;/content&gt;
    &lt;/entry&gt;
    &lt;/mt:Comments&gt;
&lt;mt:ElseIf name=&quot;action&quot;&gt;
    &lt;mt:Actions&gt;
    &lt;entry&gt;
        &lt;mt:ActionsEntry&gt;
        &lt;title&gt;&lt;$mt:EntryBlogName remove_html=&quot;1&quot; encode_xml=&quot;1&quot;$&gt;に&lt;$mt:EntryTitle remove_html=&quot;1&quot; encode_xml=&quot;1&quot;$&gt;を作成しました。&lt;/title&gt;
        &lt;link rel=&quot;alternate&quot; type=&quot;text/html&quot; href=&quot;&lt;$mt:EntryPermalink encode_xml=&quot;1&quot;$&gt;&quot; /&gt;
        &lt;id&gt;&lt;$mt:EntryAtomID$&gt;&lt;/id&gt;
        &lt;published&gt;&lt;$mt:EntryDate utc=&quot;1&quot; format=&quot;%Y-%m-%dT%H:%M:%SZ&quot;$&gt;&lt;/published&gt;
        &lt;updated&gt;&lt;$mt:EntryModifiedDate utc=&quot;1&quot; format=&quot;%Y-%m-%dT%H:%M:%SZ&quot;$&gt;&lt;/updated&gt;
        &lt;summary&gt;&lt;$mt:EntryExcerpt remove_html=&quot;1&quot; encode_xml=&quot;1&quot;$&gt;&lt;/summary&gt;
        &lt;author&gt;
            &lt;name&gt;&lt;$mt:EntryAuthorDisplayName encode_xml=&quot;1&quot;$&gt;&lt;/name&gt;
            &lt;uri&gt;&lt;$mt:CGIPath encode_xml=&quot;1&quot;$&gt;&lt;$mt:CommunityScript encode_xml=&quot;1&quot;$&gt;?__mode=view&amp;amp;blog_id=&lt;$mt:BlogID$&gt;&amp;amp;id=&lt;$mt:EntryAuthorID$&gt;&lt;/uri&gt;
        &lt;/author&gt;
        &lt;mt:EntryCategories&gt;&lt;category term=&quot;&lt;$mt:CategoryLabel encode_xml=&quot;1&quot;$&gt;&quot; scheme=&quot;http://www.sixapart.com/ns/types#category&quot; /&gt;&lt;/mt:EntryCategories&gt;
        &lt;mt:EntryTags&gt;&lt;category term=&quot;&lt;$mt:TagName normalize=&quot;1&quot; encode_xml=&quot;1&quot;$&gt;&quot; label=&quot;&lt;$mt:TagName encode_xml=&quot;1&quot;$&gt;&quot; scheme=&quot;http://www.sixapart.com/ns/types#tag&quot; /&gt;&lt;/mt:EntryTags&gt;
        &lt;content type=&quot;html&quot; xml:lang=&quot;&lt;$mt:BlogLanguage ietf=&quot;1&quot;$&gt;&quot; xml:base=&quot;&lt;$mt:BlogURL encode_xml=&quot;1&quot;$&gt;&quot;&gt;
            &lt;$mt:EntryBody encode_xml=&quot;1&quot;$&gt;
            &lt;$mt:EntryMore encode_xml=&quot;1&quot;$&gt;
        &lt;/content&gt;
        &lt;/mt:ActionsEntry&gt;
        &lt;mt:ActionsComment&gt;
        &lt;title&gt;&lt;mt:CommentEntry&gt;&lt;$mt:EntryTitle remove_html=&quot;1&quot; encode_xml=&quot;1&quot;$&gt;(&lt;$mt:EntryBlogName remove_html=&quot;1&quot; encode_xml=&quot;1&quot;$&gt;&lt;/mt:CommentEntry&gt;)へコメントしました。&lt;/title&gt;
        &lt;link rel=&quot;alternate&quot; type=&quot;text/html&quot; href=&quot;&lt;$mt:CommentLink encode_xml=&quot;1&quot;$&gt;&quot; /&gt;
        &lt;id&gt;&lt;mt:CommentEntry&gt;&lt;$mt:EntryAtomID$&gt;&lt;/mt:CommentEntry&gt;#&lt;$mt:CommentID$&gt;&lt;/id&gt;
        &lt;updated&gt;&lt;$mt:CommentDate utc=&quot;1&quot; format=&quot;%Y-%m-%dT%H:%M:%SZ&quot;$&gt;&lt;/updated&gt;
        &lt;author&gt;
            &lt;name&gt;&lt;$mt:CommentAuthor encode_xml=&quot;1&quot;$&gt;&lt;/name&gt;
            &lt;mt:If tag=&quot;CommenterURL&quot;&gt;&lt;uri&gt;&lt;$mt:CommenterURL encode_xml=&quot;1&quot;$&gt;&lt;/uri&gt;&lt;/mt:If&gt;
        &lt;/author&gt;
        &lt;content type=&quot;html&quot; xml:lang=&quot;&lt;$mt:BlogLanguage ietf=&quot;1&quot;$&gt;&quot; xml:base=&quot;&lt;$mt:BlogURL encode_xml=&quot;1&quot;$&gt;&quot;&gt;
            &lt;$mt:CommentBody encode_xml=&quot;1&quot;$&gt;
        &lt;/content&gt;
        &lt;/mt:ActionsComment&gt;
        &lt;mt:ActionsFavorite&gt;
        &lt;title&gt;&lt;$mt:EntryTitle remove_html=&quot;1&quot; encode_xml=&quot;1&quot;$&gt;(&lt;$mt:EntryBlogName remove_html=&quot;1&quot; encode_xml=&quot;1&quot;$&gt;)をお気に入りに追加しました。&lt;/title&gt;
        &lt;link rel=&quot;alternate&quot; type=&quot;text/html&quot; href=&quot;&lt;$mt:EntryPermalink encode_xml=&quot;1&quot;$&gt;&quot; /&gt;
        &lt;id&gt;&lt;$mt:EntryAtomID$&gt;&lt;/id&gt;
        &lt;published&gt;&lt;$mt:EntryDate utc=&quot;1&quot; format=&quot;%Y-%m-%dT%H:%M:%SZ&quot;$&gt;&lt;/published&gt;
        &lt;updated&gt;&lt;$mt:EntryModifiedDate utc=&quot;1&quot; format=&quot;%Y-%m-%dT%H:%M:%SZ&quot;$&gt;&lt;/updated&gt;
        &lt;author&gt;
            &lt;name&gt;&lt;$mt:EntryAuthorDisplayName encode_xml=&quot;1&quot;$&gt;&lt;/name&gt;
            &lt;uri&gt;&lt;$mt:CGIPath encode_xml=&quot;1&quot;$&gt;&lt;$mt:CommunityScript encode_xml=&quot;1&quot;$&gt;?__mode=view&amp;amp;blog_id=&lt;$mt:BlogID$&gt;&amp;amp;id=&lt;$mt:EntryAuthorID$&gt;&lt;/uri&gt;
        &lt;/author&gt;
        &lt;content type=&quot;html&quot; xml:lang=&quot;&lt;$mt:BlogLanguage ietf=&quot;1&quot;$&gt;&quot; xml:base=&quot;&lt;$mt:BlogURL encode_xml=&quot;1&quot;$&gt;&quot;&gt;
            &lt;![CDATA[&lt;p&gt;&lt;$mt:EntryAuthorDisplayName remove_html=&quot;1&quot; encode_xml=&quot;1&quot;$&gt;が&lt;a href=&quot;&lt;$mt:EntryPermalink encode_xml=&quot;1&quot;$&gt;&quot;&gt;&lt;$mt:EntryTitle remove_html=&quot;1&quot; encode_xml=&quot;1&quot;$&gt;&lt;/a&gt;(&lt;$mt:EntryBlogName remove_html=&quot;1&quot; encode_xml=&quot;1&quot;$&gt;)をお気に入りに追加しました。&lt;/p&gt;]]&gt;
        &lt;/content&gt;
        &lt;/mt:ActionsFavorite&gt;
    &lt;/entry&gt;
    &lt;/mt:Actions&gt;
&lt;/mt:If&gt;
&lt;/feed&gt;
</text></template>
<template id='58' blog_id='0' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606204235' identifier='footer' modified_by='1' modified_on='20120125164826' name='フッター' rebuild_me='0' type='custom' current_revision='0' cache_expire_type='0' include_with_ssi='0'><text>&lt;!-- Footer --&gt;
&lt;div id=&quot;footer&quot;&gt;
&lt;p class=&quot;footer_link normal&quot;&gt;｜&lt;a href=&quot;/company/index.html&quot;&gt;会社概要&lt;/a&gt;｜&lt;a href=&quot;/link/index.html&quot;&gt;関連リンク&lt;/a&gt;｜&lt;a href=&quot;/privacy/index.html&quot;&gt;個人情報の取り扱い&lt;/a&gt;｜&lt;span&gt;&lt;a href=&quot;/sitemap/index.html&quot;&gt;サイトマップ&lt;/a&gt;｜&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;right-foot&quot;&gt;
&lt;p class=&quot;authors-copy small&quot;&gt;当サイトに掲載されているすべての内容（画像・音声・文章等）の無断での使用・転載・引用を禁止します。&lt;/p&gt;
&lt;p class=&quot;copyright normal&quot;&gt;copyright (C) 日本ナレーション演技研究所 all right reserved.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;!-- Footer End --&gt;</text></template>
<template id='59' blog_id='0' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606204235' identifier='commenter_confirm' modified_on='20110606204235' name='コメントの確認' rebuild_me='1' type='email' current_revision='0'><text>&lt;$mt:BlogName$&gt;にコメントするために登録していただきありがとうございます。 

セキュリティ上の理由から、登録を完了する前にアカウントとメールアドレスの確認を行っています。確認を完了次第、&lt;$mt:BlogName$&gt;にコメントできるようになります。

アカウントの確認のため、次のURLをクリックするか、コピーしてブラウザのアドレス欄に貼り付けてください。

&lt;$mt:Var name=&quot;confirm_url&quot;$&gt;

このメールに覚えがない場合や、&lt;$mt:BlogName$&gt;に登録するのをやめたい場合は、何もする必要はありません。

ご協力ありがとうございます。

 
&lt;mt:If tag=&quot;AuthorDisplayName&quot;&gt;&lt;$mt:AuthorDisplayName encode_html=&quot;1&quot;$&gt;&lt;mt:Else&gt;Movable Type&lt;/mt:If&gt;

&lt;$mt:Include module=&quot;メールフッター&quot;$&gt;
</text></template>
<template id='60' blog_id='0' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606204235' identifier='userpic' modified_on='20110606204235' name='プロフィール画像' rebuild_me='1' type='custom' current_revision='0'><text>&lt;div class=&quot;user-pic&quot;&gt;
&lt;mt:If name=&quot;userpic_type&quot; eq=&quot;profile&quot;&gt;
    &lt;img src=&quot;&lt;mt:If tag=&quot;AuthorUserpicURL&quot;&gt;&lt;$mt:AuthorUserpicURL$&gt;&lt;mt:Else&gt;&lt;$mt:StaticWebPath$&gt;images/default-userpic-90.jpg&lt;/mt:If&gt;&quot;
        width=&quot;&lt;$mt:Var name=&quot;userpic_size&quot;$&gt;&quot; height=&quot;&lt;$mt:Var name=&quot;userpic_size&quot;$&gt;&quot; alt=&quot;&lt;$mt:AuthorDisplayName encode_html=&quot;1&quot;$&gt;&quot; /&gt;
    &lt;mt:If tag=&quot;AuthorAuthType&quot; ne=&quot;MT&quot;&gt;&lt;mt:If tag=&quot;AuthorAuthIconURL&quot;&gt;&lt;span class=&quot;auth-icon&quot;&gt;&lt;img src=&quot;&lt;$mt:AuthorAuthIconURL size=&quot;logo_small&quot;$&gt;&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/mt:If&gt;&lt;/mt:If&gt;
&lt;mt:Else name=&quot;userpic_type&quot; eq=&quot;commenter&quot;&gt;
    &lt;mt:IfCommenterIsAuthor&gt;&lt;mt:Ignore&gt;&lt;!-- If native MTCS user --&gt;&lt;/mt:Ignore&gt;
    &lt;a href=&quot;&lt;$mt:CGIPath$&gt;&lt;$mt:CommunityScript$&gt;?__mode=view&amp;amp;blog_id=&lt;$mt:BlogID encode_html=&quot;1&quot;$&gt;&amp;amp;id=&lt;$mt:CommenterID$&gt;&quot;&gt;&lt;img
        src=&quot;&lt;mt:If tag=&quot;CommenterUserpic&quot;&gt;&lt;$mt:CommenterUserpicURL$&gt;&lt;mt:Else&gt;&lt;$mt:StaticWebPath$&gt;images/default-userpic-90.jpg&lt;/mt:If&gt;&quot;
        width=&quot;&lt;$mt:Var name=&quot;userpic_size&quot;$&gt;&quot; height=&quot;&lt;$mt:Var name=&quot;userpic_size&quot;$&gt;&quot; alt=&quot;&lt;$mt:CommenterName encode_html=&quot;1&quot;$&gt;&quot; /&gt;&lt;/a&gt;
    &lt;mt:Else&gt;
        &lt;mt:If tag=&quot;CommenterID&quot;&gt;&lt;mt:Ignore&gt;&lt;!-- If authenticated user (OpenID, Vox, LJ, etc) --&gt;&lt;/mt:Ignore&gt;
    &lt;a href=&quot;&lt;$mt:CGIPath$&gt;&lt;$mt:CommunityScript$&gt;?__mode=view&amp;amp;blog_id=&lt;$mt:BlogID encode_html=&quot;1&quot;$&gt;&amp;amp;id=&lt;$mt:CommenterID$&gt;&quot;&gt;
        &lt;img src=&quot;&lt;mt:If tag=&quot;CommenterUserpic&quot;&gt;&lt;$mt:CommenterUserpicURL$&gt;&lt;mt:Else&gt;&lt;$mt:StaticWebPath$&gt;images/default-userpic-90.jpg&lt;/mt:If&gt;&quot; 
            width=&quot;&lt;$mt:Var name=&quot;userpic_size&quot;$&gt;&quot; height=&quot;&lt;$mt:Var name=&quot;userpic_size&quot;$&gt;&quot; alt=&quot;&lt;$mt:CommenterName encode_html=&quot;1&quot;$&gt;&quot; /&gt;
        &lt;mt:If tag=&quot;CommenterAuthIconURL&quot;&gt;&lt;span class=&quot;auth-icon&quot;&gt;&lt;img src=&quot;&lt;$mt:CommenterAuthIconURL size=&quot;logo_small&quot;$&gt;&quot; alt=&quot;&quot;/&gt;&lt;/span&gt;&lt;/mt:If&gt;
    &lt;/a&gt;
        &lt;mt:Else&gt;&lt;mt:Ignore&gt;&lt;!-- Else anonymous commenter --&gt;&lt;/mt:Ignore&gt;
    &lt;a href=&quot;&lt;$mt:CommentURL$&gt;&quot;&gt;&lt;img src=&quot;&lt;mt:If tag=&quot;CommenterUserpic&quot;&gt;&lt;$mt:CommenterUserpicURL$&gt;&lt;mt:Else&gt;&lt;$mt:StaticWebPath$&gt;images/default-userpic-90.jpg&lt;/mt:If&gt;&quot; 
        width=&quot;&lt;$mt:Var name=&quot;userpic_size&quot;$&gt;&quot; height=&quot;&lt;$mt:Var name=&quot;userpic_size&quot;$&gt;&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
        &lt;/mt:If&gt;
    &lt;/mt:IfCommenterIsAuthor&gt;
&lt;mt:Else name=&quot;userpic_type&quot; eq=&quot;userlist&quot;&gt;
    &lt;a href=&quot;&lt;$mt:CGIPath$&gt;&lt;$mt:CommunityScript$&gt;?__mode=view&amp;amp;blog_id=&lt;$mt:BlogID encode_html=&quot;1&quot;$&gt;&amp;amp;id=&lt;$mt:AuthorID$&gt;&quot;&gt;&lt;img
        src=&quot;&lt;mt:If tag=&quot;AuthorUserpicURL&quot;&gt;&lt;$mt:AuthorUserpicURL$&gt;&lt;mt:Else&gt;&lt;$mt:StaticWebPath$&gt;images/default-userpic-90.jpg&lt;/mt:If&gt;&quot;
        width=&quot;&lt;$mt:Var name=&quot;userpic_size&quot;$&gt;&quot; height=&quot;&lt;$mt:Var name=&quot;userpic_size&quot;$&gt;&quot; alt=&quot;&lt;$mt:AuthorDisplayName encode_html=&quot;1&quot;$&gt;&quot; /&gt;&lt;/a&gt;
&lt;mt:Else&gt;
    &lt;a href=&quot;&lt;$mt:CGIPath$&gt;&lt;$mt:CommunityScript$&gt;?__mode=view&amp;amp;blog_id=&lt;$mt:BlogID encode_html=&quot;1&quot;$&gt;&amp;amp;id=&lt;$mt:EntryAuthorID$&gt;&quot;&gt;&lt;img
        src=&quot;&lt;mt:If tag=&quot;EntryAuthorUserpicURL&quot;&gt;&lt;$mt:EntryAuthorUserpicURL$&gt;&lt;mt:Else&gt;&lt;$mt:StaticWebPath$&gt;images/default-userpic-90.jpg&lt;/mt:If&gt;&quot;
        width=&quot;&lt;$mt:Var name=&quot;userpic_size&quot;$&gt;&quot; height=&quot;&lt;$mt:Var name=&quot;userpic_size&quot;$&gt;&quot; alt=&quot;&lt;$mt:EntryAuthorDisplayName encode_html=&quot;1&quot;$&gt;&quot; /&gt;&lt;/a&gt;
&lt;/mt:If&gt;
&lt;/div&gt;
</text></template>
<template id='61' blog_id='0' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606204235' identifier='header' modified_by='1' modified_on='20140401095915' name='ヘッダー' rebuild_me='0' type='custom' current_revision='0' cache_expire_type='0' include_with_ssi='0'><text>&lt;script type=&quot;text/javascript&quot;&gt;
var DIGITALICE_CID = &quot;O94GB63BmeP6&quot;;
var DIGITALICE_SID = &quot;PybaAwQFiVwE&quot;;
(function() {
var io = document.createElement(&apos;script&apos;);
io.type = &apos;text/javascript&apos;;
io.src = (&apos;https:&apos; == document.location.protocol ? &apos;https://&apos; : &apos;http://&apos;) +
&apos;c.iogous.com/js/banner/DIGITALICE_REC.js&apos;;
var s = document.getElementsByTagName(&apos;script&apos;)[0];
s.parentNode.insertBefore(io, s);
})();
&lt;/script&gt;

&lt;!-- Header --&gt;
&lt;div id=&quot;header&quot;&gt;
&lt;h1&gt;&lt;a href=&quot;/index.html&quot;&gt;&lt;img src=&quot;/common/images/h1_logo.gif&quot; width=&quot;280&quot; height=&quot;42&quot; alt=&quot;声優・ナレーターの養成所｜日本ナレーション演技研究所&quot; /&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;/common/images/hd_spotlight.gif&quot; width=&quot;433&quot; height=&quot;19&quot; alt=&quot;代々木校・お茶の水校・立川校・大宮校・柏校・横浜校・大阪校・神戸校・名古屋校&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li class=&quot;hd_menu01&quot;&gt;&lt;a href=&quot;/faq/index.html&quot;&gt;よくあるご質問&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;hd_menu02&quot;&gt;&lt;a href=&quot;/contact/index.html&quot;&gt;お問い合わせ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p class=&quot;ghd_bnr&quot;&gt;&lt;a href=&quot;https://nichinare.com/request/form.cgi&quot;&gt;資料請求（無料）&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;!-- Header End --&gt;
&lt;!-- GL Menu --&gt;
&lt;ul id=&quot;gl-menu&quot;&gt;
&lt;li class=&quot;gl-menu01&quot;&gt;&lt;a href=&quot;/about/index.html&quot;&gt;日ナレについて&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;gl-menu02&quot;&gt;&lt;a href=&quot;/course/index.html&quot;&gt;コース紹介&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;gl-menu03&quot;&gt;&lt;a href=&quot;/application/index.html&quot;&gt;入所方法／面接日程 &lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;gl-menu05&quot;&gt;&lt;a href=&quot;/free/index.html&quot;&gt;無料体験レッスン&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;gl-menu04&quot;&gt;&lt;a href=&quot;/lesson/index.html&quot;&gt;レッスン見学&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;gl-menu06&quot;&gt;&lt;a href=&quot;https://nichinare.com/request/form.cgi&quot;&gt;資料請求&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- GL Menu End --&gt;</text></template>
<template id='62' blog_id='0' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606204235' identifier='new-ping' modified_on='20110606204235' name='新しいトラックバック' rebuild_me='1' type='email' current_revision='0'><text>&lt;mt:If name=&quot;unapproved&quot;&gt;&lt;mt:IfBlog&gt;&lt;mt:if tag=&quot;EntryClass&quot; eq=&quot;entry&quot;&gt;ブログ &apos;&lt;$mt:BlogName$&gt;&apos; のブログ記事 &apos;&lt;$mt:EntryTitle$&gt;&apos; (ID:&lt;$mt:EntryID$&gt;) に未公開のトラックバックがあります。公開するまでこのトラックバックはブログに表示されません。&lt;mt:Else&gt;ブログ &apos;&lt;$mt:BlogName$&gt;&apos; のウェブページ &apos;&lt;$mt:PageTitle$&gt;&apos; (ID:&lt;$mt:PageID$&gt;) に未公開のトラックバックがあります。公開するまでこのトラックバックはブログに表示されません。&lt;/mt:If&gt;&lt;mt:Else&gt;ウェブサイト &apos;&lt;$mt:WebsiteName$&gt;&apos; のウェブページ &apos;&lt;$mt:PageTitle$&gt;&apos; (ID:&lt;$mt:PageID$&gt;) に未公開のトラックバックがあります。公開するまでこのトラックバックはウェブサイトに表示されません。&lt;/mt:IfBlog&gt;&lt;mt:IfCategory&gt;ブログ &apos;&lt;$mt:BlogName$&gt;&apos; のカテゴリ &apos;&lt;$mt:CategoryLabel$&gt;&apos; (ID:&lt;$mt:CategoryID$&gt;) に未公開のトラックバックがあります。公開するまでこのトラックバックはブログに表示されません。&lt;/mt:IfCategory&gt;&lt;/mt:If&gt;&lt;mt:Unless name=&quot;unapproved&quot;&gt;&lt;mt:IfBlog&gt;&lt;mt:if tag=&quot;EntryClass&quot; eq=&quot;entry&quot;&gt;ブログ &apos;&lt;$mt:BlogName$&gt;&apos; のブログ記事 &apos;&lt;$mt:EntryTitle$&gt;&apos; (ID:&lt;$mt:EntryID$&gt;) に新しいトラックバックがあります。&lt;mt:Else&gt;ブログ &apos;&lt;$mt:BlogName$&gt;&apos; のウェブページ &apos;&lt;$mt:PageTitle$&gt;&apos; (ID:&lt;$mt:PageID$&gt;) に新しいトラックバックがあります。&lt;/mt:If&gt;&lt;mt:Else&gt;ウェブサイト &apos;&lt;$mt:WebsiteName$&gt;&apos; のウェブページ &apos;&lt;$mt:PageTitle$&gt;&apos; (ID:&lt;$mt:PageID$&gt;) に新しいトラックバックがあります。&lt;/mt:IfBlog&gt;&lt;mt:IfCategory&gt;ブログ &apos;&lt;$mt:BlogName$&gt;&apos; のカテゴリ &apos;&lt;$mt:CategoryLabel$&gt;&apos; (ID:&lt;$mt:CategoryID$&gt;) に新しいトラックバックがあります。&lt;/mt:IfCategory&gt;&lt;/mt:Unless&gt;

概要: 
&lt;$mt:PingExcerpt wrap_text=&quot;72&quot;$&gt;

URL: &lt;$mt:PingURL$&gt;
タイトル: &lt;$mt:PingTitle$&gt;
ブログ: &lt;$mt:PingBlogName$&gt;
IPアドレス: &lt;$mt:PingIP$&gt;

&lt;mt:If name=&quot;state_editable&quot;&gt;&lt;mt:If name=&quot;unapproved&quot;&gt;トラックバックを承認する: 
  &lt;&lt;$mt:Var name=&quot;approve_url&quot;$&gt;&gt;
&lt;/mt:If&gt;&lt;/mt:If&gt;
&lt;mt:If name=&quot;entry&quot;&gt;&lt;mt:If tag=&quot;EntryPermalink&quot;&gt;トラックバックを見る: 
  &lt;&lt;$mt:EntryPermalink$&gt;&gt;
&lt;/mt:If&gt;&lt;/mt:If&gt;
&lt;mt:If name=&quot;state_editable&quot;&gt;トラックバックをスパムとして報告する: 
  &lt;&lt;$mt:Var name=&quot;spam_url&quot;$&gt;&gt;
&lt;/mt:If&gt;
トラックバックの編集: 
  &lt;&lt;$mt:Var name=&quot;edit_url&quot;$&gt;&gt;

&lt;$mt:Include module=&quot;メールフッター&quot;$&gt;
</text></template>
<template id='63' blog_id='0' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606204235' identifier='new_entry_email' modified_on='20110606204235' name='ブログ記事の投稿通知' rebuild_me='1' type='email' current_revision='0'><text>
ブログ「&lt;$mt:BlogName$&gt;」に新しいブログ記事「&lt;$mt:EntryTitle$&gt;」(ID: &lt;$mt:EntryID$&gt;)が投稿されました。

ユーザー: &lt;$mt:EntryAuthor$&gt; 
ユーザーの表示名: &lt;$mt:EntryAuthorDisplayName$&gt; 

タイトル: &lt;$mt:EntryTitle$&gt;
日付: &lt;$mt:EntryDate mail=&quot;1&quot;$&gt;

&lt;$mt:EntryExcerpt wrap_text=&quot;72&quot;$&gt;


表示する &lt;&lt;$mt:EntryPermalink$&gt;&gt;
編集する &lt;&lt;$mt:Var name=&quot;edit_url&quot;$&gt;&gt;

&lt;$mt:Include module=&quot;メールフッター&quot;$&gt;

</text></template>
<template id='64' blog_id='0' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606204235' identifier='form_field' modified_on='20110606204235' name='フォームフィールド' rebuild_me='1' type='custom' current_revision='0'><text>&lt;div id=&quot;&lt;$mt:Var name=&quot;id&quot;$&gt;-field&quot; class=&quot;field-top-label field pkg &lt;$mt:Var name=&quot;class&quot;$&gt;&quot;&gt;
    &lt;div class=&quot;field-inner&quot;&gt;
        &lt;div class=&quot;field-header&quot;&gt;
            &lt;label type=&quot;text&quot; id=&quot;&lt;$mt:Var name=&quot;id&quot;$&gt;-label&quot; for=&quot;&lt;$mt:Var name=&quot;id&quot;$&gt;&quot;&gt;&lt;$mt:Var name=&quot;label&quot;$&gt;&lt;mt:If name=&quot;required&quot;&gt; *&lt;/mt:If&gt;&lt;/label&gt;
        &lt;/div&gt;
        &lt;div class=&quot;field-content &quot;&gt;
            &lt;$mt:Var name=&quot;field-content&quot;$&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
</text></template>
<template id='65' blog_id='0' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606204235' identifier='new-comment' modified_on='20110606204235' name='新しいコメント' rebuild_me='1' type='email' current_revision='0'><text>&lt;mt:If name=&quot;unapproved&quot;&gt;&lt;mt:IfBlog&gt;&lt;mt:if tag=&quot;EntryClass&quot; eq=&quot;entry&quot;&gt;未公開のコメントがブログ &apos;&lt;$mt:BlogName$&gt;&apos; のブログ記事 &apos;&lt;$mt:EntryTitle$&gt;&apos; (ID:&lt;$mt:EntryID$&gt;) に投稿されました。公開するまでこのコメントはブログに表示されません。&lt;mt:Else&gt;未公開のコメントがブログ &apos;&lt;$mt:BlogName$&gt;&apos; のウェブページ &apos;&lt;$mt:PageTitle$&gt;&apos; (ID:&lt;$mt:PageID$&gt;) に投稿されました。公開するまでこのコメントはブログに表示されません。&lt;/mt:If&gt;&lt;mt:Else&gt;未公開のコメントがウェブサイト &apos;&lt;$mt:WebsiteName$&gt;&apos; のウェブページ &apos;&lt;$mt:PageTitle$&gt;&apos; (ID:&lt;$mt:PageID$&gt;) に投稿されました。公開するまでこのコメントはウェブサイトに表示されません。&lt;/mt:IfBlog&gt;&lt;/mt:If&gt;&lt;mt:Unless name=&quot;unapproved&quot;&gt;&lt;mt:IfBlog&gt;&lt;mt:if tag=&quot;EntryClass&quot; eq=&quot;entry&quot;&gt;ブログ &apos;&lt;$mt:BlogName$&gt;&apos; のブログ記事 &apos;&lt;$mt:EntryTitle$&gt;&apos; (ID:&lt;$mt:EntryID$&gt;) に新しいコメントが投稿されました。&lt;mt:Else&gt;ブログ &apos;&lt;$mt:BlogName$&gt;&apos; のウェブページ &apos;&lt;$mt:PageTitle$&gt;&apos; (ID:&lt;$mt:PageID$&gt;) に新しいコメントが投稿されました。&lt;/mt:If&gt;&lt;mt:Else&gt;ウェブサイト &apos;&lt;$mt:WebsiteName$&gt;&apos; のウェブページ &apos;&lt;$mt:PageTitle$&gt;&apos; (ID:&lt;$mt:PageID$&gt;) に新しいコメントが投稿されました。&lt;/mt:IfBlog&gt;&lt;/mt:Unless&gt;

&lt;$mt:CommentBody remove_html=&quot;1&quot; wrap_text=&quot;72&quot;$&gt;

コメント投稿者: &lt;$mt:CommentAuthor$&gt; 
メールアドレス: &lt;$mt:CommentEmail$&gt;
URL: &lt;$mt:CommentURL$&gt;
IPアドレス: &lt;$mt:CommentIP$&gt;

&lt;mt:If name=&quot;unapproved&quot;&gt;&lt;mt:If name=&quot;state_editable&quot;&gt;コメントを承認する:
  &lt;&lt;$mt:Var name=&quot;approve_url&quot;$&gt;&gt;&lt;/mt:If&gt;&lt;/mt:If&gt;
&lt;mt:If name=&quot;view_url&quot;&gt;コメントを見る:
  &lt;&lt;$mt:Var name=&quot;view_url&quot;$&gt;&gt;&lt;/mt:If&gt;
コメントを編集する:
  &lt;&lt;$mt:Var name=&quot;edit_url&quot;$&gt;&gt;
&lt;mt:If name=&quot;state_editable&quot;&gt;コメントをスパムとして報告する:
  &lt;&lt;$mt:Var name=&quot;spam_url&quot;$&gt;&gt;&lt;/mt:If&gt;

&lt;$mt:Include module=&quot;メールフッター&quot;$&gt;
</text></template>
<template id='66' blog_id='0' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606204235' identifier='simple_header' modified_on='20110606204235' name='シンプルヘッダー' rebuild_me='1' type='custom' current_revision='0'><text>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; id=&quot;sixapart-standard&quot; xmlns:fb=&quot;http://www.facebook.com/2008/fbml&quot;&gt;
&lt;head&gt;
    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;
    &lt;title&gt;&lt;$mt:Var name=&quot;title&quot; encode_html=&quot;1&quot;$&gt;&lt;/title&gt;
&lt;mt:SetVarBlock name=&quot;html_head&quot; prepend=&quot;1&quot;&gt;
&lt;mt:If name=&quot;mt_debug&quot;&gt;
    &lt;link rel=&quot;stylesheet&quot; href=&quot;&lt;$mt:Var name=&quot;static_uri&quot;$&gt;css/reset.css?v=&lt;$mt:Var name=&quot;mt_version&quot; escape=&quot;url&quot;$&gt;&quot; type=&quot;text/css&quot; /&gt;
    &lt;link rel=&quot;stylesheet&quot; href=&quot;&lt;$mt:Var name=&quot;static_uri&quot;$&gt;css/utilities.css?v=&lt;$mt:Var name=&quot;mt_version&quot; escape=&quot;url&quot;$&gt;&quot; type=&quot;text/css&quot; /&gt;
    &lt;link rel=&quot;stylesheet&quot; href=&quot;&lt;$mt:Var name=&quot;static_uri&quot;$&gt;css/messaging.css?v=&lt;$mt:Var name=&quot;mt_version&quot; escape=&quot;url&quot;$&gt;&quot; type=&quot;text/css&quot; /&gt;
    &lt;link rel=&quot;stylesheet&quot; href=&quot;&lt;$mt:Var name=&quot;static_uri&quot;$&gt;css/chromeless.css?v=&lt;$mt:Var name=&quot;mt_version&quot; escape=&quot;url&quot;$&gt;&quot; type=&quot;text/css&quot; /&gt;
&lt;mt:Else&gt;
    &lt;link rel=&quot;stylesheet&quot; href=&quot;&lt;$mt:Var name=&quot;static_uri&quot;$&gt;css/simple.css?v=&lt;$mt:Var name=&quot;mt_version&quot; escape=&quot;url&quot;$&gt;&quot; type=&quot;text/css&quot; /&gt;
&lt;/mt:If&gt;
    &lt;link rel=&quot;stylesheet&quot; href=&quot;&lt;$mt:var name=&quot;static_uri&quot;$&gt;addons/Commercial.pack/styles-customfields.css&quot; type=&quot;text/css&quot; media=&quot;screen&quot; title=&quot;CustomFields Stylesheet&quot; charset=&quot;utf-8&quot; /&gt;
    &lt;!--[if lte IE 7]&gt;
    &lt;link rel=&quot;stylesheet&quot; href=&quot;&lt;$mt:var name=&quot;static_uri&quot;$&gt;css/hacks/ie.css?v=&lt;mt:var name=&quot;mt_version_id&quot; escape=&quot;url&quot;&gt;&quot; type=&quot;text/css&quot; /&gt;
    &lt;![endif]--&gt;
    &lt;!--[if lte IE 6]&gt;
    &lt;link rel=&quot;stylesheet&quot; href=&quot;&lt;$mt:var name=&quot;static_uri&quot;$&gt;css/hacks/ie6.css?v=&lt;mt:var name=&quot;mt_version_id&quot; escape=&quot;url&quot;&gt;&quot; type=&quot;text/css&quot; /&gt;
    &lt;![endif]--&gt;
&lt;mt:If name=&quot;local_lang_id&quot;&gt;
    &lt;mt:If name=&quot;local_lang_id&quot; ne=&quot;en-us&quot;&gt;
    &lt;link rel=&quot;stylesheet&quot; href=&quot;&lt;$mt:Var name=&quot;static_uri&quot;$&gt;styles_&lt;$mt:Var name=&quot;local_lang_id&quot;$&gt;.css?v=&lt;$mt:Var name=&quot;mt_version&quot; escape=&quot;url&quot;$&gt;&quot; /&gt;
    &lt;/mt:If&gt;
&lt;/mt:If&gt;
    &lt;script type=&quot;text/javascript&quot; src=&quot;&lt;$mt:Var name=&quot;static_uri&quot;$&gt;js/common/Core.js?v=&lt;$mt:Var name=&quot;mt_version&quot; escape=&quot;url&quot;$&gt;&quot;&gt;&lt;/script&gt;
    &lt;script type=&quot;text/javascript&quot; src=&quot;&lt;$mt:Var name=&quot;static_uri&quot;$&gt;js/tc.js?v=&lt;$mt:Var name=&quot;mt_version&quot; escape=&quot;url&quot;$&gt;&quot;&gt;&lt;/script&gt;
    &lt;script type=&quot;text/javascript&quot; src=&quot;&lt;$mt:Var name=&quot;static_uri&quot;$&gt;jquery/jquery.js?v=&lt;$mt:Var name=&quot;mt_version&quot; escape=&quot;url&quot;$&gt;&quot;&gt;&lt;/script&gt;
&lt;/mt:SetVarBlock&gt;
&lt;$mt:Var name=&quot;html_head&quot;$&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;&lt;$mt:Var name=&quot;static_uri&quot;$&gt;mt.js?v=&lt;$mt:Var name=&quot;mt_version&quot; escape=&quot;url&quot;$&gt;&quot;&gt;&lt;/script&gt;
&lt;script language=&quot;javascript&quot; type=&quot;text/javascript&quot;&gt;
&lt;!--
function showByID(id) {
    var el = getByID(id);
    if (el) el.style.display = &quot;block&quot;;
}
function hideByID(id) {
    var el = getByID(id);
    if (el) el.style.display = &quot;none&quot;;
}
// --&gt;
&lt;/script&gt;
&lt;$mt:Var name=&quot;js_include&quot;$&gt;
&lt;/head&gt;

&lt;body id=&quot;&lt;$mt:Var name=&quot;screen_id&quot;$&gt;&quot; class=&quot;chromeless dialog&lt;mt:If name=&quot;mt_debug&quot;&gt; debug&lt;/mt:If&gt;&lt;mt:If name=&quot;error_page&quot;&gt;&lt;mt:If name=&quot;is_full_screen&quot;&gt; error-screen&lt;/mt:If&gt; chromeless-wide&lt;/mt:If&gt;&lt;mt:If name=&quot;screen_type&quot; eq=&quot;popup-screen&quot;&gt; chromeless-wide&lt;/mt:If&gt; &lt;$mt:Var name=&quot;body_class&quot; default=&quot;dialog&quot;$&gt;&quot;&gt;
    &lt;div id=&quot;container&quot;&gt;
        &lt;div id=&quot;brand&quot;&gt;&lt;img alt=&quot;Movable Type&quot; src=&quot;&lt;mt:var name=&quot;static_uri&quot;&gt;images/chromeless/mt_logo.png&quot; /&gt;&lt;/div&gt;
        &lt;div id=&quot;nav&quot;&gt;
&lt;mt:If name=&quot;wizard_steps&quot;&gt;
    &lt;mt:Unless name=&quot;complete&quot;&gt;
        &lt;mt:If name=&quot;step&quot; ne=&quot;pre_start&quot;&gt;
    &lt;mt:Loop name=&quot;wizard_steps&quot;&gt;
            &lt;mt:Unless name=&quot;__last__&quot;&gt;
        &lt;div class=&quot;step&lt;mt:If name=&quot;active&quot;&gt;_active&lt;/mt:If&gt;&quot;&gt;&lt;/div&gt;
            &lt;/mt:Unless&gt;
    &lt;/mt:Loop&gt;
        &lt;/mt:If&gt;
    &lt;/mt:Unless&gt;
&lt;/mt:If&gt;
        &lt;/div&gt;
        &lt;h1 id=&quot;page-title&quot; class=&quot;asset-name&quot;&gt;&lt;$mt:Var name=&quot;page_title&quot;$&gt;&lt;/h1&gt;
</text></template>
<template id='67' blog_id='0' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606204235' identifier='register_notification_email' modified_on='20110606204235' name='登録通知' rebuild_me='1' type='email' current_revision='0'><text>これは新しいユーザーがブログ「&lt;$mt:BlogName$&gt;」に登録を完了したことを通知するメールです。新しいユーザーの情報は以下に記載されています。

新規登録ユーザー:
ユーザー名: &lt;$mt:CommenterUsername$&gt; 
名前: &lt;$mt:CommenterName$&gt;
メール: &lt;$mt:CommenterEmail$&gt;

このユーザーの情報を見たり編集する場合には、下記のURLをクリックするか、URLをコピーしてブラウザのアドレス欄に貼り付けてください。
&lt;$mt:Var name=&quot;profile_url&quot;$&gt;

&lt;$mt:Include module=&quot;メールフッター&quot;$&gt;

</text></template>
<template id='68' blog_id='0' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606204236' identifier='comment_throttle' modified_on='20110606204236' name='コメントスロットル' rebuild_me='1' type='email' current_revision='0'><text>&lt;mt:SetVarBlock name=&quot;message&quot;&gt;これが間違いである場合は、Movable Typeにログインして、ブログの設定画面に進み、禁止IPリストからIPアドレスを削除してください。&lt;/mt:SetVarBlock&gt;
&lt;$mt:BlogName$&gt;を禁止しました。&lt;$mt:Var name=&quot;throttle_seconds&quot;$&gt;秒の間に許可された以上のコメントを送信してきました。

これは悪意のスクリプトがブログをコメントで飽和させるのを阻止するための措置です。以下のIPアドレスを禁止しました。

&lt;$mt:Var name=&quot;throttled_ip&quot;$&gt;

&lt;$mt:Var name=&quot;message&quot;$&gt;
</text></template>
<template id='69' blog_id='0' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606204236' identifier='simple_footer' modified_on='20110606204236' name='シンプルフッター' rebuild_me='1' type='custom' current_revision='0'><text>
&lt;/div&gt;&lt;!--container--&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
/* &lt;![CDATA[ */
jQuery(&apos;input&apos;).each(function() {
    jQuery(this).addClass(jQuery(this).attr(&apos;type&apos;));
});
/* ]]&gt; */
&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt;

</text></template>
<template id='70' blog_id='2' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606220601' identifier='template_305' modified_by='1' modified_on='20130122171439' name='外部ファイル読み込み' rebuild_me='0' type='custom' current_revision='18' cache_expire_type='0' include_with_ssi='0' revision='18'><text>&lt;link rel=&quot;alternate&quot; media=&quot;handheld&quot; type=&quot;text/html&quot; href=&quot;http://nichinare.com/m/&quot; /&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/common/css/lightbox.css&quot; media=&quot;screen&quot; /&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/common/css/import.css&quot; media=&quot;all&quot; /&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot;  href=&quot;/css/style.css&quot; media=&quot;all&quot; /&gt;
&lt;script src=&quot;/common/js/prototype.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;/common/js/scriptaculous.js?load=effects,builder&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;/common/js/lightbox.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;/common/js/setQueryParamNew.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;/common/js/swfobject.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;/common/js/mjl.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;/common/js/run.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot;&gt;

  var _gaq = _gaq || [];
  _gaq.push([&apos;_setAccount&apos;, &apos;UA-26631444-1&apos;]);
  _gaq.push([&apos;_setDomainName&apos;, &apos;nichinare.com&apos;]);
  _gaq.push([&apos;_trackPageview&apos;]);

  (function() {
    var ga = document.createElement(&apos;script&apos;); ga.type = &apos;text/javascript&apos;; ga.async = true;
    ga.src = (&apos;https:&apos; == document.location.protocol ? &apos;https://ssl&apos; : &apos;http://www&apos;) + &apos;.google-analytics.com/ga.js&apos;;
    var s = document.getElementsByTagName(&apos;script&apos;)[0]; s.parentNode.insertBefore(ga, s);
  })();

&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
if ((navigator.userAgent.indexOf(&apos;iPhone&apos;) &gt; 0 &amp;&amp; navigator.userAgent.indexOf(&apos;iPad&apos;) == -1) || navigator.userAgent.indexOf(&apos;iPod&apos;) &gt; 0 || navigator.userAgent.indexOf(&apos;Android&apos;) &gt; 0) {
location.href = &apos;/sp/&apos;;
}
&lt;/script&gt;
&lt;/head&gt;</text></template>
<template id='71' blog_id='2' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606220601' identifier='comment_preview' modified_on='20110606220601' name='コメントプレビュー' rebuild_me='1' type='comment_preview' current_revision='0'><text>
&lt;$mt:Var name=&quot;page_layout&quot; value=&quot;layout-wm&quot;$&gt;
&lt;mt:SetVarBlock name=&quot;page_title&quot;&gt;コメントのプレビュー&lt;/mt:SetVarBlock&gt;
&lt;mt:SetVarBlock name=&quot;title&quot;&gt;&lt;$mt:BlogName encode_html=&quot;1&quot;$&gt;: &lt;$mt:Var name=&quot;page_title&quot;$&gt;&lt;/mt:SetVarBlock&gt;
&lt;mt:SetVarBlock name=&quot;html_head&quot;&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
    /* &lt;![CDATA[ */
    var user = &lt;$mt:UserSessionState$&gt;;
    var is_preview = true;
    /* ]]&gt; */
    &lt;/script&gt;
&lt;/mt:SetVarBlock&gt;
&lt;$mt:Include module=&quot;ヘッダー&quot; body_class=&quot;mt-comment-preview&quot;$&gt;

&lt;h1 id=&quot;page-title&quot;&gt;&lt;$mt:Var name=&quot;page_title&quot;$&gt;&lt;/h1&gt;

&lt;$mt:Include module=&quot;コメント詳細&quot;$&gt;

&lt;$mt:Include module=&quot;コメント入力フォーム&quot;$&gt;

&lt;$mt:Include module=&quot;フッター&quot;$&gt;


</text></template>
<template id='72' blog_id='2' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606220601' identifier='popup_image' modified_on='20110606220601' name='ポップアップ画像' rebuild_me='1' type='popup_image' current_revision='0'><text>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; id=&quot;sixapart-standard&quot;&gt;
&lt;head&gt;&lt;title&gt;&lt;$mt:ImageURL$&gt;&lt;/title&gt;&lt;/head&gt;
&lt;body id=&quot;uploaded-image-popup&quot; class=&quot;popup&quot; style=&quot;margin: 0;padding: 0;&quot;&gt;
    &lt;img src=&quot;&lt;$mt:ImageURL$&gt;&quot; width=&quot;&lt;$mt:ImageWidth$&gt;&quot; height=&quot;&lt;$mt:ImageHeight$&gt;&quot; alt=&quot;&lt;$mt:ImageURL$&gt;&quot; style=&quot;margin: 0;padding: 0;border: 0;&quot; /&gt;
&lt;/body&gt;
&lt;/html&gt;
</text></template>
<template id='73' blog_id='2' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606220601' identifier='search_results' modified_on='20110606220601' name='検索結果' rebuild_me='1' type='search_results' current_revision='0'><text>
&lt;$mt:Var name=&quot;page_layout&quot; value=&quot;layout-wm&quot;$&gt;
&lt;mt:SetVarBlock name=&quot;page_title&quot;&gt;検索結果&lt;/mt:SetVarBlock&gt;
&lt;mt:SetVarBlock name=&quot;title&quot;&gt;&lt;$mt:BlogName encode_html=&quot;1&quot;$&gt;: &lt;$mt:Var name=&quot;page_title&quot;$&gt;&lt;/mt:SetVarBlock&gt;

&lt;mt:Ignore&gt;&lt;!-- Below Javascript adds ajax search capability --&gt;&lt;/mt:Ignore&gt;
&lt;mt:SetVarBlock name=&quot;html_head&quot; append=&quot;1&quot;&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
/* &lt;![CDATA[ */
var user = &lt;$mt:UserSessionState$&gt;;
&lt;mt:IfMoreResults&gt;
function getResults(page) {
    page = parseInt(page);
    if (timer) window.clearTimeout(timer);
    var xh = mtGetXmlHttp();
    if (!xh) return false;
    var res = results[page];
    if (!res) return;
    var url = res[&apos;next_url&apos;];
    if (!url) return;

    xh.open(&apos;GET&apos;, url + &apos;&amp;format=js&apos;, true);
    xh.onreadystatechange = function() {
        if ( xh.readyState == 4 ) {
            if ( xh.status &amp;&amp; ( xh.status != 200 ) ) {
                // error - ignore
            } else {
                try {
                    var page_results = eval(&quot;(&quot; + xh.responseText + &quot;)&quot;);
                    if ( page_results[&apos;error&apos;] == null )
                        results[page + 1] = page_results[&apos;result&apos;];
                } catch (e) {
                }
            }
        }
    };
    xh.send(null);
}

function swapContent(direction) {
    if ( direction == undefined ) direction = 1;
    var page_span = document.getElementById(&apos;current-page&apos;);
    if (!page_span) return true;
    var next_page = direction + parseInt(page_span.innerHTML);
    var res = results[next_page];
    if (!res) return true;
    var content = res[&apos;content&apos;];
    if (!content) return true;
    var div = document.getElementById(&apos;search-results&apos;);
    if (!div) return true;
    div.innerHTML = content;
    timer = window.setTimeout(&quot;getResults(&quot; + next_page + &quot;)&quot;, 1*1000);
    window.scroll(0, 0);
    return false;
}
&lt;mt:Else&gt;&lt;mt:IfPreviousResults&gt;
function swapContent(direction) {
	return true;
}&lt;/mt:IfPreviousResults&gt;
&lt;/mt:IfMoreResults&gt;
/* ]]&gt; */
&lt;/script&gt;
&lt;/mt:SetVarBlock&gt;

&lt;$mt:Include module=&quot;ヘッダー&quot; body_class=&quot;mt-search-results&quot;$&gt;

&lt;mt:SetVarTemplate id=&quot;search_results&quot; name=&quot;search_results&quot;&gt;  
    &lt;mt:SearchResults&gt;
        &lt;mt:SearchResultsHeader&gt;
&lt;div id=&quot;search-results&quot;&gt;
    &lt;span id=&quot;current-page&quot; class=&quot;hidden&quot;&gt;&lt;$mt:CurrentPage$&gt;&lt;/span&gt;
    &lt;h1 id=&quot;page-title&quot; class=&quot;search-results-header&quot;&gt;
        &lt;mt:IfStraightSearch&gt;
        「&lt;$mt:SearchString$&gt;」と一致するもの
        &lt;/mt:IfStraightSearch&gt;
        &lt;mt:IfTagSearch&gt;
        タグ「&lt;$mt:SearchString$&gt;」が付けられているもの
        &lt;/mt:IfTagSearch&gt;
    &lt;/h1&gt;
    &lt;div class=&quot;search-results-container autopagerize_page_element&quot;&gt;
        &lt;/mt:SearchResultsHeader&gt;
    &lt;$mt:Include module=&quot;ブログ記事の概要&quot; hide_counts=&quot;1&quot; local=&quot;1&quot;$&gt;
        &lt;mt:SearchResultsFooter&gt;
    &lt;/div&gt;&lt;div class=&quot;autopagerize_insert_before&quot;&gt;&lt;/div&gt;
        &lt;mt:Ignore&gt;Used with the ajax search capability of the new search class&lt;/mt:Ignore&gt;
    &lt;div class=&quot;content-nav&quot;&gt;
        &lt;mt:IfPreviousResults&gt;&lt;a href=&quot;&lt;$mt:PreviousLink$&gt;&quot; rel=&quot;prev&quot; onclick=&quot;return swapContent(-1);&quot;&gt;&amp;lt; 前&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;/mt:IfPreviousResults&gt;&lt;mt:PagerBlock&gt;&lt;mt:IfCurrentPage&gt;&lt;$mt:Var name=&quot;__value__&quot;$&gt;&lt;mt:Else&gt;&lt;a href=&quot;&lt;$mt:PagerLink$&gt;&quot;&gt;&lt;$mt:Var name=&quot;__value__&quot;$&gt;&lt;/a&gt;&lt;/mt:IfCurrentPage&gt;&lt;mt:Unless name=&quot;__last__&quot;&gt;&amp;nbsp;&lt;/mt:Unless&gt;&lt;/mt:PagerBlock&gt;&lt;mt:IfMoreResults&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;&lt;$mt:NextLink$&gt;&quot; rel=&quot;next&quot; onclick=&quot;return swapContent();&quot;&gt;次 &amp;gt;&lt;/a&gt;&lt;/mt:IfMoreResults&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:SearchResultsFooter&gt;
    &lt;/mt:SearchResults&gt;
&lt;/mt:SetVarTemplate&gt;
&lt;$mt:Var name=&quot;search_results&quot;$&gt;

&lt;mt:NoSearchResults&gt;
&lt;h1 id=&quot;page-title&quot; class=&quot;search-results-header&quot;&gt;
    &lt;mt:IfStraightSearch&gt;
    「&lt;$mt:SearchString$&gt;」と一致するもの
    &lt;/mt:IfStraightSearch&gt;
    &lt;mt:IfTagSearch&gt;
    タグ「&lt;$mt:SearchString$&gt;」が付けられているもの
    &lt;/mt:IfTagSearch&gt;
&lt;/h1&gt;
&lt;p&gt;「&lt;$mt:SearchString$&gt;」と一致する結果は見つかりませんでした。&lt;/p&gt;
&lt;/mt:NoSearchResults&gt;

&lt;mt:NoSearch&gt;
&lt;h1 id=&quot;page-title&quot; class=&quot;search-results-header&quot;&gt;例&lt;/h1&gt;
&lt;p&gt;すべての単語が順序に関係なく検索されます。フレーズで検索したいときは引用符で囲んでください。&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;&lt;code&gt;&quot;movable type&quot;&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;AND、OR、NOTを入れることで論理検索を行うこともできます。&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;&lt;code&gt;個人 OR 出版&lt;/code&gt;&lt;/p&gt;
    &lt;p&gt;&lt;code&gt;個人 NOT 出版&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/mt:NoSearch&gt;

&lt;mt:Ignore&gt;Used with the ajax search capability of the new search class&lt;/mt:Ignore&gt;
&lt;mt:IfMoreResults&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
&lt;!--
var div = document.getElementById(&apos;search-results&apos;);
var results = {
    &apos;&lt;$mt:CurrentPage$&gt;&apos;: {
        &apos;content&apos;: div.innerHTML,
        &apos;next_url&apos;: &apos;&lt;$mt:NextLink$&gt;&apos;
    }
};
var timer = window.setTimeout(&quot;getResults(&quot; + &lt;$mt:CurrentPage$&gt; + &quot;)&quot;, 1*1000);
//--&gt;
&lt;/script&gt;
&lt;/mt:IfMoreResults&gt;
&lt;$mt:Include module=&quot;フッター&quot;$&gt;

</text></template>
<template id='74' blog_id='2' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606220601' identifier='dynamic_error' modified_on='20110606220601' name='ダイナミックパブリッシングエラー' rebuild_me='1' type='dynamic_error' current_revision='0'><text>
&lt;mt:SetVarBlock name=&quot;page_title&quot;&gt;ページが見つかりません。&lt;/mt:SetVarBlock&gt;
&lt;mt:SetVarBlock name=&quot;title&quot;&gt;&lt;$mt:BlogName encode_html=&quot;1&quot;$&gt;: &lt;$mt:Var name=&quot;page_title&quot;$&gt;&lt;/mt:SetVarBlock&gt;

&lt;$mt:Include module=&quot;ヘッダー&quot; body_class=&quot;mt-dynamic-error&quot;$&gt;

&lt;h1 id=&quot;page-title&quot;&gt;&lt;$mt:Var name=&quot;page_title&quot;$&gt;&lt;/h1&gt;
&lt;blockquote&gt;
    &lt;strong&gt;&lt;$mt:ErrorMessage$&gt;&lt;/strong&gt;
&lt;/blockquote&gt;

&lt;$mt:Include module=&quot;フッター&quot;$&gt;

</text></template>
<template id='75' blog_id='2' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606220601' identifier='javascript' modified_on='20110606220601' name='JavaScript' outfile='mt.js' rebuild_me='1' type='index' current_revision='0'><text>&lt;mt:Ignore&gt;
/*  The following functions and variables are here to support legacy MT templates.
    If you have refreshed your JavaScript template but still use older MT comment
    templates, you may need to uncomment this block in order for those templates 
    to work properly. To use, simply remove the &apos;mt:Ignore&apos; tags wrapping this
    block of code.
*/
    function hideDocumentElement(id) { return mtHide(id) }
    function showDocumentElement(id) { return mtShow(id) }
    function individualArchivesOnLoad() { return mtEntryOnLoad() }
    function writeCommenterGreeting() { return mtShowGreeting() }
    function rememberMe(f) { return mtRememberMe(f) }
    function forgetMe(f) { return mtForgetMe(f) }
    var commenter_name;
    var commenter_id;
    var commenter_url;
    var commenter_blog_ids;
    var mtcmtmail;
    var mtcmtauth;
    var mtcmthome;
    var captcha_timer;
&lt;/mt:Ignore&gt;

// The cookie name to use for storing the blog-side comment session cookie.
var mtCookieName = &quot;&lt;$mt:UserSessionCookieName$&gt;&quot;;
var mtCookieDomain = &quot;&lt;$mt:UserSessionCookieDomain$&gt;&quot;;
var mtCookiePath = &quot;&lt;$mt:UserSessionCookiePath$&gt;&quot;;
var mtCookieTimeout = &lt;$mt:UserSessionCookieTimeout$&gt;;

&lt;mt:Ignore&gt;
/***
 * Simple routine for showing a DOM element (applying a CSS display
 * attribute of &apos;none&apos;).
 */
&lt;/mt:Ignore&gt;
function mtHide(id) {
    var el = (typeof id == &quot;string&quot;) ? document.getElementById(id) : id;
    if (el) el.style.display = &apos;none&apos;;
}

&lt;mt:Ignore&gt;
/***
 * Simple routine for showing a DOM element (applying a CSS display
 * attribute of &apos;block&apos;).
 */
&lt;/mt:Ignore&gt;
function mtShow(id) {
    var el = (typeof id == &quot;string&quot;) ? document.getElementById(id) : id;
    if (el) el.style.display = &apos;block&apos;;
}

&lt;mt:Ignore&gt;
/***
 * A utility function for assigning/adding handlers to window events.
 */
&lt;/mt:Ignore&gt;
function mtAttachEvent(eventName,func) {
    var onEventName = &apos;on&apos; + eventName;
    var old = window[onEventName];
    if( typeof old != &apos;function&apos; )
        window[onEventName] = func;
    else {
        window[onEventName] = function( evt ) {
            old( evt );
            return func( evt );
        };
    }
}

&lt;mt:Ignore&gt;
/***
 * Calls the event named, if there are handlers for it.
 */
&lt;/mt:Ignore&gt;
function mtFireEvent(eventName,param) {
    var fn = window[&apos;on&apos; + eventName];
    if (typeof fn == &apos;function&apos;) return fn(param);
    return;
}

if(!this.JSON){JSON={};}(function(){function f(n){return n&lt;10?&apos;0&apos;+n:n;}if(typeof Date.prototype.toJSON!==&apos;function&apos;){Date.prototype.toJSON=function(key){return this.getUTCFullYear()+&apos;-&apos;+f(this.getUTCMonth()+1)+&apos;-&apos;+f(this.getUTCDate())+&apos;T&apos;+f(this.getUTCHours())+&apos;:&apos;+f(this.getUTCMinutes())+&apos;:&apos;+f(this.getUTCSeconds())+&apos;Z&apos;;};String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(key){return this.valueOf();};}var cx=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,escapable=/[\\\&quot;\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta={&apos;\b&apos;:&apos;\\b&apos;,&apos;\t&apos;:&apos;\\t&apos;,&apos;\n&apos;:&apos;\\n&apos;,&apos;\f&apos;:&apos;\\f&apos;,&apos;\r&apos;:&apos;\\r&apos;,&apos;&quot;&apos;:&apos;\\&quot;&apos;,&apos;\\&apos;:&apos;\\\\&apos;},rep;function quote(string){escapable.lastIndex=0;return escapable.test(string)?&apos;&quot;&apos;+string.replace(escapable,function(a){var c=meta[a];return typeof c===&apos;string&apos;?c:&apos;\\u&apos;+(&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);})+&apos;&quot;&apos;:&apos;&quot;&apos;+string+&apos;&quot;&apos;;}function str(key,holder){var i,k,v,length,mind=gap,partial,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;&amp;&amp;typeof value.toJSON===&apos;function&apos;){value=value.toJSON(key);}if(typeof rep===&apos;function&apos;){value=rep.call(holder,key,value);}switch(typeof value){case&apos;string&apos;:return quote(value);case&apos;number&apos;:return isFinite(value)?String(value):&apos;null&apos;;case&apos;boolean&apos;:case&apos;null&apos;:return String(value);case&apos;object&apos;:if(!value){return&apos;null&apos;;}gap+=indent;partial=[];if(Object.prototype.toString.apply(value)===&apos;[object Array]&apos;){length=value.length;for(i=0;i&lt;length;i+=1){partial[i]=str(i,value)||&apos;null&apos;;}v=partial.length===0?&apos;[]&apos;:gap?&apos;[\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+mind+&apos;]&apos;:&apos;[&apos;+partial.join(&apos;,&apos;)+&apos;]&apos;;gap=mind;return v;}if(rep&amp;&amp;typeof rep===&apos;object&apos;){length=rep.length;for(i=0;i&lt;length;i+=1){k=rep[i];if(typeof k===&apos;string&apos;){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}}else{for(k in value){if(Object.hasOwnProperty.call(value,k)){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}}v=partial.length===0?&apos;{}&apos;:gap?&apos;{\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+mind+&apos;}&apos;:&apos;{&apos;+partial.join(&apos;,&apos;)+&apos;}&apos;;gap=mind;return v;}}if(typeof JSON.stringify!==&apos;function&apos;){JSON.stringify=function(value,replacer,space){var i;gap=&apos;&apos;;indent=&apos;&apos;;if(typeof space===&apos;number&apos;){for(i=0;i&lt;space;i+=1){indent+=&apos; &apos;;}}else if(typeof space===&apos;string&apos;){indent=space;}rep=replacer;if(replacer&amp;&amp;typeof replacer!==&apos;function&apos;&amp;&amp;(typeof replacer!==&apos;object&apos;||typeof replacer.length!==&apos;number&apos;)){throw new Error(&apos;JSON.stringify&apos;);}return str(&apos;&apos;,{&apos;&apos;:value});};}if(typeof JSON.parse!==&apos;function&apos;){JSON.parse=function(text,reviver){var j;function walk(holder,key){var k,v,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;){for(k in value){if(Object.hasOwnProperty.call(value,k)){v=walk(value,k);if(v!==undefined){value[k]=v;}else{delete value[k];}}}}return reviver.call(holder,key,value);}cx.lastIndex=0;if(cx.test(text)){text=text.replace(cx,function(a){return&apos;\\u&apos;+(&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);});}if(/^[\],:{}\s]*$/.test(text.replace(/\\(?:[&quot;\\\/bfnrt]|u[0-9a-fA-F]{4})/g,&apos;@&apos;).replace(/&quot;[^&quot;\\\n\r]*&quot;|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,&apos;]&apos;).replace(/(?:^|:|,)(?:\s*\[)+/g,&apos;&apos;))){j=eval(&apos;(&apos;+text+&apos;)&apos;);return typeof reviver===&apos;function&apos;?walk({&apos;&apos;:j},&apos;&apos;):j;}throw new SyntaxError(&apos;JSON.parse&apos;);};}}());

var MT = window.MT || {};

MT.cons = function () {
  return {
    LOG : &apos;log&apos;,
    WARN : &apos;warn&apos;,
    DEBUG : &apos;debug&apos;,
    INFO : &apos;info&apos;,
    ERR : &apos;error&apos;,
    JSON : &apos;json&apos;
  };
}();

&lt;mt:Ignore&gt;
/**
 * Used for base functionality related to MT
 * 
 * @package MT
 * @class core
 * @global
 * @param {Object} o optional configuration object
 * Options:
 */
&lt;/mt:Ignore&gt;
MT.core = function (o) {
  var _debug = false;
  
  return {
    &lt;mt:Ignore&gt;
    /**
     * Makes remote call and handles response
     * 
     * @param {String} url The URL endpoint
     * @param {String} respType The type of response expected
     * @param {Function} respHandler The function to handle the response
     * @return void
     */
    &lt;/mt:Ignore&gt;
    connect : function (url,respType,respHandler) {
      var xh = mtGetXmlHttp();
      if (!xh) return false;
      
      xh.onreadystatechange = function() {
        if ( xh.readyState == 4 ) {
          if ( xh.status &amp;&amp; ( xh.status != 200 ) ) {
            // error - ignore
          } else {
            switch (respType) {
              case &apos;json&apos;:
                respHandler(JSON.parse(xh.responseText));
                break;
                
              case &apos;xml&apos;:
                break;
                
              case &apos;text&apos;:
                break;
            }
          }
        }
      };
      
      xh.open(&apos;GET&apos;,url);
      xh.send(null);
    },
    
    getEl : function (el) {
      return MT.util.checkNodeType(el)===&apos;element&apos; ? id : (document.getElementById(el) || false);
    },
    
    addEvent : function (el,type,func,obj) {
      if(!obj &amp;&amp; document.addEventListener) {
        el.addEventListener(type,func,false);
      } else if(obj &amp;&amp; document.addEventListener) {
        el.addEventListener(type,function () {
          func.call(obj,event);
        },false);
      } else {
        if(obj) {
          el.attachEvent(&apos;on&apos; + type,function () {
            func.call(obj,event);
          });
        } else {
          el.attachEvent(&apos;on&apos; + type,function () {          
            func.call(el,event);
          });
        }
      }
    },
    
    &lt;mt:Ignore&gt;
    /**
     * Basic logging function
     * 
     * @param {String} level The log level (WARN|DEBUG|INFO|ERROR|LOG)
     * Specified by one of the MT constants
     * @param {String} msg The log message
     * @return void
     */
    &lt;/mt:Ignore&gt;
    log : function (level,msg) {
      if(_debug &amp;&amp; window.console) {
        switch(level) {
          case &apos;warn&apos;:
          case &apos;debug&apos;:
          case &apos;info&apos;:
          case &apos;error&apos;:
          case &apos;log&apos;:
            console[level](msg);
            break;
            
          default:
            return false; 
        }
      } else {
        return false;
      }
    }
  }
}();

&lt;mt:Ignore&gt;
/**
 * Utilities class
 * 
 * @package MT
 * @class util
 * @global
 * Options:
 */
&lt;/mt:Ignore&gt;
MT.util = function () {
  return {
    toggleVisibility : {
      show : function () {
        var i = arguments.length;
        
        while(i--) {
          if(MT.util.checkNodeType(arguments[i])===&apos;element&apos;) {
            arguments[i].style.visibility = &apos;visible&apos;;
          } else {
            MT.core.getEl(arguments[i]).style.visibility = &apos;visible&apos;;
          }
        }
      },
      
      hide : function () {
        var i = arguments.length;
        while(i--) {
          if(MT.util.checkNodeType(arguments[i])===&apos;element&apos;) {
            arguments[i].style.visibility = &apos;hidden&apos;;
          } else {
            MT.core.getEl(arguments[i]).style.visibility = &apos;hidden&apos;;
          }
        }
      }
    },
    
    toggleDisplay : {
      show : function () {
        var i = arguments.length;
        while(i--) {
          if(MT.util.checkNodeType(arguments[i])===&apos;element&apos;) {
            arguments[i].style.display = &apos;&apos;;
          } else {
            MT.core.getEl(arguments[i]).style.display = &apos;&apos;;
          }
        }
      },
      
      hide : function () {
        var i = arguments.length;
        while(i--) {
          if(MT.util.checkNodeType(arguments[i])===&apos;element&apos;) {
            arguments[i].style.display = &apos;none&apos;;
          } else {
            MT.core.getEl(arguments[i]).style.display = &apos;none&apos;;
          }
        }
      }
    },
    
    &lt;mt:Ignore&gt;
    /**
     * Finds the nearest defining (i.e. with an id) parent to the given element
     * 
     * @param {HTMLElement} origin the node from which to start the search
     * @return {HTMLElement|Boolean} The parent node with an id attribute or false
     */
    &lt;/mt:Ignore&gt;
    findDefiningParent : function (origin) {
      if(MT.util.checkNodeType(origin)===&apos;element&apos;) {
        for(var node=origin.parentNode;node.parentNode;node=node.parentNode) {
          if((node.hasAttribute &amp;&amp; node.hasAttribute(&apos;id&apos;)) || node.getAttribute(&apos;id&apos;)) {
            return node;
          }
        }
      }
      return false;
    },
    
    &lt;mt:Ignore&gt;
    /**
     * Tests objects to verify if they are DOM nodes
     * 
     * @param {Object} obj The object to be tested
     * @return {String} the values &apos;element&apos;|&apos;textnode&apos;|&apos;whitespace&apos;
     */
    &lt;/mt:Ignore&gt;
    checkNodeType : function (obj) {
      if (obj &amp;&amp; obj.nodeName){
        switch (obj.nodeType) {
          case 1: return &apos;element&apos;;
          case 3: return (/\S/).test(obj.nodeValue) ? &apos;textnode&apos; : &apos;whitespace&apos;;
        }
      }
    }
  }
}();

&lt;mt:Ignore&gt;
/**
 * mtPaginateComments takes the currently generated static page and either:
 *  - Attempts to find an individual comment link in the query string
 *  - If no link is found, the static page loads
 * In either case, the pagination event is set
 */
&lt;/mt:Ignore&gt;
(function () {
  var M = MT.core,
      c = MT.cons,
      u = MT.util,
      cache,
      isLoading,
      direction,
      currentComments,
      commentAnchor,
      commentArrId,
      commentsPerPage,
      commentsTotalPages,
      loadingIcon,
      pageNum,
      commentsOffset,
      totalComments,
      entryID,
      commentContentDiv,
      topNav,
      nav,
      currentCommentsSpan,
      topCurrentCommentsSpan;
            
  M.addEvent(window,&apos;load&apos;,_init);
  
  /**
   * Initializes the class
   * 
   * @return void
   */
  function _init () {
    if(!MT.entryCommentCount) {
      return;
    }
    
    _initializeVariables();
    _setCommentOffset(false);
    _checkForAnchor();
		_setCurrentComments();
    _toggleNavLinks();
    _initializeEvents();
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Initializes variables to their initial values
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _initializeVariables() {
    cache = {};
    isLoading = false;
    commentAnchor = &apos;&apos;;
    commentArrId = &apos;&apos;;
    commentsPerPage = MT.commentsPerPage || 50;
    currentComments = &apos;&apos;;
    direction = &apos;ascend&apos;;
    entryID = MT.entryID;
    totalComments = MT.entryCommentCount;
    commentsTotalPages = Math.ceil(totalComments / commentsPerPage);
    pageNum = 1;
    
    loadingIcon = &quot;&lt;img title=&apos;Loading...&apos; src=&apos;&lt;$MTStaticWebPath$&gt;images/indicator.white.gif&apos; alt=&apos;Loading&apos; /&gt;&quot;;
    
    commentContentDiv = M.getEl(&quot;comments-content&quot;);
    topNav = M.getEl(&quot;top-comment-nav&quot;);
    nav = M.getEl(&quot;comment-nav&quot;);
    
    currentCommentsSpan = M.getEl(&quot;current-comments&quot;);
    topCurrentCommentsSpan = M.getEl(&quot;top-current-comments&quot;);
  }
  
  function _initializeEvents() {
    if (commentsPerPage &lt; totalComments) {
      M.addEvent(nav,&apos;click&apos;,_handleEvents);
      M.addEvent(topNav,&apos;click&apos;,_handleEvents);
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Checks for an existing anchor tag in the query string
   * If found, it looks for it on the current page
   * If that fails, it tries to find it in comment list and loads
   * the desired page
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _checkForAnchor() {
    var found = String(window.location.hash).match( /comment-(\d{1,6})/ );
		
		if (found) {
		  M.log(c.DEBUG,found);
			if (!M.getEl(found[0]).hasOwnProperty(&apos;className&apos;)) {
				if (_findIdMatch(found[1])) {
    			pageNum = Math.floor(commentArrId / commentsPerPage) + 1;
    			M.log(c.DEBUG,&apos;Comment Array Id: &apos; + commentArrId);
    			M.log(c.DEBUG,&apos;Comments Per Page: &apos; + commentsPerPage);
    			M.log(c.DEBUG,&apos;Page Number: &apos; + pageNum);
    			M.log(c.DEBUG,&apos;Comment Offset: &apos; + _getCommentOffset());
    			_updateComments();
    		}
			}
		}
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Sets commentsOffset (i.e. the offset number to the remote list)
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _setCommentOffset() {
    commentsOffset = commentsPerPage * (pageNum-1);
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Gets the commentsOffset (i.e. the offset number to the remote list)
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _getCommentOffset() {
    return commentsOffset;
  }
  
  &lt;mt:Ignore&gt;
  /**
   * General event handler
   * 
   * @param {Event} e The event object
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _handleEvents (e) {
    var origin = e.target || e.srcElement,
        parentId;
        
    // stupid IE
    origin = origin.id &amp;&amp; M.getEl(origin.id) || false;

    if(origin) {
      parentId = u.checkNodeType(origin.parentNode)===&apos;element&apos; &amp;&amp; origin.parentNode.getAttribute(&apos;id&apos;) &amp;&amp; origin.parentNode.id;
    } else {
      return false;
    }
    
    switch(origin.nodeName) {
      case &apos;A&apos;:
        switch (parentId) {
          case &apos;prev-comments&apos;:
          case &apos;top-prev-comments&apos;:
            if(e.preventDefault) {
              e.preventDefault();
            } else {
              e.returnValue =	false;
            }
            if(!isLoading) {
              _previousPage();
            }
            break;
          case &apos;next-comments&apos;:
          case &apos;top-next-comments&apos;:
            if(e.preventDefault) {
              e.preventDefault();
            } else {
              e.returnValue =	false;
            }
            if(!isLoading) {
              _nextPage();
            }
            break;
        }
        break;
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Toggles the visibility of the navigation links
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _toggleNavLinks () {
    M.log(c.DEBUG,M.getEl(&apos;top-prev-comments&apos;));
    if(pageNum &lt;= commentsTotalPages &amp;&amp; pageNum !== 1) {
      u.toggleVisibility.show(&apos;prev-comments&apos;);
      u.toggleVisibility.show(&apos;top-prev-comments&apos;);
    }
    
    if(pageNum &gt;= 1 &amp;&amp; pageNum !== commentsTotalPages) {
      u.toggleVisibility.show(&apos;next-comments&apos;);
      u.toggleVisibility.show(&apos;top-next-comments&apos;);
    }
    
    if(pageNum===1 || nav.style.visibility===&apos;hidden&apos;) {
      u.toggleVisibility.hide(&apos;prev-comments&apos;);
      u.toggleVisibility.hide(&apos;top-prev-comments&apos;);
    }
    
    if(pageNum===commentsTotalPages || nav.style.visibility===&apos;hidden&apos;) {
      u.toggleVisibility.hide(&apos;next-comments&apos;);
      u.toggleVisibility.hide(&apos;top-next-comments&apos;);
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Determines appropriate action based on the id of the parent
   * clicked link. Decrements pageNum based on id.
   * 
   * @param {String} id the id of the parent of the clicked link
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _nextPage () {
    if(pageNum &lt; commentsTotalPages) {
      pageNum++;
      _updateComments();
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Determines appropriate action based on the id of the parent
   * clicked link. Increments/decrements pageNum based on id.
   * 
   * @param {String} id the id of the parent of the clicked link
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _previousPage() {
    if(pageNum &gt; 1) {
      pageNum--;
      _updateComments();
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Searches for a particular comment in the list of ids
   * 
   * @param {String} id The id for which to search
   * @return {Boolean} true, if found, false otherwise
   */
  &lt;/mt:Ignore&gt;
  function _findIdMatch (id) {
    var len = MT.commentIds.length;
    
  	while (len--) {
  		if (MT.commentIds[len] == id) {
  			commentAnchor = &quot;comment-&quot; + id;
  			commentArrId = len;
  			return true;
  		}
  	}
  	
  	return false;
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Sets the current comment counts on the page
   *
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _setCurrentComments() {
    var commentsOnPage = pageNum != commentsTotalPages ? commentsOffset + commentsPerPage : totalComments;
    
    _setCurrentCommentsContent([commentsOffset+1,&quot; - &quot;,commentsOnPage].join(&apos;&apos;));
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Sets the &quot;current-comments&quot; element with the HTML value
   * 
   * @param {String|Element} currentCommentsHTML The content to be set
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _setCurrentCommentsContent(currentCommentsHTML) {
    currentCommentsSpan.innerHTML = currentCommentsHTML;
    topCurrentCommentsSpan.innerHTML = currentCommentsHTML;
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Sets the content of the comment list
   * 
   * @param {String|Element} commentHTML The content to be set 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _setCommentContent(commentHTML) {
    commentContentDiv.innerHTML = commentHTML;
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Builds the appropriate URL to make a remote call to get the
   * next set of comments
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _updateComments() {
    var comments, jsonUrl;
    isLoading = true;
    _setCurrentCommentsContent(loadingIcon);
    _setCommentOffset();
    
    jsonUrl = [
        &quot;&lt;$mt:CGIPath$&gt;&lt;$mt:CommentScript$&gt;?__mode=comment_listing&amp;direction=&quot;,
        direction,
        &quot;&amp;entry_id=&quot;,
        entryID,
        &quot;&amp;limit=&quot;,
        commentsPerPage,
        &quot;&amp;offset=&quot;,
        _getCommentOffset()
      ].join(&apos;&apos;);
  	
  	if (!commentAnchor) {
      commentAnchor = &quot;comments-content&quot;;
    }
    
    if(cache.hasOwnProperty(jsonUrl)) {
      _refreshComments(cache[jsonUrl]);
      isLoading = false;
    } else {
      M.connect(jsonUrl,c.JSON,function (json) {
        cache[jsonUrl] = json.comments;
    	  _refreshComments(json.comments);
    	  isLoading = false;
      });
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Refreshes the comment data with the current
   * 
   * @param {String} commentData The data used to replace current comments
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _refreshComments(commentData) {
    _setCommentContent(commentData);
    _setCurrentComments();
    window.location.hash = &apos;reset&apos;;
    window.location.hash = commentAnchor;
    _toggleNavLinks();
  }
})();

&lt;mt:Ignore&gt;
/***
 * Displays a relative date.
 * &apos;ts&apos; is a Date object, &apos;fds&apos; is a string of the date which
 * will be displayed if the given date is older than 1 week.
 */
&lt;/mt:Ignore&gt;
function mtRelativeDate(ts, fds) {
    var now = new Date();
    var ref = ts;
    var delta = Math.floor((now.getTime() - ref.getTime()) / 1000);

    var str;
    if (delta &lt; 60) {
        str = &apos;直前&apos;;
    } else if (delta &lt;= 86400) {
        // less than 1 day
        var hours = Math.floor(delta / 3600);
        var min = Math.floor((delta % 3600) / 60);
        if (hours == 1)
            str = &apos;1 時間前&apos;;
        else if (hours &gt; 1)
            str = &apos;2 時間前&apos;.replace(/2/, hours);
        else if (min == 1)
            str = &apos;1 分前&apos;;
        else
            str = &apos;2 分前&apos;.replace(/2/, min);
    } else if (delta &lt;= 604800) {
        // less than 1 week
        var days = Math.floor(delta / 86400);
        var hours = Math.floor((delta % 86400) / 3600);
        if (days == 1)
            str = &apos;1 日前&apos;;
        else if (days &gt; 1)
            str = &apos;2 日前&apos;.replace(/2/, days);
        else if (hours == 1)
            str = &apos;1 時間前&apos;;
        else
            str = &apos;2 時間前&apos;.replace(/2/, hours);
    }
    return str ? str : fds;
}

&lt;mt:Ignore&gt;
/***
 * Used to display an edit link for the given entry.
 */
&lt;/mt:Ignore&gt;
function mtEditLink(entry_id, author_id) {
    var u = mtGetUser();
    if (! u) return;
    if (! entry_id) return;
    if (! author_id) return;
    if (u.id != author_id) return;
    var link = &apos;&lt;a href=&quot;&lt;$mt:AdminScript$&gt;?__mode=view&amp;amp;_type=entry&amp;amp;id=&apos; + entry_id + &apos;&quot;&gt;編集&lt;/a&gt;&apos;;
    document.write(link);
}

&lt;mt:Ignore&gt;
/***
 * Called when an input field on the comment form receives focus.
 */
&lt;/mt:Ignore&gt;
function mtCommentFormOnFocus() {
    // if CAPTCHA is enabled, this causes the captcha image to be
    // displayed if it hasn&apos;t been already.
    mtShowCaptcha();
}

&lt;mt:Ignore&gt;
/***
 * Displays a captcha field for anonymous commenters.
 */
&lt;/mt:Ignore&gt;
var mtCaptchaVisible = false;
function mtShowCaptcha() {
    var u = mtGetUser();
    if ( u &amp;&amp; u.is_authenticated ) return;
    if (mtCaptchaVisible) return;
    var div = document.getElementById(&apos;comments-open-captcha&apos;);
    if (div) {
        div.innerHTML = &apos;&lt;$mt:CaptchaFields$&gt;&apos;;
        mtCaptchaVisible = true;
    }
}

&lt;mt:Ignore&gt;
/* user object
    -- saved in user cookie --
    u.name (display name)
    u.url (link to home page)
    u.email (for anonymous only)
    u.userpic (url for commenter/author)
    u.profile (link to profile)
    u.is_trusted (boolean)
    u.is_author (user has posting rights)
    u.is_banned (banned status; neither post/comment perms)
    u.can_post (has permission to post)
    u.can_comment (has permission to comment)

    -- status fields --
    u.is_authenticated (boolean)
    u.is_anonymous (user is anonymous)
*/
&lt;/mt:Ignore&gt;

var is_preview;
var user;
&lt;mt:Ignore&gt;
/***
 * Assigns a user object as the actively logged in user; also saves the
 * user information in a browser cookie.
 */
&lt;/mt:Ignore&gt;
function mtSetUser(u) {
    if (u) {
        // persist this
        user = u;
        mtSaveUser();
        // sync up user greeting
        mtFireEvent(&apos;usersignin&apos;);
    }
}

&lt;mt:Ignore&gt;
/***
 * Simple function that escapes single quote characters for storing
 * in a cookie.
 */
&lt;/mt:Ignore&gt;
function mtEscapeJS(s) {
    s = s.replace(/&apos;/g, &quot;&amp;apos;&quot;);
    return s;
}

&lt;mt:Ignore&gt;
/***
 * Simple function that unescapes single quote characters that were
 * stored in a cookie.
 */
&lt;/mt:Ignore&gt;
function mtUnescapeJS(s) {
    s = s.replace(/&amp;apos;/g, &quot;&apos;&quot;);
    return s;
}

&lt;mt:Ignore&gt;
/***
 * Serializes a user object into a string, suitable for storing as a cookie.
 */
&lt;/mt:Ignore&gt;
function mtBakeUserCookie(u) {
    var str = &quot;&quot;;
    if (u.name) str += &quot;name:&apos;&quot; + mtEscapeJS(u.name) + &quot;&apos;;&quot;;
    if (u.url) str += &quot;url:&apos;&quot; + mtEscapeJS(u.url) + &quot;&apos;;&quot;;
    if (u.email) str += &quot;email:&apos;&quot; + mtEscapeJS(u.email) + &quot;&apos;;&quot;;
    if (u.is_authenticated) str += &quot;is_authenticated:&apos;1&apos;;&quot;;
    if (u.profile) str += &quot;profile:&apos;&quot; + mtEscapeJS(u.profile) + &quot;&apos;;&quot;;
    if (u.userpic) str += &quot;userpic:&apos;&quot; + mtEscapeJS(u.userpic) + &quot;&apos;;&quot;;
    if (u.sid) str += &quot;sid:&apos;&quot; + mtEscapeJS(u.sid) + &quot;&apos;;&quot;;
    str += &quot;is_trusted:&apos;&quot; + (u.is_trusted ? &quot;1&quot; : &quot;0&quot;) + &quot;&apos;;&quot;;
    str += &quot;is_author:&apos;&quot; + (u.is_author ? &quot;1&quot; : &quot;0&quot;) + &quot;&apos;;&quot;;
    str += &quot;is_banned:&apos;&quot; + (u.is_banned ? &quot;1&quot; : &quot;0&quot;) + &quot;&apos;;&quot;;
    str += &quot;can_post:&apos;&quot; + (u.can_post ? &quot;1&quot; : &quot;0&quot;) + &quot;&apos;;&quot;;
    str += &quot;can_comment:&apos;&quot; + (u.can_comment ? &quot;1&quot; : &quot;0&quot;) + &quot;&apos;;&quot;;
    str = str.replace(/;$/, &apos;&apos;);
    return str;
}

&lt;mt:Ignore&gt;
/***
 * Unserializes a user cookie and returns a user object with the restored
 * state.
 */
&lt;/mt:Ignore&gt;
function mtUnbakeUserCookie(s) {
    if (!s) return;

    var u = {};
    var m;
    while (m = s.match(/^((name|url|email|is_authenticated|profile|userpic|sid|is_trusted|is_author|is_banned|can_post|can_comment):&apos;([^&apos;]+?)&apos;;?)/)) {
        s = s.substring(m[1].length);
        if (m[2].match(/^(is|can)_/)) // boolean fields
            u[m[2]] = m[3] == &apos;1&apos; ? true : false;
        else
            u[m[2]] = mtUnescapeJS(m[3]);
    }
    if (u.is_authenticated) {
        u.is_anonymous = false;
    } else {
        u.is_anonymous = true;
        u.can_post = false;
        u.is_author = false;
        u.is_banned = false;
        u.is_trusted = false;
    }
    return u;
}

&lt;mt:Ignore&gt;
/***
 * Retrieves an object of the currently logged in user&apos;s state.
 * If no user is logged in or cookied, this will return null.
 */
&lt;/mt:Ignore&gt;
function mtGetUser() {
    if (!user) {
        var cookie = mtGetCookie(mtCookieName);
        if (!cookie) return;
        user = mtUnbakeUserCookie(cookie);
        if (! user) {
            user = {};
            user.is_anonymous = true;
            user.can_post = false;
            user.is_author = false;
            user.is_banned = false;
            user.is_trusted = false;
        }
    }
    return user;
}

&lt;mt:Ignore&gt;
/***
 * Issues a request to the MT comment script to retrieve the currently
 * logged-in user (if any).
 */
&lt;/mt:Ignore&gt;
var mtFetchedUser = false;
&lt;mt:IfWebsite&gt;
function mtFetchUser(cb) {
    if (!cb) cb = &apos;mtSetUser&apos;;
    if ( ( cb == &apos;mtSetUser&apos; ) &amp;&amp; mtGetUser() ) {
        var url = document.URL;
        url = url.replace(/#.+$/, &apos;&apos;);
        url += &apos;#comments-open&apos;;
        location.href = url;
    } else {
        // we aren&apos;t using AJAX for this, since we may have to request
        // from a different domain. JSONP to the rescue.
        mtFetchedUser = true;
        var script = document.createElement(&apos;script&apos;);
        var ts = new Date().getTime();
        script.src = &apos;&lt;$mt:CGIPath$&gt;&lt;$mt:CommentScript$&gt;?__mode=session_js&amp;blog_id=&lt;$mt:BlogID$&gt;&amp;jsonp=&apos; + cb + &apos;&amp;ts=&apos; + ts;
        (document.getElementsByTagName(&apos;head&apos;))[0].appendChild(script);
    }
}
&lt;/mt:IfWebsite&gt;

&lt;mt:Ignore&gt;
/***
 * Called when the &apos;Remember me&apos; checkbox is changed. If the checkbox
 * is cleared, the cached user cookie is immediately cleared.
 */
&lt;/mt:Ignore&gt;
function mtRememberMeOnClick(b) {
    if (!b.checked)
        mtClearUser(b.form);
    return true;
}

&lt;mt:Ignore&gt;
/***
 * Called when comment form is sent.
 * Required parameter: Form DOM object of comment form.
 * If form has a &apos;bakecookie&apos; member, it will be used to signal
 * storing the anonymous commenter information to a cookie.
 * If form has a &apos;armor&apos; member, it will be used to store
 * a token that is checked by the comment script.
 */
&lt;/mt:Ignore&gt;
&lt;mt:IfWebsite&gt;
var mtRequestSubmitted = false;
function mtCommentOnSubmit(f) {
    if (!mtRequestSubmitted) {
        mtRequestSubmitted = true;

        if (f.armor)
            f.armor.value = &apos;&lt;$mt:BlogSitePath encode_sha1=&quot;1&quot;$&gt;&apos;;
        if (f.bakecookie &amp;&amp; f.bakecookie.checked)
            mtSaveUser(f);

        // disable submit buttons
        if (f.preview_button) f.preview_button.disabled = true;
        if (f.post) f.post.disabled = true;

        var u = mtGetUser();
        if ( !is_preview &amp;&amp; ( u &amp;&amp; u.is_authenticated ) ) {
            // validate session; then submit
            mtFetchedUser = false;
            mtFetchUser(&apos;mtCommentSessionVerify&apos;);
            return false;
        }

        return true;
    }
    return false;
}

function mtCommentSessionVerify(app_user) {
    var u = mtGetUser();
    var f = document[&apos;comments_form&apos;];
    if ( u &amp;&amp; app_user &amp;&amp; app_user.sid &amp;&amp; ( u.sid == app_user.sid ) ) {
        f.submit();
    } else {
        alert(&apos;セッションの有効期限が切れています。再度サインインしてください。&apos;);
        mtClearUser();
        mtFireEvent(&apos;usersignin&apos;);
&lt;mt:IfRegistrationRequired&gt;
        mtShow(&apos;comments-form&apos;);
        mtHide(&apos;comments-open-footer&apos;);
&lt;/mt:IfRegistrationRequired&gt;
    }
}

function mtUserOnLoad() {
    var u = mtGetUser();

    // if the user is authenticated, hide the &apos;anonymous&apos; fields
    // and any captcha input if already shown
    if ( document.getElementById(&apos;comments-form&apos;)) {
        if ( u &amp;&amp; u.is_authenticated ) {
            mtShow(&apos;comments-form&apos;);
            mtHide(&apos;comments-open-data&apos;);
            if (mtCaptchaVisible)
                mtHide(&apos;comments-open-captcha&apos;);
        } else {
&lt;mt:IfRegistrationRequired&gt;
            mtHide(&apos;comments-form&apos;);
&lt;/mt:IfRegistrationRequired&gt;
        }
        if ( u &amp;&amp; u.is_banned )
            mtHide(&apos;comments-form&apos;);

        // if we&apos;re previewing a comment, make sure the captcha
        // field is visible
        if (is_preview)
            mtShowCaptcha();
        else
            mtShowGreeting();

        // populate anonymous comment fields if user is cookied as anonymous
        var cf = document[&apos;comments_form&apos;];
        if (cf) {
            if (u &amp;&amp; u.is_anonymous) {
                if (u.email) cf.email.value = u.email;
                if (u.name) cf.author.value = u.name;
                if (u.url) cf.url.value = u.url;
                if (cf.bakecookie)
                    cf.bakecookie.checked = u.name || u.email;
            } else {
                if (u &amp;&amp; u.sid &amp;&amp; cf.sid)
                    cf.sid.value = u.sid;
            }
            if (cf.post &amp;&amp; cf.post.disabled)
                cf.post.disabled = false;
            if (cf.preview_button &amp;&amp; cf.preview_button.disabled)
                cf.preview_button.disabled = false;
            mtRequestSubmitted = false;
        }
    }
}
&lt;/mt:IfWebsite&gt;

&lt;mt:Ignore&gt;
/***
 * Called when an entry archive page is loaded.
 * This routine controls which elements of the comment form are shown
 * or hidden, depending on commenter type and blog configuration.
 */
&lt;/mt:Ignore&gt;
&lt;mt:IfWebsite&gt;
function mtEntryOnLoad() {
    var cf = document[&apos;comments_form&apos;];
    if (cf &amp;&amp; cf.preview) cf.preview.value = &apos;&apos;;
    &lt;mt:Unless tag=&quot;IfPingsAccepted&quot;&gt;mtHide(&apos;trackbacks-info&apos;);&lt;/mt:Unless&gt;
    &lt;mt:Unless tag=&quot;IfCommentsAccepted&quot;&gt;mtHide(&apos;comments-open&apos;);&lt;/mt:Unless&gt;
    mtFireEvent(&apos;usersignin&apos;);
}

function mtEntryOnUnload() {
    if (mtRequestSubmitted) {
        var cf = document[&apos;comments_form&apos;];
        if (cf) {
            if (cf.post &amp;&amp; cf.post.disabled)
                cf.post.disabled = false;
            if (cf.preview_button &amp;&amp; cf.preview_button.disabled)
                cf.preview_button.disabled = false;
        }
        mtRequestSubmitted = false;
    }
    return true;
}

mtAttachEvent(&apos;usersignin&apos;, mtUserOnLoad);
&lt;/mt:IfWebsite&gt;

&lt;mt:Ignore&gt;
/***
 * Handles the action of the &quot;Sign in&quot; link. First clears any existing
 * user cookie, then directs to the MT comment script to sign the user in.
 */
&lt;/mt:Ignore&gt;
function mtSignIn() {
    var doc_url = document.URL;
    doc_url = doc_url.replace(/#.+/, &apos;&apos;);
    var url = &apos;&lt;$mt:SignInLink$&gt;&apos;;
    if (is_preview) {
        if ( document[&apos;comments_form&apos;] ) {
            var entry_id = document[&apos;comments_form&apos;].entry_id.value;
            url += &apos;&amp;entry_id=&apos; + entry_id;
        } else {
            url += &apos;&amp;return_url=&lt;$mt:BlogURL encode_url=&quot;1&quot;$&gt;&apos;;
        }
    } else {
        url += &apos;&amp;return_url=&apos; + encodeURIComponent(doc_url);
    }
    mtClearUser();
    location.href = url;
}

function mtSignInOnClick(sign_in_element) {
    var el;
    if (sign_in_element) {
        // display throbber
        el = document.getElementById(sign_in_element);
        if (!el)  // legacy MT 4.x element id
            el = document.getElementById(&apos;comment-form-external-auth&apos;);
    }
    if (el)
        el.innerHTML = &apos;サインインします... &lt;span class=&quot;status-indicator&quot;&gt;&amp;nbsp;&lt;/span&gt;&apos;;

    mtClearUser(); // clear any &apos;anonymous&apos; user cookie to allow sign in
    mtFetchUser(&apos;mtSetUserOrLogin&apos;);
    return false;
}

function mtSetUserOrLogin(u) {
    if (u &amp;&amp; u.is_authenticated) {
        mtSetUser(u);
    } else {
        // user really isn&apos;t logged in; so let&apos;s do this!
        mtSignIn();
    }
}

&lt;mt:Ignore&gt;
/***
 * Handles sign out from the web site.
 * First clears any existing user cookie, then direts to the MT comment
 * script to sign the user out.
 */
&lt;/mt:Ignore&gt;
function mtSignOut(entry_id) {
    mtClearUser();
    var doc_url = document.URL;
    doc_url = doc_url.replace(/#.+/, &apos;&apos;);
    var url = &apos;&lt;$mt:SignOutLink$&gt;&apos;;
    if (is_preview) {
        if ( document[&apos;comments_form&apos;] ) {
            var entry_id = document[&apos;comments_form&apos;].entry_id.value;
            url += &apos;&amp;entry_id=&apos; + entry_id;
        } else {
            url += &apos;&amp;return_url=&lt;$mt:BlogURL encode_url=&quot;1&quot;$&gt;&apos;;
        }
    } else {
        url += &apos;&amp;return_url=&apos; + encodeURIComponent(doc_url);
    }
    location.href = url;
}

&lt;mt:Ignore&gt;
/***
 * Handles the action of the &quot;Sign out&quot; link.
 */
&lt;/mt:Ignore&gt;
function mtSignOutOnClick() {
    mtSignOut();
    return false;
}

&lt;mt:Ignore&gt;
/***
 * Handles the display of the greeting message, depending on what kind of
 * user is logged in and blog comment policy.
 */
&lt;/mt:Ignore&gt;
&lt;mt:IfWebsite&gt;
function mtShowGreeting() {
&lt;mt:IfRegistrationAllowed&gt;
    var reg_reqd = &lt;mt:IfRegistrationRequired&gt;true&lt;mt:Else&gt;false&lt;/mt:IfRegistrationRequired&gt;;

    var cf = document[&apos;comments_form&apos;];
    if (!cf) return;

    var el = document.getElementById(&apos;comment-greeting&apos;);
    if (!el)  // legacy MT 4.x element id
        el = document.getElementById(&apos;comment-form-external-auth&apos;);
    if (!el) return;

    var eid = cf.entry_id;
    var entry_id;
    if (eid) entry_id = eid.value;

    var phrase;
    var u = mtGetUser();

    if ( u &amp;&amp; u.is_authenticated ) {
        if ( u.is_banned ) {
            phrase = &apos;このブログにコメントする権限を持っていません。(\&lt;a href=\&quot;javas\cript:void(0);\&quot; onclick=\&quot;return mtSignOutOnClick();\&quot;\&gt;サインアウトする\&lt;\/a\&gt;)&apos;;
        } else {
            var user_link;
            if ( u.is_author ) {
                user_link = &apos;&lt;a href=&quot;&lt;$mt:CGIPath$&gt;&lt;$mt:CommentScript$&gt;?__mode=edit_profile&amp;return_url=&apos; + encodeURIComponent( location.href );
                user_link += &apos;&quot;&gt;&apos; + u.name + &apos;&lt;/a&gt;&apos;;
            } else {
                // registered user, but not a user with posting rights
                if (u.url)
                    user_link = &apos;&lt;a href=&quot;&apos; + u.url + &apos;&quot;&gt;&apos; + u.name + &apos;&lt;/a&gt;&apos;;
                else
                    user_link = u.name;
            }
            // TBD: supplement phrase with userpic if one is available.
            phrase = &apos;__NAME__としてサインインしています。(\&lt;a href=\&quot;javas\cript:void(0)\&quot; onclick=\&quot;return mtSignOutOnClick();\&quot;\&gt;サインアウト\&lt;\/a\&gt;)&apos;;
            phrase = phrase.replace(/__NAME__/, user_link);
        }
    } else {
        if (reg_reqd) {
            phrase = &apos;コメントするにはまず\&lt;a href=\&quot;javas\cript:void(0)\&quot; onclick=\&quot;return mtSignInOnClick(\&apos;comment-greeting\&apos;)\&quot;\&gt;サインイン\&lt;\/a\&gt;してください。&apos;;
        } else {
            phrase = &apos;コメントする前に\&lt;a href=\&quot;javas\cript:void(0)\&quot; onclick=\&quot;return mtSignInOnClick(\&apos;comment-greeting\&apos;)\&quot;\&gt;サインイン\&lt;\/a\&gt;することもできます。&apos;;
        }
    }
    el.innerHTML = phrase;
&lt;mt:Else&gt;
    mtShowCaptcha();
&lt;/mt:IfRegistrationAllowed&gt;
}
&lt;/mt:IfWebsite&gt;

&lt;mt:Ignore&gt;
/***
 * Handles the action of the &apos;Reply&apos; links.
 */
&lt;/mt:Ignore&gt;
function mtReplyCommentOnClick(parent_id, author) {
    mtShow(&apos;comment-form-reply&apos;);

    var checkbox = document.getElementById(&apos;comment-reply&apos;);
    var label = document.getElementById(&apos;comment-reply-label&apos;);
    var text = document.getElementById(&apos;comment-text&apos;);

    // Populate label with new values
    var reply_text = &apos;\&lt;a href=\&quot;#comment-__PARENT__\&quot; onclick=\&quot;location.href=this.href; return false\&quot;\&gt;__AUTHOR__からのコメント\&lt;\/a\&gt;に返信&apos;;
    reply_text = reply_text.replace(/__PARENT__/, parent_id);
    reply_text = reply_text.replace(/__AUTHOR__/, author);
    label.innerHTML = reply_text;

    checkbox.value = parent_id; 
    checkbox.checked = true;
    try {
        // text field may be hidden
        text.focus();
    } catch(e) {
    }

    mtSetCommentParentID();
}

&lt;mt:Ignore&gt;
/***
 * Sets the parent comment ID when replying to a comment.
 */
&lt;/mt:Ignore&gt;
function mtSetCommentParentID() {
    var checkbox = document.getElementById(&apos;comment-reply&apos;);
    var parent_id_field = document.getElementById(&apos;comment-parent-id&apos;);
    if (!checkbox || !parent_id_field) return;

    var pid = 0;
    if (checkbox.checked == true)
        pid = checkbox.value;
    parent_id_field.value = pid;
}

&lt;mt:Ignore&gt;
/***
 * Persists a copy of the current user cookie into the browser cookie stash.
 */
&lt;/mt:Ignore&gt;
function mtSaveUser(f) {
    // We can&apos;t reliably store the user cookie during a preview.
    if (is_preview) return;

    var u = mtGetUser();

    if (f &amp;&amp; (!u || u.is_anonymous)) {
        if ( !u ) {
            u = {};
            u.is_authenticated = false;
            u.can_comment = true;
            u.is_author = false;
            u.is_banned = false;
            u.is_anonymous = true;
            u.is_trusted = false;
        }
        if (f.author != undefined) u.name = f.author.value;
        if (f.email != undefined) u.email = f.email.value;
        if (f.url != undefined) u.url = f.url.value;
    }

    if (!u) return;

    var cache_period = mtCookieTimeout * 1000;

    // cache anonymous user info for a long period if the
    // user has requested to be remembered
    if (u.is_anonymous &amp;&amp; f &amp;&amp; f.bakecookie &amp;&amp; f.bakecookie.checked)
        cache_period = 365 * 24 * 60 * 60 * 1000;

    var now = new Date();
    mtFixDate(now);
    now.setTime(now.getTime() + cache_period);

    var cmtcookie = mtBakeUserCookie(u);
    mtSetCookie(mtCookieName, cmtcookie, now, mtCookiePath, mtCookieDomain,
        location.protocol == &apos;https:&apos;);
}

&lt;mt:Ignore&gt;
/***
 * Clears the blog-side user cookie.
 */
&lt;/mt:Ignore&gt;
function mtClearUser() {
    user = null;
    mtDeleteCookie(mtCookieName, mtCookiePath, mtCookieDomain,
        location.protocol == &apos;https:&apos;);
}

&lt;mt:Ignore&gt;
/***
 * Sets a browser cookie.
 */
&lt;/mt:Ignore&gt;
function mtSetCookie(name, value, expires, path, domain, secure) {
    if (domain &amp;&amp; domain.match(/^\.?localhost$/))
        domain = null;
    var curCookie = name + &quot;=&quot; + escape(value) +
        (expires ? &quot;; expires=&quot; + expires.toGMTString() : &quot;&quot;) +
        (path ? &quot;; path=&quot; + path : &quot;&quot;) +
        (domain ? &quot;; domain=&quot; + domain : &quot;&quot;) +
        (secure ? &quot;; secure&quot; : &quot;&quot;);
    document.cookie = curCookie;
}

&lt;mt:Ignore&gt;
/***
 * Retrieves a browser cookie.
 */
&lt;/mt:Ignore&gt;
function mtGetCookie(name) {
    var prefix = name + &apos;=&apos;;
    var c = document.cookie;
    var cookieStartIndex = c.indexOf(prefix);
    if (cookieStartIndex == -1)
        return &apos;&apos;;
    var cookieEndIndex = c.indexOf(&quot;;&quot;, cookieStartIndex + prefix.length);
    if (cookieEndIndex == -1)
        cookieEndIndex = c.length;
    return unescape(c.substring(cookieStartIndex + prefix.length, cookieEndIndex));
}

&lt;mt:Ignore&gt;
/***
 * Deletes a browser cookie.
 */
&lt;/mt:Ignore&gt;
function mtDeleteCookie(name, path, domain, secure) {
    if (mtGetCookie(name)) {
        if (domain &amp;&amp; domain.match(/^\.?localhost$/))
            domain = null;
        document.cookie = name + &quot;=&quot; +
            (path ? &quot;; path=&quot; + path : &quot;&quot;) +
            (domain ? &quot;; domain=&quot; + domain : &quot;&quot;) +
            (secure ? &quot;; secure&quot; : &quot;&quot;) +
            &quot;; expires=Thu, 01-Jan-70 00:00:01 GMT&quot;;
    }
}

function mtFixDate(date) {
    var skew = (new Date(0)).getTime();
    if (skew &gt; 0)
        date.setTime(date.getTime() - skew);
}

&lt;mt:Ignore&gt;
/***
 * Returns a XMLHttpRequest object (for Ajax operations).
 */
&lt;/mt:Ignore&gt;
function mtGetXmlHttp() {
    if ( !window.XMLHttpRequest ) {
        window.XMLHttpRequest = function() {
            var types = [
                &quot;Microsoft.XMLHTTP&quot;,
                &quot;MSXML2.XMLHTTP.5.0&quot;,
                &quot;MSXML2.XMLHTTP.4.0&quot;,
                &quot;MSXML2.XMLHTTP.3.0&quot;,
                &quot;MSXML2.XMLHTTP&quot;
            ];

            for ( var i = 0; i &lt; types.length; i++ ) {
                try {
                    return new ActiveXObject( types[ i ] );
                } catch( e ) {}
            }

            return undefined;
        };
    }
    if ( window.XMLHttpRequest )
        return new XMLHttpRequest();
}

// BEGIN: fast browser onload init
// Modifications by David Davis, DWD
// Dean Edwards/Matthias Miller/John Resig
// http://dean.edwards.name/weblog/2006/06/again/?full#comment5338

function mtInit() {
    // quit if this function has already been called
    if (arguments.callee.done) return;

    // flag this function so we don&apos;t do the same thing twice
    arguments.callee.done = true;

    // kill the timer
    // DWD - check against window
    if ( window._timer ) clearInterval(window._timer);

    // DWD - fire the window onload now, and replace it
    if ( window.onload &amp;&amp; ( window.onload !== window.mtInit ) ) {
        window.onload();
        window.onload = function() {};
    }
}

/* for Mozilla/Opera9 */
if (document.addEventListener) {
    document.addEventListener(&quot;DOMContentLoaded&quot;, mtInit, false);
}

/* for Internet Explorer */
/*@cc_on @*/
/*@if (@_win32)
document.write(&quot;&lt;script id=__ie_onload defer src=javascript:void(0)&gt;&lt;\/script&gt;&quot;);
var script = document.getElementById(&quot;__ie_onload&quot;);
script.onreadystatechange = function() {
    if (this.readyState == &quot;complete&quot;) {
        mtInit(); // call the onload handler
    }
};
/*@end @*/

/* for Safari */
if (/WebKit/i.test(navigator.userAgent)) { // sniff
    _timer = setInterval(function() {
        if (/loaded|complete/.test(document.readyState)) {
            mtInit(); // call the onload handler
        }
    }, 10);
}

/* for other browsers */
window.onload = mtInit;

// END: fast browser onload init

&lt;mt:IfWebsite&gt;
&lt;mt:IfRegistrationAllowed&gt;
/***
 * If request contains a &apos;#_login&apos; or &apos;#_logout&apos; hash, use this to
 * also delete the blog-side user cookie, since we&apos;re coming back from
 * a login, logout or edit profile operation.
 */
var clearCookie = ( window.location.hash &amp;&amp; window.location.hash.match( /^#_log(in|out)/ ) ) ? true : false;
if (clearCookie) {
    // clear any logged in state
    mtClearUser();
    if (RegExp.$1 == &apos;in&apos;)
        mtFetchUser();
} else {
    &lt;mt:Ignore&gt;
    /***
     * Uncondition this call to fetch the current user state (if available)
     * from MT upon page load if no user cookie is already present.
     * This is okay if you have a private install, such as an Intranet;
     * not recommended for public web sites!
     */
    &lt;/mt:Ignore&gt;
    if ( is_preview &amp;&amp; !user )
        mtFetchUser();
}
&lt;/mt:IfRegistrationAllowed&gt;
&lt;/mt:IfWebsite&gt;
</text></template>
<template id='76' blog_id='2' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606220601' identifier='comment_listing' modified_on='20110606220601' name='コメント一覧' rebuild_me='1' type='comment_listing' current_revision='0'><text>{
	&quot;direction&quot;: &quot;&lt;mt:Var name=&quot;commentDirection&quot;&gt;&quot;,
	&quot;comments&quot;: &quot;&lt;mt:Comments sort_order=&quot;$commentDirection&quot;&gt;&lt;$mt:Include module=&quot;コメント詳細&quot; replace=&quot;\&quot;,&quot;\\&quot; replace=&apos;&quot;&apos;,&apos;\&quot;&apos; strip_linefeeds=&quot;1&quot;$&gt;&lt;/mt:Comments&gt;&quot;
}</text></template>
<template id='77' blog_id='2' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606220601' identifier='template_619' modified_by='1' modified_on='20130423185227' name='ウェブページ' rebuild_me='0' type='page' current_revision='15' cache_expire_type='0' include_with_ssi='0' revision='15'><text>&lt;$mt:Include module=&quot;DOCTYPE&quot;$&gt;
&lt;title&gt;&lt;$MTEntryTitle$&gt;｜声優・ナレーターなら　日本ナレーション演技研究所&lt;/title&gt;
&lt;link rel=&quot;canonical&quot; href=&quot;http://nichinare.com/&quot; /&gt;
&lt;$mt:Include module=&quot;下層ページ　外部読み込み&quot;$&gt;

&lt;body id=&quot;&lt;$MTFolderLabel$&gt;&quot; onload=&quot;addLinkURL(&apos;code&apos;);return false;&quot;&gt;
&lt;a name=&quot;pagetop&quot; id=&quot;pagetop&quot;&gt;&lt;/a&gt;
&lt;div id=&quot;wrapper&quot;&gt;
&lt;$mt:Include module=&quot;ヘッダー&quot;$&gt;
&lt;p class=&quot;pankuzu normal&quot;&gt;&lt;a href=&quot;../index.html&quot;&gt;日ナレトップ&lt;/a&gt;  ＞  &lt;$MTEntryTitle$&gt;&lt;/p&gt;
&lt;!-- Container --&gt;
&lt;div id=&quot;container&quot;&gt;
&lt;div id=&quot;contents&quot;&gt;
&lt;div class=&quot;right_contents&quot;&gt;
&lt;h2 class=&quot;&lt;$mt:ArchiveFile extension=&apos;0&apos;$&gt;_ttl&quot;&gt;&lt;MTTitleImgAsset&gt;&lt;img src=&quot;&lt;$MTAssetURL$&gt;&quot; alt=&quot;&lt;$MTEntryTitle$&gt;&quot; /&gt;&lt;/MTTitleImgAsset&gt;&lt;/h2&gt;
&lt;!-- Sec Contents --&gt;
&lt;div class=&quot;sec_main&quot;&gt;
&lt;$MTEntryBody$&gt;
&lt;p class=&quot;sp_btback&quot;&gt;&lt;a href=&quot;javascript:history.back()&quot;&gt;戻る&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;!-- Sec Contents End --&gt;
&lt;/div&gt;
&lt;div class=&quot;left_contents&quot;&gt;
&lt;h4&gt;&lt;$MTEntryTitle$&gt;&lt;/h4&gt;
&lt;$mt:Include module=&quot;下層左パーツ&quot;$&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;ul class=&quot;sub_nav&quot;&gt;
&lt;li class=&quot;hd_menu01&quot;&gt;&lt;a href=&quot;/faq/index.html&quot;&gt;よくあるご質問&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;hd_menu02&quot;&gt;&lt;a href=&quot;/contact/index.html&quot;&gt;お問い合わせ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;!-- Container End --&gt;
&lt;$mt:Include module=&quot;フッター&quot;$&gt;
&lt;/div&gt;

&lt;$mt:Include module=&quot;測定タグ&quot;$&gt;
&lt;/body&gt;
&lt;/html&gt;</text></template>
<template id='78' blog_id='2' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606220601' identifier='template_618' modified_by='1' modified_on='20130122172843' name='下層ページ　外部読み込み' rebuild_me='0' type='custom' current_revision='10' cache_expire_type='0' include_with_ssi='0' revision='10'><text>&lt;link rel=&quot;alternate&quot; media=&quot;handheld&quot; type=&quot;text/html&quot; href=&quot;http://nichinare.com/m/&quot; /&gt;
&lt;!-- PC --&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/common/css/import.css&quot; media=&quot;only screen and (min-width: 911px)&quot; /&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/common/css/lightbox.css&quot; media=&quot;only screen and (min-width: 911px)&quot; /&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot;  href=&quot;/&lt;$MTFolderLabel$&gt;/css/style.css&quot; media=&quot;only screen and (min-width: 911px)&quot; /&gt;

&lt;!-- スマホ --&gt;
&lt;link href=&quot;/common/css/sp_base.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; media=&quot;only screen and (min-width: 0px) and (max-width: 640px)&quot; &gt;
&lt;link href=&quot;/common/css/sp_layout.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; media=&quot;only screen and (min-width: 0px) and (max-width: 640px)&quot; &gt;
&lt;link href=&quot;/&lt;$MTFolderLabel$&gt;/css/sp_style.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; media=&quot;only screen and (min-width: 0px) and (max-width: 640px)&quot; &gt;

&lt;!--[if IE ]&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/common/css/import.css&quot; media=&quot;all&quot; /&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/common/css/lightbox.css&quot; media=&quot;screen&quot; /&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot;  href=&quot;/&lt;$MTFolderLabel$&gt;/css/style.css&quot; media=&quot;all&quot; /&gt;
&lt;![endif]--&gt;

&lt;script src=&quot;/common/js/prototype.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;/common/js/scriptaculous.js?load=effects,builder&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;/common/js/lightbox.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;/common/js/setQueryParamNew.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;/common/js/mjl.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;/common/js/run.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;/common/js/ga.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;/head&gt;</text></template>
<template id='79' blog_id='2' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606220601' identifier='feed_recent' modified_by='1' modified_on='20110610135636' name='最新記事のフィード' outfile='rss.xml' rebuild_me='1' type='index' current_revision='1' cache_expire_type='0' include_with_ssi='0' revision='1'><text>&lt;$mt:HTTPContentType type=&quot;application/atom+xml&quot;$&gt;&lt;?xml version=&quot;1.0&quot; encoding=&quot;&lt;$mt:PublishCharset$&gt;&quot;?&gt;
&lt;feed xmlns=&quot;http://www.w3.org/2005/Atom&quot;&gt;
    &lt;title&gt;&lt;$mt:BlogName remove_html=&quot;1&quot; encode_xml=&quot;1&quot;$&gt;&lt;/title&gt;
    &lt;link rel=&quot;alternate&quot; type=&quot;text/html&quot; href=&quot;&lt;$mt:BlogURL encode_xml=&quot;1&quot;$&gt;&quot; /&gt;
    &lt;link rel=&quot;self&quot; type=&quot;application/atom+xml&quot; href=&quot;&lt;$mt:Link template=&quot;feed_recent&quot;$&gt;&quot; /&gt;
    &lt;id&gt;tag:&lt;$mt:BlogHost exclude_port=&quot;1&quot; encode_xml=&quot;1&quot;$&gt;,&lt;$mt:TemplateCreatedOn format=&quot;%Y-%m-%d&quot;$&gt;:&lt;$mt:BlogRelativeURL encode_xml=&quot;1&quot;$&gt;/&lt;$mt:BlogID$&gt;&lt;/id&gt;
    &lt;updated&gt;&lt;mt:Entries lastn=&quot;1&quot;&gt;&lt;$mt:EntryModifiedDate utc=&quot;1&quot; format=&quot;%Y-%m-%dT%H:%M:%SZ&quot;$&gt;&lt;/mt:Entries&gt;&lt;/updated&gt;
    &lt;mt:If tag=&quot;BlogDescription&quot;&gt;&lt;subtitle&gt;&lt;$mt:BlogDescription remove_html=&quot;1&quot; encode_xml=&quot;1&quot;$&gt;&lt;/subtitle&gt;&lt;/mt:If&gt;
    &lt;generator uri=&quot;http://www.sixapart.com/movabletype/&quot;&gt;&lt;$mt:ProductName version=&quot;1&quot;$&gt;&lt;/generator&gt;
&lt;mt:Entries include_blogs=&quot;children&quot; lastn=&quot;15&quot;&gt;
&lt;entry&gt;
    &lt;title&gt;&lt;$mt:EntryTitle remove_html=&quot;1&quot; encode_xml=&quot;1&quot;$&gt; - &lt;$mt:EntryBlogName$&gt;&lt;/title&gt;
    &lt;link rel=&quot;alternate&quot; type=&quot;text/html&quot; href=&quot;&lt;$mt:EntryPermalink encode_xml=&quot;1&quot;$&gt;&quot; /&gt;
    &lt;id&gt;&lt;$mt:EntryAtomID$&gt;&lt;/id&gt;

    &lt;published&gt;&lt;$mt:EntryDate utc=&quot;1&quot; format=&quot;%Y-%m-%dT%H:%M:%SZ&quot;$&gt;&lt;/published&gt;
    &lt;updated&gt;&lt;$mt:EntryModifiedDate utc=&quot;1&quot; format=&quot;%Y-%m-%dT%H:%M:%SZ&quot;$&gt;&lt;/updated&gt;

    &lt;summary&gt;&lt;$mt:EntryExcerpt remove_html=&quot;1&quot; encode_xml=&quot;1&quot;$&gt;&lt;/summary&gt;
    &lt;author&gt;
        &lt;name&gt;&lt;$mt:EntryAuthorDisplayName encode_xml=&quot;1&quot;$&gt;&lt;/name&gt;
        &lt;mt:If tag=&quot;EntryAuthorURL&quot;&gt;&lt;uri&gt;&lt;$mt:EntryAuthorURL encode_xml=&quot;1&quot;$&gt;&lt;/uri&gt;&lt;/mt:If&gt;
    &lt;/author&gt;
    &lt;mt:EntryCategories&gt;
        &lt;category term=&quot;&lt;$mt:CategoryLabel encode_xml=&quot;1&quot;$&gt;&quot; scheme=&quot;http://www.sixapart.com/ns/types#category&quot; /&gt;
    &lt;/mt:EntryCategories&gt;
    &lt;mt:EntryIfTagged&gt;&lt;mt:EntryTags&gt;&lt;category term=&quot;&lt;$mt:TagName normalize=&quot;1&quot; encode_xml=&quot;1&quot;$&gt;&quot; label=&quot;&lt;$mt:TagName encode_xml=&quot;1&quot;$&gt;&quot; scheme=&quot;http://www.sixapart.com/ns/types#tag&quot; /&gt;
    &lt;/mt:EntryTags&gt;&lt;/mt:EntryIfTagged&gt;
    &lt;content type=&quot;html&quot; xml:lang=&quot;&lt;$mt:BlogLanguage ietf=&quot;1&quot;$&gt;&quot; xml:base=&quot;&lt;$mt:BlogURL encode_xml=&quot;1&quot;$&gt;&quot;&gt;
        &lt;$mt:EntryBody encode_xml=&quot;1&quot;$&gt;
        &lt;$mt:EntryMore encode_xml=&quot;1&quot;$&gt;
    &lt;/content&gt;
&lt;/entry&gt;
&lt;/mt:Entries&gt;
&lt;/feed&gt;
</text></template>
<template id='80' blog_id='2' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606220601' identifier='comment_response' modified_on='20110606220601' name='コメント完了' rebuild_me='1' type='comment_response' current_revision='0'><text>
&lt;$mt:Var name=&quot;page_layout&quot; value=&quot;layout-wm&quot;$&gt;
&lt;mt:If name=&quot;comment_confirmation&quot;&gt;
    &lt;$mt:Var name=&quot;page_title&quot; value=&quot;確認&quot;$&gt;
    &lt;$mt:Var name=&quot;message&quot; value=&quot;&lt;p&gt;コメントを投稿しました。&lt;/p&gt;&quot;$&gt;
&lt;mt:Else name=&quot;comment_pending&quot;&gt;
    &lt;$mt:Var name=&quot;page_title&quot; value=&quot;コメントありがとうございます。&quot;$&gt;
    &lt;$mt:Var name=&quot;message&quot; value=&quot;&lt;p&gt;コメントは現在承認されるまで公開を保留されています。&lt;/p&gt;&quot;$&gt;
&lt;mt:Else name=&quot;comment_error&quot;&gt;
    &lt;$mt:Var name=&quot;page_title&quot; value=&quot;コメント投稿エラー&quot;$&gt;
    &lt;mt:SetVarBlock name=&quot;message&quot;&gt;&lt;p&gt;コメントを投稿できませんでした。エラー: &lt;$mt:ErrorMessage$&gt;&lt;/p&gt;&lt;/mt:SetVarBlock&gt;
&lt;/mt:If&gt;
&lt;mt:SetVarBlock name=&quot;title&quot;&gt;&lt;$mt:BlogName encode_html=&quot;1&quot;$&gt;: &lt;$mt:Var name=&quot;page_title&quot;$&gt;&lt;/mt:SetVarBlock&gt;
&lt;mt:SetVarBlock name=&quot;html_head&quot;&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
    /* &lt;![CDATA[ */
    var user = &lt;$mt:UserSessionState$&gt;;
    var is_preview = true;
    /* ]]&gt; */
    &lt;/script&gt;
&lt;/mt:SetVarBlock&gt;

&lt;$mt:Include module=&quot;ヘッダー&quot;$&gt;

&lt;h1 id=&quot;page-title&quot;&gt;&lt;$mt:Var name=&quot;page_title&quot;$&gt;&lt;/h1&gt;
&lt;$mt:Var name=&quot;message&quot;$&gt;
&lt;p&gt;&lt;a href=&quot;&lt;mt:If name=&quot;comment_error&quot;&gt;javascript:history.back()&lt;mt:Else&gt;&lt;$mt:EntryLink$&gt;&lt;/mt:If&gt;&quot;&gt;元の記事&lt;/a&gt;に戻る&lt;/p&gt;

&lt;$mt:Include module=&quot;フッター&quot;$&gt;

</text></template>
<template id='81' blog_id='2' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606220601' identifier='main_index' modified_by='1' modified_on='20140613155142' name='メインページ' outfile='index.html' rebuild_me='1' type='index' current_revision='69' cache_expire_type='0' include_with_ssi='0' revision='69'><text>&lt;$mt:Include module=&quot;DOCTYPE&quot;$&gt;
&lt;title&gt;声優・ナレーターの養成所【日本ナレーション演技研究所】&lt;/title&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;common/css/lightbox.css&quot; media=&quot;screen&quot; /&gt;
&lt;link rel=&quot;alternate&quot; type=&quot;application/rss+xml&quot; title=&quot;RSS&quot; href=&quot;rss.xml&quot;&gt;
&lt;link rel=&quot;canonical&quot; href=&quot;http://nichinare.com/&quot; /&gt;
&lt;$mt:Include module=&quot;外部ファイル読み込み&quot;$&gt;

&lt;body onload=&quot;addLinkURL(&apos;code&apos;);return false;&quot;&gt;
&lt;a name=&quot;pagetop&quot; id=&quot;pagetop&quot;&gt;&lt;/a&gt;
&lt;div id=&quot;wrapper&quot;&gt;
&lt;$mt:Include module=&quot;ヘッダー&quot;$&gt;
&lt;!-- Flash --&gt;
&lt;div class=&quot;flash_area&quot;&gt;
&lt;div id=&quot;ad_spac&quot;&gt;
&lt;p&gt;&lt;img src=&quot;images/flash_img.jpg&quot; width=&quot;937&quot; height=&quot;340&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot;&gt; var so = new SWFObject(&quot;index.swf&quot;, &quot;ad_space&quot;, &quot;937&quot;, &quot;340&quot;, &quot;9&quot;, &quot;#ffffff&quot;); so.addParam(&quot;wmode&quot;, &quot;transparent&quot;); so.write(&quot;ad_spac&quot;); &lt;/script&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;!-- Flash End --&gt;
&lt;mt:Entries lastn=&quot;1&quot; blog_ids=&quot;8&quot;&gt;
&lt;div class=&quot;emergency normal&quot;&gt;&lt;$MTEntryBody$&gt;&lt;/div&gt;
&lt;/mt:Entries&gt;
&lt;!-- Top Main --&gt;
&lt;div class=&quot;top_main&quot;&gt;
&lt;div class=&quot;left_contents&quot;&gt;
&lt;div class=&quot;column&quot;&gt;
&lt;ul class=&quot;menu01 roll&quot;&gt;
&lt;li&gt;&lt;a href=&quot;course/index.html&quot;&gt;&lt;img src=&quot;images/top_menu01.jpg&quot; width=&quot;182&quot; height=&quot;60&quot; alt=&quot;週1回クラス&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;course/threedays.html&quot;&gt;&lt;img src=&quot;images/top_menu02.jpg&quot; width=&quot;182&quot; height=&quot;60&quot; alt=&quot;週3回クラス&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;course/jr.html&quot;&gt;&lt;img src=&quot;images/top_menu03.jpg&quot; width=&quot;182&quot; height=&quot;60&quot; alt=&quot;ジュニア声優クラス&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&quot;menu02 roll&quot;&gt;
&lt;li&gt;&lt;a href=&quot;course/narrater.html&quot;&gt;&lt;img src=&quot;images/top_menu04.gif&quot; width=&quot;182&quot; height=&quot;29&quot; alt=&quot;ナレーターセミナー&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;course/starting.html&quot;&gt;&lt;img src=&quot;images/top_menu05.gif&quot; width=&quot;182&quot; height=&quot;29&quot; alt=&quot;声優スターティングセミナー&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div class=&quot;column_area&quot;&gt;

&lt;div class=&quot;column_left&quot;&gt;

&lt;div class=&quot;column_list&quot;&gt;

&lt;p class=&quot;bt_news&quot;&gt;&lt;a href=&quot;news/index.html&quot;&gt;&lt;img src=&quot;images/bt_news.gif&quot; width=&quot;73&quot; height=&quot;19&quot; alt=&quot;一覧はこちら&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;bt_rss&quot;&gt;&lt;a href=&quot;rss.xml&quot;&gt;&lt;img src=&quot;images/bt_rss.gif&quot; width=&quot;49&quot; height=&quot;19&quot; alt=&quot;RSS&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;mt:SetVarBlock name=&quot;today&quot;&gt;&lt;$mt:Date format=&quot;%Y%j&quot;%&gt;&lt;/mt:SetVarBlock&gt;
&lt;dl class=&quot;normal&quot;&gt;
&lt;dt&gt;最新情報&lt;/dt&gt;
&lt;mt:Entries lastn=&quot;5&quot; blog_ids=&quot;3&quot;&gt;
&lt;dd&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;$mt:EntryDate format=&quot;%x&quot;$&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;mtifnonempty tag=&quot;urldata&quot;&gt;  
&lt;a href=&quot;&lt;mt:urldata&gt;&quot;&gt;&lt;$MTEntryTitle$&gt;&lt;/a&gt;&lt;mt:SetVarBlock name=&quot;passed&quot;&gt;&lt;$mt:EntryDate format=&quot;%Y%j&quot;%&gt;&lt;/mt:SetVarBlock&gt;
&lt;mt:SetVar name=&quot;passed&quot; value=&quot;$today&quot; op=&quot;sub&quot;&gt;&lt;mt:If name=&quot;passed&quot; ge=&quot;-5&quot;&gt;&lt;img src=&quot;common/images/icon_new.gif&quot; width=&quot;39&quot; height=&quot;14&quot; alt=&quot;NEW!&quot; /&gt;
&lt;/mt:If&gt;&lt;mt:If name=&quot;passed&quot; ge=&quot;-640&quot;&gt;&lt;mt:If name=&quot;passed&quot; le=&quot;-635&quot;&gt;&lt;img src=&quot;common/images/icon_new.gif&quot; width=&quot;39&quot; height=&quot;14&quot; alt=&quot;NEW!&quot; /&gt;
&lt;/mt:If&gt;&lt;/mt:If&gt;
&lt;mtelse&gt;  
&lt;a href=&quot;&lt;mt:EntryPermalink archive_type=&quot;Individual&quot;&gt;&quot;&gt;&lt;$mt:EntryTitle$&gt;&lt;/a&gt;&lt;mt:SetVarBlock name=&quot;passed&quot;&gt;&lt;$mt:EntryDate format=&quot;%Y%j&quot;%&gt;&lt;/mt:SetVarBlock&gt;
&lt;mt:SetVar name=&quot;passed&quot; value=&quot;$today&quot; op=&quot;sub&quot;&gt;&lt;mt:If name=&quot;passed&quot; ge=&quot;-5&quot;&gt;&lt;img src=&quot;common/images/icon_new.gif&quot; width=&quot;39&quot; height=&quot;14&quot; alt=&quot;NEW!&quot; /&gt;
&lt;/mt:If&gt;&lt;mt:If name=&quot;passed&quot; ge=&quot;-640&quot;&gt;&lt;mt:If name=&quot;passed&quot; le=&quot;-635&quot;&gt;&lt;img src=&quot;common/images/icon_new.gif&quot; width=&quot;39&quot; height=&quot;14&quot; alt=&quot;NEW!&quot; /&gt;
&lt;/mt:If&gt;&lt;/mt:If&gt;
&lt;/mtelse&gt;  
&lt;/mtifnonempty&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/dd&gt;
&lt;/mt:Entries&gt;
&lt;/dl&gt;
&lt;/div&gt;

&lt;div class=&quot;column_text&quot;&gt;
&lt;dl class=&quot;normal&quot;&gt;
&lt;dt&gt;声優をめざすあなたへ&lt;/dt&gt;
&lt;dd&gt;
&lt;mt:SetVarBlock name=&quot;today&quot;&gt;&lt;$mt:Date format=&quot;%Y%j&quot;%&gt;&lt;/mt:SetVarBlock&gt;
&lt;mt:Entries lastn=&quot;1&quot; blog_ids=&quot;11&quot;&gt;
&lt;p&gt;&lt;$MTEntryBody$&gt;&lt;/p&gt;
&lt;/mt:Entries&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;ul class=&quot;bnr_list roll&quot;&gt;
&lt;li&gt;&lt;a href=&quot;https://nichinare.com/request/form.cgi&quot;&gt;&lt;img src=&quot;images/top_bnr01.jpg&quot; width=&quot;182&quot; height=&quot;109&quot; alt=&quot;資料請求&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;about/lecturer.html&quot;&gt;&lt;img src=&quot;images/top_bnr03.jpg&quot; width=&quot;182&quot; height=&quot;45&quot; alt=&quot;講師一覧&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;common/images/hpqr_l.jpg&quot; rel=&quot;lightbox&quot;&gt;&lt;img src=&quot;images/top_bnr04.gif&quot; width=&quot;183&quot; height=&quot;57&quot; alt=&quot;スマートフォン・ モバイルサイト のご案内&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;roll&quot;&gt;&lt;a href=&quot;http://www.vap.co.jp/gokukoku/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;images/top_bnrsp07.jpg&quot; width=&quot;182&quot; height=&quot;57&quot; alt=&quot;極黒のブリュンヒルデ&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;roll&quot;&gt;&lt;a href=&quot;http://www.vap.co.jp/nobunagun/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;images/top_bnrsp05.jpg&quot; width=&quot;182&quot; height=&quot;57&quot; alt=&quot;ノブナガン&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;roll&quot;&gt;&lt;a href=&quot;http://watamote.jp/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;images/top_bnrsp03.jpg&quot; width=&quot;182&quot; height=&quot;57&quot; alt=&quot;私がモテないのはどう考えてもお前らが悪い！&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;roll&quot;&gt;&lt;a href=&quot;http://www.anime-tv.co.jp/anibun/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;images/top_bnrsp02.jpg&quot; width=&quot;182&quot; height=&quot;57&quot; alt=&quot;あにぶん&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;div class=&quot;right_contents&quot;&gt;
&lt;div class=&quot;boader_column&quot;&gt;
&lt;div class=&quot;column&quot;&gt;
&lt;p class=&quot;roll&quot;&gt;&lt;a href=&quot;about/native.html&quot;&gt;&lt;img src=&quot;images/top_bnr05.jpg&quot; width=&quot;170&quot; height=&quot;60&quot; alt=&quot;主な出身者&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;dl class=&quot;roll&quot;&gt;
&lt;dt&gt;グループプロダクション&lt;/dt&gt;
&lt;dd&gt;&lt;a href=&quot;http://www.artsvision.co.jp/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;images/top_group01.gif&quot; width=&quot;157&quot; height=&quot;31&quot; alt=&quot;株式会社アーツビジョン&quot; /&gt;&lt;/a&gt;&lt;/dd&gt;
&lt;dd&gt;&lt;a href=&quot;http://www.imenterprise.jp/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;images/top_group02.gif&quot; width=&quot;157&quot; height=&quot;31&quot; alt=&quot;株式会社アイムエンタープライズ&quot; /&gt;&lt;/a&gt;&lt;/dd&gt;
&lt;dd&gt;&lt;a href=&quot;http://www.crazy-box.co.jp/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;images/top_group03.gif&quot; width=&quot;157&quot; height=&quot;31&quot; alt=&quot;株式会社クレイジーボックス&quot; /&gt;&lt;/a&gt;&lt;/dd&gt;
&lt;dd&gt;&lt;a href=&quot;http://www.vims.co.jp/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;images/top_group04.gif&quot; width=&quot;157&quot; height=&quot;31&quot; alt=&quot;株式会社ヴィムス&quot; /&gt;&lt;/a&gt;&lt;/dd&gt;
&lt;dd&gt;&lt;a href=&quot;http://www1a.biglobe.ne.jp/mio/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;images/top_group05.gif&quot; width=&quot;157&quot; height=&quot;31&quot; alt=&quot;澪クリエーション&quot; /&gt;&lt;/a&gt;&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p class=&quot;sp_bnr roll&quot;&gt;&lt;a href=&quot;http://sabagebu.com/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;images/top_bnrsp08.jpg&quot; width=&quot;182&quot; height=&quot;57&quot; alt=&quot;さばげぶっ！&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;sp_bnr roll&quot;&gt;&lt;a href=&quot;http://www.akuma-riddle.com/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;images/top_bnrsp06.jpg&quot; width=&quot;182&quot; height=&quot;57&quot; alt=&quot;悪魔のリドル&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;sp_bnr roll&quot;&gt;&lt;a href=&quot;http://koiuta.tv/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;images/top_bnrsp04.jpg&quot; width=&quot;182&quot; height=&quot;57&quot; alt=&quot;とある飛空士への恋歌&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;sp_bnr roll&quot;&gt;&lt;a href=&quot;http://arata-anime.com/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;images/top_bnrsp01.jpg&quot; width=&quot;182&quot; height=&quot;57&quot; alt=&quot;『アラタカンガタリ ?革神語?』アニメ スペシャルサイト&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;!-- Top Main End --&gt;
&lt;$mt:Include module=&quot;フッター&quot;$&gt;
&lt;/div&gt;

&lt;$mt:Include module=&quot;測定タグ&quot;$&gt;
&lt;/body&gt;
&lt;/html&gt;</text></template>
<template id='82' blog_id='3' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606221545' identifier='comment_preview' modified_on='20110606221545' name='コメントプレビュー' rebuild_me='1' type='comment_preview' current_revision='0'><text>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;
    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; id=&quot;sixapart-standard&quot;&gt;
&lt;head&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
    /* &lt;![CDATA[ */
    var user = &lt;$mt:UserSessionState$&gt;;
    var is_preview = true;
    /* ]]&gt; */
    &lt;/script&gt;
    &lt;$mt:Include module=&quot;HTMLヘッダー&quot;$&gt;
    &lt;title&gt;&lt;$mt:BlogName encode_html=&quot;1&quot;$&gt;: コメントのプレビュー&lt;/title&gt;
&lt;/head&gt;
&lt;body id=&quot;&lt;$mt:BlogThemeID$&gt;&quot; class=&quot;mt-comment-preview &lt;$mt:Var name=&quot;page_layout&quot;$&gt;&quot; onload=&quot;mtEntryOnLoad()&quot; onunload=&quot;mtEntryOnUnload()&quot;&gt;
    &lt;div id=&quot;container&quot;&gt;
        &lt;div id=&quot;container-inner&quot;&gt;


            &lt;$mt:Include module=&quot;バナーヘッダー&quot;$&gt;


            &lt;div id=&quot;content&quot;&gt;
                &lt;div id=&quot;content-inner&quot;&gt;


                    &lt;div id=&quot;alpha&quot;&gt;
                        &lt;div id=&quot;alpha-inner&quot;&gt;


                            &lt;h1 id=&quot;page-title&quot;&gt;&lt;$mt:Var name=&quot;page_title&quot;$&gt;&lt;/h1&gt;


&lt;mt:Ignore&gt;&lt;!-- Comment Preview --&gt;&lt;/mt:Ignore&gt;
                            &lt;div class=&quot;comment&quot; id=&quot;comment-&lt;$mt:CommentID$&gt;&quot;&gt;
                                &lt;div class=&quot;inner&quot;&gt;
                                    &lt;div class=&quot;comment-header&quot;&gt;
                                        &lt;div class=&quot;asset-meta&quot;&gt;
                                            &lt;span class=&quot;byline&quot;&gt;
                                                &lt;$mt:CommentAuthorIdentity$&gt;
    &lt;mt:IfCommentParent&gt;
                                                &lt;span class=&quot;vcard author&quot;&gt;&lt;$mt:CommentAuthorLink$&gt;&lt;/span&gt;から&lt;a href=&quot;&lt;mt:CommentParent&gt;&lt;$mt:CommentLink$&gt;&lt;/mt:CommentParent&gt;&quot;&gt;&lt;mt:CommentParent&gt;&lt;$mt:CommentAuthor$&gt;&lt;/mt:CommentParent&gt;&lt;/a&gt;への返信
    &lt;mt:Else&gt;
                                                &lt;span class=&quot;vcard author&quot;&gt;&lt;$mt:CommentAuthorLink$&gt;&lt;/span&gt;
    &lt;/mt:IfCommentParent&gt;
                                                | &lt;a href=&quot;&lt;$mt:CommentLink$&gt;&quot;&gt;&lt;abbr class=&quot;published&quot; title=&quot;&lt;$mt:CommentDate format_name=&quot;iso8601&quot;$&gt;&quot;&gt;&lt;$mt:CommentDate$&gt;&lt;/abbr&gt;&lt;/a&gt;
                                            &lt;/span&gt;
                                        &lt;/div&gt;
                                    &lt;/div&gt;
                                    &lt;div class=&quot;comment-content&quot;&gt;
                                        &lt;$mt:CommentBody$&gt;
                                    &lt;/div&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;


&lt;mt:Ignore&gt;&lt;!-- Comment Form --&gt;&lt;/mt:Ignore&gt;
                            &lt;div class=&quot;comments-open&quot; id=&quot;comments-open&quot;&gt;
                                &lt;h2 class=&quot;comments-open-header&quot;&gt;コメントする&lt;/h2&gt;
                                &lt;div class=&quot;comments-open-content&quot;&gt;
                                    &lt;div id=&quot;comment-greeting&quot;&gt;&lt;/div&gt;
                                    &lt;form method=&quot;post&quot; action=&quot;&lt;$mt:CGIPath$&gt;&lt;$mt:CommentScript$&gt;&quot; name=&quot;comments_form&quot; id=&quot;comments-form&quot; onsubmit=&quot;return mtCommentOnSubmit(this)&quot;&gt;
                                        &lt;input type=&quot;hidden&quot; name=&quot;static&quot; value=&quot;1&quot; /&gt;
                                        &lt;input type=&quot;hidden&quot; name=&quot;armor&quot; value=&quot;1&quot; /&gt;
                                        &lt;input type=&quot;hidden&quot; name=&quot;preview&quot; value=&quot;&quot; /&gt;
                                        &lt;input type=&quot;hidden&quot; name=&quot;entry_id&quot; value=&quot;&lt;$mt:EntryID$&gt;&quot; /&gt;
                                        &lt;input type=&quot;hidden&quot; name=&quot;__lang&quot; value=&quot;&lt;$mt:BlogLanguage$&gt;&quot; /&gt;
&lt;mt:IfCommentParent&gt;
                                            &lt;input type=&quot;hidden&quot; name=&quot;parent_id&quot; value=&quot;&lt;$mt:CommentParentID escape=&quot;html&quot;$&gt;&quot; id=&quot;comment-parent-id&quot;&gt;
&lt;/mt:IfCommentParent&gt;
                                        &lt;div id=&quot;comments-open-data&quot;&gt;
                                            &lt;div id=&quot;comment-form-name&quot;&gt;
                                                &lt;label for=&quot;comment-author&quot;&gt;名前&lt;/label&gt;
                                                &lt;input id=&quot;comment-author&quot; name=&quot;author&quot; size=&quot;30&quot; value=&quot;&lt;$mt:CommentAuthor encode_html=&quot;1&quot;$&gt;&quot; onfocus=&quot;mtShowCaptcha()&quot; /&gt;
                                            &lt;/div&gt;
                                            &lt;div id=&quot;comment-form-email&quot;&gt;
                                                &lt;label for=&quot;comment-email&quot;&gt;電子メール&lt;/label&gt;
                                                &lt;input id=&quot;comment-email&quot; name=&quot;email&quot; size=&quot;30&quot; value=&quot;&lt;$mt:CommentEmail encode_html=&quot;1&quot;$&gt;&quot; onfocus=&quot;mtShowCaptcha()&quot; /&gt;
                                            &lt;/div&gt;
                                            &lt;div id=&quot;comment-form-url&quot;&gt;
                                                &lt;label for=&quot;comment-url&quot;&gt;URL&lt;/label&gt;
                                                &lt;input id=&quot;comment-url&quot; name=&quot;url&quot; size=&quot;30&quot; value=&quot;&lt;$mt:CommentURL encode_html=&quot;1&quot;$&gt;&quot; onfocus=&quot;mtShowCaptcha()&quot; /&gt;
                                            &lt;/div&gt;
                                        &lt;/div&gt;
&lt;mt:IfCommentParent&gt;
                                        &lt;div id=&quot;comment-form-reply&quot;&gt;
                                            &lt;input type=&quot;checkbox&quot; id=&quot;comment-reply&quot; name=&quot;comment_reply&quot; value=&quot;&lt;$mt:CommentParentID escape=&quot;html&quot;$&gt;&quot; checked=&quot;checked&quot; onclick=&quot;mtSetCommentParentID()&quot; /&gt;
                                            &lt;label for=&quot;comment-reply&quot; id=&quot;comment-reply-label&quot;&gt;&lt;mt:CommentParent&gt;&lt;$mt:CommentAuthor$&gt;&lt;/mt:CommentParent&gt;からのコメントに返信&lt;/label&gt;
                                        &lt;/div&gt;
&lt;/mt:IfCommentParent&gt;
                                        &lt;div id=&quot;comments-open-text&quot;&gt;
                                            &lt;label for=&quot;comment-text&quot;&gt;コメント &lt;mt:IfAllowCommentHTML&gt;(スタイル用のHTMLタグを使えます)&lt;/mt:IfAllowCommentHTML&gt;&lt;/label&gt;
                                            &lt;textarea id=&quot;comment-text&quot; name=&quot;text&quot; rows=&quot;15&quot; cols=&quot;50&quot; onfocus=&quot;mtShowCaptcha()&quot;&gt;&lt;$mt:CommentBody autolink=&quot;0&quot; sanitize=&quot;0&quot; convert_breaks=&quot;0&quot; encode_html=&quot;1&quot;$&gt;&lt;/textarea&gt;
                                        &lt;/div&gt;
                                        &lt;div id=&quot;comments-open-captcha&quot;&gt;&lt;/div&gt;
                                        &lt;div id=&quot;comments-open-footer&quot;&gt;
                                            &lt;input type=&quot;submit&quot; accesskey=&quot;v&quot; name=&quot;preview_button&quot; id=&quot;comment-preview&quot; value=&quot;プレビュー&quot; onclick=&quot;this.form.preview.value=&apos;1&apos;;&quot; /&gt;
                                            &lt;input type=&quot;submit&quot; accesskey=&quot;s&quot; name=&quot;post&quot; id=&quot;comment-submit&quot; value=&quot;投稿&quot; /&gt;
                                            &lt;input type=&quot;button&quot; name=&quot;cancel&quot; id=&quot;comment-cancel&quot; value=&quot;キャンセル&quot; onclick=&quot;window.location=&apos;&lt;$mt:EntryPermalink$&gt;&apos;&quot; /&gt;
                                        &lt;/div&gt;
                                    &lt;/form&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;


                    &lt;$mt:Include module=&quot;サイドバー&quot;$&gt;


                &lt;/div&gt;
            &lt;/div&gt;


            &lt;$mt:Include module=&quot;バナーフッター&quot;$&gt;


        &lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</text></template>
<template id='83' blog_id='3' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606221545' identifier='monthly_archive_list' modified_by='1' modified_on='20110606235226' name='月別アーカイブ' rebuild_me='0' type='widget' current_revision='1' cache_expire_type='0' include_with_ssi='0' revision='1'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Monthly&quot;&gt;
&lt;mt:ArchiveList archive_type=&quot;Monthly&quot;&gt;&lt;mt:ArchiveListHeader&gt;&lt;div class=&quot;bg_local_menu&quot;&gt;
&lt;ul class=&quot;local_menu normal&quot;&gt;
&lt;/mt:ArchiveListHeader&gt;&lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt;&lt;/a&gt;&lt;/li&gt;&lt;mt:ArchiveListFooter&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/mt:ArchiveListFooter&gt;&lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;</text></template>
<template id='84' blog_id='3' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606221545' identifier='popup_image' modified_on='20110606221545' name='ポップアップ画像' rebuild_me='1' type='popup_image' current_revision='0'><text>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; id=&quot;sixapart-standard&quot;&gt;
&lt;head&gt;&lt;title&gt;&lt;$mt:ImageURL$&gt;&lt;/title&gt;&lt;/head&gt;
&lt;body id=&quot;uploaded-image-popup&quot; class=&quot;popup&quot; style=&quot;margin: 0;padding: 0;&quot;&gt;
    &lt;img src=&quot;&lt;$mt:ImageURL$&gt;&quot; width=&quot;&lt;$mt:ImageWidth$&gt;&quot; height=&quot;&lt;$mt:ImageHeight$&gt;&quot; alt=&quot;&lt;$mt:ImageURL$&gt;&quot; style=&quot;margin: 0;padding: 0;border: 0;&quot; /&gt;
&lt;/body&gt;
&lt;/html&gt;
</text></template>
<template id='85' blog_id='3' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606221545' identifier='search_results' modified_on='20110606221545' name='検索結果' rebuild_me='1' type='search_results' current_revision='0'><text>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;
    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; id=&quot;sixapart-standard&quot;&gt;
&lt;head&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
    /* &lt;![CDATA[ */
    var user = &lt;$mt:UserSessionState$&gt;;
    /* ]]&gt; */
    &lt;/script&gt;
    &lt;$mt:Include module=&quot;HTMLヘッダー&quot;$&gt;
    &lt;title&gt;&lt;$mt:BlogName encode_html=&quot;1&quot;$&gt;: 検索結果&lt;/title&gt;
    &lt;mt:Ignore&gt;Below Javascript adds ajax search capability&lt;/mt:Ignore&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
    /* &lt;![CDATA[ */
    &lt;mt:IfMoreResults&gt;
    function getResults(page) {
        page = parseInt(page);
        if (timer) window.clearTimeout(timer);
        var xh = mtGetXmlHttp();
        if (!xh) return false;
        var res = results[page];
        if (!res) return;
        var url = res[&apos;next_url&apos;];
        if (!url) return;

        xh.open(&apos;GET&apos;, url + &apos;&amp;format=js&apos;, true);
        xh.onreadystatechange = function() {
            if ( xh.readyState == 4 ) {
                if ( xh.status &amp;&amp; ( xh.status != 200 ) ) {
                    // error - ignore
                } else {
                    try {
                        var page_results = eval(&quot;(&quot; + xh.responseText + &quot;)&quot;);
                        if ( page_results[&apos;error&apos;] == null )
                            results[page + 1] = page_results[&apos;result&apos;];
                    } catch (e) {
                    }
                }
            }
        };
        xh.send(null);
    }

    function swapContent(direction) {
        if ( direction == undefined ) direction = 1;
        var page_span = document.getElementById(&apos;current-page&apos;);
        if (!page_span) return true;
        var next_page = direction + parseInt(page_span.innerHTML);
        var res = results[next_page];
        if (!res) return true;
        var content = res[&apos;content&apos;];
        if (!content) return true;
        var div = document.getElementById(&apos;search-results&apos;);
        if (!div) return true;
        div.innerHTML = content;
        timer = window.setTimeout(&quot;getResults(&quot; + next_page + &quot;)&quot;, 1*1000);
        window.scroll(0, 0);
        return false;
    }
    &lt;mt:Else&gt;&lt;mt:IfPreviousResults&gt;
    function swapContent(direction) {
        return true;
    }&lt;/mt:IfPreviousResults&gt;
    &lt;/mt:IfMoreResults&gt;
    /* ]]&gt; */
    &lt;/script&gt;
&lt;/head&gt;
&lt;body id=&quot;&lt;$mt:BlogThemeID$&gt;&quot; class=&quot;mt-search-results &lt;$mt:Var name=&quot;page_layout&quot;$&gt;&quot;&gt;
    &lt;div id=&quot;container&quot;&gt;
        &lt;div id=&quot;container-inner&quot;&gt;


            &lt;$mt:Include module=&quot;バナーヘッダー&quot;$&gt;


            &lt;div id=&quot;content&quot;&gt;
                &lt;div id=&quot;content-inner&quot;&gt;


                    &lt;div id=&quot;alpha&quot;&gt;
                        &lt;div id=&quot;alpha-inner&quot;&gt;

&lt;mt:Ignore&gt;&lt;!--
    Below is the block to show search results.
    This makes an independent block to support
    Ajax-based background retrieval of the next search results.
--&gt;&lt;/mt:Ignore&gt;
&lt;mt:SetVarTemplate id=&quot;search_results&quot; name=&quot;search_results&quot;&gt;  
&lt;mt:SearchResults&gt;
    &lt;mt:SearchResultsHeader&gt;
                            &lt;div id=&quot;search-results&quot;&gt;
                                &lt;span id=&quot;current-page&quot; class=&quot;hidden&quot;&gt;&lt;$mt:CurrentPage$&gt;&lt;/span&gt;
                                &lt;h1 id=&quot;page-title&quot; class=&quot;search-results-header&quot;&gt;
        &lt;mt:IfStraightSearch&gt;
                                    「&lt;$mt:SearchString$&gt;」と一致するもの
        &lt;/mt:IfStraightSearch&gt;
        &lt;mt:IfTagSearch&gt;
                                    タグ「&lt;$mt:SearchString$&gt;」が付けられているもの
        &lt;/mt:IfTagSearch&gt;
                                &lt;/h1&gt;
                                &lt;div class=&quot;search-results-container autopagerize_page_element&quot;&gt;
    &lt;/mt:SearchResultsHeader&gt;
                                    &lt;$mt:Include module=&quot;ブログ記事の概要&quot; hide_counts=&quot;1&quot;$&gt;
    &lt;mt:SearchResultsFooter&gt;
                                &lt;/div&gt;&lt;div class=&quot;autopagerize_insert_before&quot;&gt;&lt;/div&gt;

    &lt;mt:Ignore&gt;&lt;!-- Used with the ajax search capability of the new search class --&gt;&lt;/mt:Ignore&gt;
                                &lt;div class=&quot;content-nav&quot;&gt;
                                    &lt;mt:IfPreviousResults&gt;&lt;a href=&quot;&lt;$mt:PreviousLink$&gt;&quot; rel=&quot;prev&quot; onclick=&quot;return swapContent(-1);&quot;&gt;&amp;lt; 前&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;/mt:IfPreviousResults&gt;&lt;mt:PagerBlock&gt;&lt;mt:IfCurrentPage&gt;&lt;$mt:Var name=&quot;__value__&quot;$&gt;&lt;mt:Else&gt;&lt;a href=&quot;&lt;$mt:PagerLink$&gt;&quot;&gt;&lt;$mt:Var name=&quot;__value__&quot;$&gt;&lt;/a&gt;&lt;/mt:IfCurrentPage&gt;&lt;mt:Unless name=&quot;__last__&quot;&gt;&amp;nbsp;&lt;/mt:Unless&gt;&lt;/mt:PagerBlock&gt;&lt;mt:IfMoreResults&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;&lt;$mt:NextLink$&gt;&quot; rel=&quot;next&quot; onclick=&quot;return swapContent();&quot;&gt;次 &amp;gt;&lt;/a&gt;&lt;/mt:IfMoreResults&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;
    &lt;/mt:SearchResultsFooter&gt;
&lt;/mt:SearchResults&gt;
&lt;/mt:SetVarTemplate&gt;
&lt;mt:Ignore&gt;&lt;!-- Display search results constructed in the block above --&gt;&lt;/mt:Ignore&gt;
&lt;$mt:Var name=&quot;search_results&quot;$&gt;


&lt;mt:Ignore&gt;&lt;!-- Display no results message --&gt;&lt;/mt:Ignore&gt;
&lt;mt:NoSearchResults&gt;
                            &lt;h1 id=&quot;page-title&quot; class=&quot;search-results-header&quot;&gt;
    &lt;mt:IfStraightSearch&gt;
                                「&lt;$mt:SearchString$&gt;」と一致するもの
    &lt;/mt:IfStraightSearch&gt;
    &lt;mt:IfTagSearch&gt;
                                タグ「&lt;$mt:SearchString$&gt;」が付けられているもの
    &lt;/mt:IfTagSearch&gt;
                            &lt;/h1&gt;
                            &lt;p&gt;「&lt;$mt:SearchString$&gt;」と一致する結果は見つかりませんでした。&lt;/p&gt;
&lt;/mt:NoSearchResults&gt;


&lt;mt:Ignore&gt;&lt;!-- Display instructions for searching if search script was accessed without a query --&gt;&lt;/mt:Ignore&gt;
&lt;mt:NoSearch&gt;
                            &lt;h1 id=&quot;page-title&quot; class=&quot;search-results-header&quot;&gt;例&lt;/h1&gt;
                            &lt;p&gt;すべての単語が順序に関係なく検索されます。フレーズで検索したいときは引用符で囲んでください。&lt;/p&gt;
                            &lt;blockquote&gt;
                                &lt;p&gt;&lt;code&gt;&quot;movable type&quot;&lt;/code&gt;&lt;/p&gt;
                            &lt;/blockquote&gt;
                            &lt;p&gt;AND、OR、NOTを入れることで論理検索を行うこともできます。&lt;/p&gt;
                            &lt;blockquote&gt;
                                &lt;p&gt;&lt;code&gt;個人 OR 出版&lt;/code&gt;&lt;/p&gt;
                                &lt;p&gt;&lt;code&gt;個人 NOT 出版&lt;/code&gt;&lt;/p&gt;
                            &lt;/blockquote&gt;
&lt;/mt:NoSearch&gt;

&lt;mt:Ignore&gt;&lt;!-- Used with the ajax search capability of the new search class --&gt;&lt;/mt:Ignore&gt;
&lt;mt:IfMoreResults&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
&lt;!--
var div = document.getElementById(&apos;search-results&apos;);
var results = {
    &apos;&lt;$mt:CurrentPage$&gt;&apos;: {
        &apos;content&apos;: div.innerHTML,
        &apos;next_url&apos;: &apos;&lt;$mt:NextLink$&gt;&apos;
    }
};
var timer = window.setTimeout(&quot;getResults(&quot; + &lt;$mt:CurrentPage$&gt; + &quot;)&quot;, 1*1000);
//--&gt;
&lt;/script&gt;
&lt;/mt:IfMoreResults&gt;


                        &lt;/div&gt;
                    &lt;/div&gt;

                    &lt;$mt:Include module=&quot;サイドバー&quot;$&gt;


                &lt;/div&gt;
            &lt;/div&gt;


            &lt;$mt:Include module=&quot;バナーフッター&quot;$&gt;


        &lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</text></template>
<template id='86' blog_id='3' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606221545' identifier='dynamic_error' modified_on='20110606221545' name='ダイナミックパブリッシングエラー' rebuild_me='1' type='dynamic_error' current_revision='0'><text>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;
    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; id=&quot;sixapart-standard&quot;&gt;
&lt;head&gt;
    &lt;$mt:Include module=&quot;HTMLヘッダー&quot;$&gt;
    &lt;title&gt;&lt;$mt:BlogName encode_html=&quot;1&quot;$&gt;: ページが見つかりません。&lt;/title&gt;
&lt;/head&gt;
&lt;body id=&quot;&lt;$mt:BlogThemeID$&gt;&quot; class=&quot;mt-dynamic-error &lt;$mt:Var name=&quot;page_layout&quot;$&gt;&quot;&gt;
    &lt;div id=&quot;container&quot;&gt;
        &lt;div id=&quot;container-inner&quot;&gt;


            &lt;$mt:Include module=&quot;バナーヘッダー&quot;$&gt;


            &lt;div id=&quot;content&quot;&gt;
                &lt;div id=&quot;content-inner&quot;&gt;


                    &lt;div id=&quot;alpha&quot;&gt;
                        &lt;div id=&quot;alpha-inner&quot;&gt;
                            &lt;h1 id=&quot;page-title&quot;&gt;ページが見つかりません。&lt;/h1&gt;
                            &lt;blockquote&gt;
                                &lt;strong&gt;&lt;$mt:ErrorMessage$&gt;&lt;/strong&gt;
                            &lt;/blockquote&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;


                    &lt;$mt:Include module=&quot;サイドバー&quot;$&gt;


                &lt;/div&gt;
            &lt;/div&gt;


            &lt;$mt:Include module=&quot;バナーフッター&quot;$&gt;


        &lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</text></template>
<template id='87' blog_id='3' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606221545' identifier='javascript' modified_on='20110606221545' name='JavaScript' outfile='mt.js' rebuild_me='1' type='index' current_revision='0'><text>&lt;mt:Ignore&gt;
/*  The following functions and variables are here to support legacy MT templates.
    If you have refreshed your JavaScript template but still use older MT comment
    templates, you may need to uncomment this block in order for those templates 
    to work properly. To use, simply remove the &apos;mt:Ignore&apos; tags wrapping this
    block of code.
*/
    function hideDocumentElement(id) { return mtHide(id) }
    function showDocumentElement(id) { return mtShow(id) }
    function individualArchivesOnLoad() { return mtEntryOnLoad() }
    function writeCommenterGreeting() { return mtShowGreeting() }
    function rememberMe(f) { return mtRememberMe(f) }
    function forgetMe(f) { return mtForgetMe(f) }
    var commenter_name;
    var commenter_id;
    var commenter_url;
    var commenter_blog_ids;
    var mtcmtmail;
    var mtcmtauth;
    var mtcmthome;
    var captcha_timer;
&lt;/mt:Ignore&gt;

// The cookie name to use for storing the blog-side comment session cookie.
var mtCookieName = &quot;&lt;$mt:UserSessionCookieName$&gt;&quot;;
var mtCookieDomain = &quot;&lt;$mt:UserSessionCookieDomain$&gt;&quot;;
var mtCookiePath = &quot;&lt;$mt:UserSessionCookiePath$&gt;&quot;;
var mtCookieTimeout = &lt;$mt:UserSessionCookieTimeout$&gt;;

&lt;mt:Ignore&gt;
/***
 * Simple routine for showing a DOM element (applying a CSS display
 * attribute of &apos;none&apos;).
 */
&lt;/mt:Ignore&gt;
function mtHide(id) {
    var el = (typeof id == &quot;string&quot;) ? document.getElementById(id) : id;
    if (el) el.style.display = &apos;none&apos;;
}

&lt;mt:Ignore&gt;
/***
 * Simple routine for showing a DOM element (applying a CSS display
 * attribute of &apos;block&apos;).
 */
&lt;/mt:Ignore&gt;
function mtShow(id) {
    var el = (typeof id == &quot;string&quot;) ? document.getElementById(id) : id;
    if (el) el.style.display = &apos;block&apos;;
}

&lt;mt:Ignore&gt;
/***
 * A utility function for assigning/adding handlers to window events.
 */
&lt;/mt:Ignore&gt;
function mtAttachEvent(eventName,func) {
    var onEventName = &apos;on&apos; + eventName;
    var old = window[onEventName];
    if( typeof old != &apos;function&apos; )
        window[onEventName] = func;
    else {
        window[onEventName] = function( evt ) {
            old( evt );
            return func( evt );
        };
    }
}

&lt;mt:Ignore&gt;
/***
 * Calls the event named, if there are handlers for it.
 */
&lt;/mt:Ignore&gt;
function mtFireEvent(eventName,param) {
    var fn = window[&apos;on&apos; + eventName];
    if (typeof fn == &apos;function&apos;) return fn(param);
    return;
}

if(!this.JSON){JSON={};}(function(){function f(n){return n&lt;10?&apos;0&apos;+n:n;}if(typeof Date.prototype.toJSON!==&apos;function&apos;){Date.prototype.toJSON=function(key){return this.getUTCFullYear()+&apos;-&apos;+f(this.getUTCMonth()+1)+&apos;-&apos;+f(this.getUTCDate())+&apos;T&apos;+f(this.getUTCHours())+&apos;:&apos;+f(this.getUTCMinutes())+&apos;:&apos;+f(this.getUTCSeconds())+&apos;Z&apos;;};String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(key){return this.valueOf();};}var cx=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,escapable=/[\\\&quot;\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta={&apos;\b&apos;:&apos;\\b&apos;,&apos;\t&apos;:&apos;\\t&apos;,&apos;\n&apos;:&apos;\\n&apos;,&apos;\f&apos;:&apos;\\f&apos;,&apos;\r&apos;:&apos;\\r&apos;,&apos;&quot;&apos;:&apos;\\&quot;&apos;,&apos;\\&apos;:&apos;\\\\&apos;},rep;function quote(string){escapable.lastIndex=0;return escapable.test(string)?&apos;&quot;&apos;+string.replace(escapable,function(a){var c=meta[a];return typeof c===&apos;string&apos;?c:&apos;\\u&apos;+(&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);})+&apos;&quot;&apos;:&apos;&quot;&apos;+string+&apos;&quot;&apos;;}function str(key,holder){var i,k,v,length,mind=gap,partial,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;&amp;&amp;typeof value.toJSON===&apos;function&apos;){value=value.toJSON(key);}if(typeof rep===&apos;function&apos;){value=rep.call(holder,key,value);}switch(typeof value){case&apos;string&apos;:return quote(value);case&apos;number&apos;:return isFinite(value)?String(value):&apos;null&apos;;case&apos;boolean&apos;:case&apos;null&apos;:return String(value);case&apos;object&apos;:if(!value){return&apos;null&apos;;}gap+=indent;partial=[];if(Object.prototype.toString.apply(value)===&apos;[object Array]&apos;){length=value.length;for(i=0;i&lt;length;i+=1){partial[i]=str(i,value)||&apos;null&apos;;}v=partial.length===0?&apos;[]&apos;:gap?&apos;[\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+mind+&apos;]&apos;:&apos;[&apos;+partial.join(&apos;,&apos;)+&apos;]&apos;;gap=mind;return v;}if(rep&amp;&amp;typeof rep===&apos;object&apos;){length=rep.length;for(i=0;i&lt;length;i+=1){k=rep[i];if(typeof k===&apos;string&apos;){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}}else{for(k in value){if(Object.hasOwnProperty.call(value,k)){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}}v=partial.length===0?&apos;{}&apos;:gap?&apos;{\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+mind+&apos;}&apos;:&apos;{&apos;+partial.join(&apos;,&apos;)+&apos;}&apos;;gap=mind;return v;}}if(typeof JSON.stringify!==&apos;function&apos;){JSON.stringify=function(value,replacer,space){var i;gap=&apos;&apos;;indent=&apos;&apos;;if(typeof space===&apos;number&apos;){for(i=0;i&lt;space;i+=1){indent+=&apos; &apos;;}}else if(typeof space===&apos;string&apos;){indent=space;}rep=replacer;if(replacer&amp;&amp;typeof replacer!==&apos;function&apos;&amp;&amp;(typeof replacer!==&apos;object&apos;||typeof replacer.length!==&apos;number&apos;)){throw new Error(&apos;JSON.stringify&apos;);}return str(&apos;&apos;,{&apos;&apos;:value});};}if(typeof JSON.parse!==&apos;function&apos;){JSON.parse=function(text,reviver){var j;function walk(holder,key){var k,v,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;){for(k in value){if(Object.hasOwnProperty.call(value,k)){v=walk(value,k);if(v!==undefined){value[k]=v;}else{delete value[k];}}}}return reviver.call(holder,key,value);}cx.lastIndex=0;if(cx.test(text)){text=text.replace(cx,function(a){return&apos;\\u&apos;+(&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);});}if(/^[\],:{}\s]*$/.test(text.replace(/\\(?:[&quot;\\\/bfnrt]|u[0-9a-fA-F]{4})/g,&apos;@&apos;).replace(/&quot;[^&quot;\\\n\r]*&quot;|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,&apos;]&apos;).replace(/(?:^|:|,)(?:\s*\[)+/g,&apos;&apos;))){j=eval(&apos;(&apos;+text+&apos;)&apos;);return typeof reviver===&apos;function&apos;?walk({&apos;&apos;:j},&apos;&apos;):j;}throw new SyntaxError(&apos;JSON.parse&apos;);};}}());

var MT = window.MT || {};

MT.cons = function () {
  return {
    LOG : &apos;log&apos;,
    WARN : &apos;warn&apos;,
    DEBUG : &apos;debug&apos;,
    INFO : &apos;info&apos;,
    ERR : &apos;error&apos;,
    JSON : &apos;json&apos;
  };
}();

&lt;mt:Ignore&gt;
/**
 * Used for base functionality related to MT
 * 
 * @package MT
 * @class core
 * @global
 * @param {Object} o optional configuration object
 * Options:
 */
&lt;/mt:Ignore&gt;
MT.core = function (o) {
  var _debug = false;
  
  return {
    &lt;mt:Ignore&gt;
    /**
     * Makes remote call and handles response
     * 
     * @param {String} url The URL endpoint
     * @param {String} respType The type of response expected
     * @param {Function} respHandler The function to handle the response
     * @return void
     */
    &lt;/mt:Ignore&gt;
    connect : function (url,respType,respHandler) {
      var xh = mtGetXmlHttp();
      if (!xh) return false;
      
      xh.onreadystatechange = function() {
        if ( xh.readyState == 4 ) {
          if ( xh.status &amp;&amp; ( xh.status != 200 ) ) {
            // error - ignore
          } else {
            switch (respType) {
              case &apos;json&apos;:
                respHandler(JSON.parse(xh.responseText));
                break;
                
              case &apos;xml&apos;:
                break;
                
              case &apos;text&apos;:
                break;
            }
          }
        }
      };
      
      xh.open(&apos;GET&apos;,url);
      xh.send(null);
    },
    
    getEl : function (el) {
      return MT.util.checkNodeType(el)===&apos;element&apos; ? id : (document.getElementById(el) || false);
    },
    
    addEvent : function (el,type,func,obj) {
      if(!obj &amp;&amp; document.addEventListener) {
        el.addEventListener(type,func,false);
      } else if(obj &amp;&amp; document.addEventListener) {
        el.addEventListener(type,function () {
          func.call(obj,event);
        },false);
      } else {
        if(obj) {
          el.attachEvent(&apos;on&apos; + type,function () {
            func.call(obj,event);
          });
        } else {
          el.attachEvent(&apos;on&apos; + type,function () {          
            func.call(el,event);
          });
        }
      }
    },
    
    &lt;mt:Ignore&gt;
    /**
     * Basic logging function
     * 
     * @param {String} level The log level (WARN|DEBUG|INFO|ERROR|LOG)
     * Specified by one of the MT constants
     * @param {String} msg The log message
     * @return void
     */
    &lt;/mt:Ignore&gt;
    log : function (level,msg) {
      if(_debug &amp;&amp; window.console) {
        switch(level) {
          case &apos;warn&apos;:
          case &apos;debug&apos;:
          case &apos;info&apos;:
          case &apos;error&apos;:
          case &apos;log&apos;:
            console[level](msg);
            break;
            
          default:
            return false; 
        }
      } else {
        return false;
      }
    }
  }
}();

&lt;mt:Ignore&gt;
/**
 * Utilities class
 * 
 * @package MT
 * @class util
 * @global
 * Options:
 */
&lt;/mt:Ignore&gt;
MT.util = function () {
  return {
    toggleVisibility : {
      show : function () {
        var i = arguments.length;
        
        while(i--) {
          if(MT.util.checkNodeType(arguments[i])===&apos;element&apos;) {
            arguments[i].style.visibility = &apos;visible&apos;;
          } else {
            MT.core.getEl(arguments[i]).style.visibility = &apos;visible&apos;;
          }
        }
      },
      
      hide : function () {
        var i = arguments.length;
        while(i--) {
          if(MT.util.checkNodeType(arguments[i])===&apos;element&apos;) {
            arguments[i].style.visibility = &apos;hidden&apos;;
          } else {
            MT.core.getEl(arguments[i]).style.visibility = &apos;hidden&apos;;
          }
        }
      }
    },
    
    toggleDisplay : {
      show : function () {
        var i = arguments.length;
        while(i--) {
          if(MT.util.checkNodeType(arguments[i])===&apos;element&apos;) {
            arguments[i].style.display = &apos;&apos;;
          } else {
            MT.core.getEl(arguments[i]).style.display = &apos;&apos;;
          }
        }
      },
      
      hide : function () {
        var i = arguments.length;
        while(i--) {
          if(MT.util.checkNodeType(arguments[i])===&apos;element&apos;) {
            arguments[i].style.display = &apos;none&apos;;
          } else {
            MT.core.getEl(arguments[i]).style.display = &apos;none&apos;;
          }
        }
      }
    },
    
    &lt;mt:Ignore&gt;
    /**
     * Finds the nearest defining (i.e. with an id) parent to the given element
     * 
     * @param {HTMLElement} origin the node from which to start the search
     * @return {HTMLElement|Boolean} The parent node with an id attribute or false
     */
    &lt;/mt:Ignore&gt;
    findDefiningParent : function (origin) {
      if(MT.util.checkNodeType(origin)===&apos;element&apos;) {
        for(var node=origin.parentNode;node.parentNode;node=node.parentNode) {
          if((node.hasAttribute &amp;&amp; node.hasAttribute(&apos;id&apos;)) || node.getAttribute(&apos;id&apos;)) {
            return node;
          }
        }
      }
      return false;
    },
    
    &lt;mt:Ignore&gt;
    /**
     * Tests objects to verify if they are DOM nodes
     * 
     * @param {Object} obj The object to be tested
     * @return {String} the values &apos;element&apos;|&apos;textnode&apos;|&apos;whitespace&apos;
     */
    &lt;/mt:Ignore&gt;
    checkNodeType : function (obj) {
      if (obj &amp;&amp; obj.nodeName){
        switch (obj.nodeType) {
          case 1: return &apos;element&apos;;
          case 3: return (/\S/).test(obj.nodeValue) ? &apos;textnode&apos; : &apos;whitespace&apos;;
        }
      }
    }
  }
}();

&lt;mt:Ignore&gt;
/**
 * mtPaginateComments takes the currently generated static page and either:
 *  - Attempts to find an individual comment link in the query string
 *  - If no link is found, the static page loads
 * In either case, the pagination event is set
 */
&lt;/mt:Ignore&gt;
(function () {
  var M = MT.core,
      c = MT.cons,
      u = MT.util,
      cache,
      isLoading,
      direction,
      currentComments,
      commentAnchor,
      commentArrId,
      commentsPerPage,
      commentsTotalPages,
      loadingIcon,
      pageNum,
      commentsOffset,
      totalComments,
      entryID,
      commentContentDiv,
      topNav,
      nav,
      currentCommentsSpan,
      topCurrentCommentsSpan;
            
  M.addEvent(window,&apos;load&apos;,_init);
  
  /**
   * Initializes the class
   * 
   * @return void
   */
  function _init () {
    if(!MT.entryCommentCount) {
      return;
    }
    
    _initializeVariables();
    _setCommentOffset(false);
    _checkForAnchor();
		_setCurrentComments();
    _toggleNavLinks();
    _initializeEvents();
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Initializes variables to their initial values
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _initializeVariables() {
    cache = {};
    isLoading = false;
    commentAnchor = &apos;&apos;;
    commentArrId = &apos;&apos;;
    commentsPerPage = MT.commentsPerPage || 50;
    currentComments = &apos;&apos;;
    direction = &apos;ascend&apos;;
    entryID = MT.entryID;
    totalComments = MT.entryCommentCount;
    commentsTotalPages = Math.ceil(totalComments / commentsPerPage);
    pageNum = 1;
    
    loadingIcon = &quot;&lt;img title=&apos;Loading...&apos; src=&apos;&lt;$MTStaticWebPath$&gt;images/indicator.white.gif&apos; alt=&apos;Loading&apos; /&gt;&quot;;
    
    commentContentDiv = M.getEl(&quot;comments-content&quot;);
    topNav = M.getEl(&quot;top-comment-nav&quot;);
    nav = M.getEl(&quot;comment-nav&quot;);
    
    currentCommentsSpan = M.getEl(&quot;current-comments&quot;);
    topCurrentCommentsSpan = M.getEl(&quot;top-current-comments&quot;);
  }
  
  function _initializeEvents() {
    if (commentsPerPage &lt; totalComments) {
      M.addEvent(nav,&apos;click&apos;,_handleEvents);
      M.addEvent(topNav,&apos;click&apos;,_handleEvents);
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Checks for an existing anchor tag in the query string
   * If found, it looks for it on the current page
   * If that fails, it tries to find it in comment list and loads
   * the desired page
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _checkForAnchor() {
    var found = String(window.location.hash).match( /comment-(\d{1,6})/ );
		
		if (found) {
		  M.log(c.DEBUG,found);
			if (!Object.prototype.hasOwnProperty.call(M.getEl(found[0]), &apos;className&apos;)) {
				if (_findIdMatch(found[1])) {
    			pageNum = Math.floor(commentArrId / commentsPerPage) + 1;
    			M.log(c.DEBUG,&apos;Comment Array Id: &apos; + commentArrId);
    			M.log(c.DEBUG,&apos;Comments Per Page: &apos; + commentsPerPage);
    			M.log(c.DEBUG,&apos;Page Number: &apos; + pageNum);
    			M.log(c.DEBUG,&apos;Comment Offset: &apos; + _getCommentOffset());
    			_updateComments();
    		}
			}
		}
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Sets commentsOffset (i.e. the offset number to the remote list)
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _setCommentOffset() {
    commentsOffset = commentsPerPage * (pageNum-1);
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Gets the commentsOffset (i.e. the offset number to the remote list)
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _getCommentOffset() {
    return commentsOffset;
  }
  
  &lt;mt:Ignore&gt;
  /**
   * General event handler
   * 
   * @param {Event} e The event object
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _handleEvents (e) {
    var origin = e.target || e.srcElement,
        parentId;
        
    // stupid IE
    origin = origin.id &amp;&amp; M.getEl(origin.id) || false;

    if(origin) {
      parentId = u.checkNodeType(origin.parentNode)===&apos;element&apos; &amp;&amp; origin.parentNode.getAttribute(&apos;id&apos;) &amp;&amp; origin.parentNode.id;
    } else {
      return false;
    }
    
    switch(origin.nodeName) {
      case &apos;A&apos;:
        switch (parentId) {
          case &apos;prev-comments&apos;:
          case &apos;top-prev-comments&apos;:
            if(e.preventDefault) {
              e.preventDefault();
            } else {
              e.returnValue =	false;
            }
            if(!isLoading) {
              _previousPage();
            }
            break;
          case &apos;next-comments&apos;:
          case &apos;top-next-comments&apos;:
            if(e.preventDefault) {
              e.preventDefault();
            } else {
              e.returnValue =	false;
            }
            if(!isLoading) {
              _nextPage();
            }
            break;
        }
        break;
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Toggles the visibility of the navigation links
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _toggleNavLinks () {
    M.log(c.DEBUG,M.getEl(&apos;top-prev-comments&apos;));
    if(pageNum &lt;= commentsTotalPages &amp;&amp; pageNum !== 1) {
      u.toggleVisibility.show(&apos;prev-comments&apos;);
      u.toggleVisibility.show(&apos;top-prev-comments&apos;);
    }
    
    if(pageNum &gt;= 1 &amp;&amp; pageNum !== commentsTotalPages) {
      u.toggleVisibility.show(&apos;next-comments&apos;);
      u.toggleVisibility.show(&apos;top-next-comments&apos;);
    }
    
    if(pageNum===1 || nav.style.visibility===&apos;hidden&apos;) {
      u.toggleVisibility.hide(&apos;prev-comments&apos;);
      u.toggleVisibility.hide(&apos;top-prev-comments&apos;);
    }
    
    if(pageNum===commentsTotalPages || nav.style.visibility===&apos;hidden&apos;) {
      u.toggleVisibility.hide(&apos;next-comments&apos;);
      u.toggleVisibility.hide(&apos;top-next-comments&apos;);
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Determines appropriate action based on the id of the parent
   * clicked link. Decrements pageNum based on id.
   * 
   * @param {String} id the id of the parent of the clicked link
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _nextPage () {
    if(pageNum &lt; commentsTotalPages) {
      pageNum++;
      _updateComments();
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Determines appropriate action based on the id of the parent
   * clicked link. Increments/decrements pageNum based on id.
   * 
   * @param {String} id the id of the parent of the clicked link
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _previousPage() {
    if(pageNum &gt; 1) {
      pageNum--;
      _updateComments();
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Searches for a particular comment in the list of ids
   * 
   * @param {String} id The id for which to search
   * @return {Boolean} true, if found, false otherwise
   */
  &lt;/mt:Ignore&gt;
  function _findIdMatch (id) {
    var len = MT.commentIds.length;
    
  	while (len--) {
  		if (MT.commentIds[len] == id) {
  			commentAnchor = &quot;comment-&quot; + id;
  			commentArrId = len;
  			return true;
  		}
  	}
  	
  	return false;
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Sets the current comment counts on the page
   *
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _setCurrentComments() {
    var commentsOnPage = pageNum != commentsTotalPages ? commentsOffset + commentsPerPage : totalComments;
    
    _setCurrentCommentsContent([commentsOffset+1,&quot; - &quot;,commentsOnPage].join(&apos;&apos;));
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Sets the &quot;current-comments&quot; element with the HTML value
   * 
   * @param {String|Element} currentCommentsHTML The content to be set
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _setCurrentCommentsContent(currentCommentsHTML) {
    currentCommentsSpan.innerHTML = currentCommentsHTML;
    topCurrentCommentsSpan.innerHTML = currentCommentsHTML;
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Sets the content of the comment list
   * 
   * @param {String|Element} commentHTML The content to be set 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _setCommentContent(commentHTML) {
    commentContentDiv.innerHTML = commentHTML;
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Builds the appropriate URL to make a remote call to get the
   * next set of comments
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _updateComments() {
    var comments, jsonUrl;
    isLoading = true;
    _setCurrentCommentsContent(loadingIcon);
    _setCommentOffset();
    
    jsonUrl = [
        &quot;&lt;$mt:CGIPath$&gt;&lt;$mt:CommentScript$&gt;?__mode=comment_listing&amp;direction=&quot;,
        direction,
        &quot;&amp;entry_id=&quot;,
        entryID,
        &quot;&amp;limit=&quot;,
        commentsPerPage,
        &quot;&amp;offset=&quot;,
        _getCommentOffset()
      ].join(&apos;&apos;);
  	
  	if (!commentAnchor) {
      commentAnchor = &quot;comments-content&quot;;
    }
    
    if(cache.hasOwnProperty(jsonUrl)) {
      _refreshComments(cache[jsonUrl]);
      isLoading = false;
    } else {
      M.connect(jsonUrl,c.JSON,function (json) {
        cache[jsonUrl] = json.comments;
    	  _refreshComments(json.comments);
    	  isLoading = false;
      });
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Refreshes the comment data with the current
   * 
   * @param {String} commentData The data used to replace current comments
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _refreshComments(commentData) {
    _setCommentContent(commentData);
    _setCurrentComments();
    window.location.hash = &apos;reset&apos;;
    window.location.hash = commentAnchor;
    _toggleNavLinks();
  }
})();

&lt;mt:Ignore&gt;
/***
 * Displays a relative date.
 * &apos;ts&apos; is a Date object, &apos;fds&apos; is a string of the date which
 * will be displayed if the given date is older than 1 week.
 */
&lt;/mt:Ignore&gt;
function mtRelativeDate(ts, fds) {
    var now = new Date();
    var ref = ts;
    var delta = Math.floor((now.getTime() - ref.getTime()) / 1000);

    var str;
    if (delta &lt; 60) {
        str = &apos;直前&apos;;
    } else if (delta &lt;= 86400) {
        // less than 1 day
        var hours = Math.floor(delta / 3600);
        var min = Math.floor((delta % 3600) / 60);
        if (hours == 1)
            str = &apos;1 時間前&apos;;
        else if (hours &gt; 1)
            str = &apos;2 時間前&apos;.replace(/2/, hours);
        else if (min == 1)
            str = &apos;1 分前&apos;;
        else
            str = &apos;2 分前&apos;.replace(/2/, min);
    } else if (delta &lt;= 604800) {
        // less than 1 week
        var days = Math.floor(delta / 86400);
        var hours = Math.floor((delta % 86400) / 3600);
        if (days == 1)
            str = &apos;1 日前&apos;;
        else if (days &gt; 1)
            str = &apos;2 日前&apos;.replace(/2/, days);
        else if (hours == 1)
            str = &apos;1 時間前&apos;;
        else
            str = &apos;2 時間前&apos;.replace(/2/, hours);
    }
    return str ? str : fds;
}

&lt;mt:Ignore&gt;
/***
 * Used to display an edit link for the given entry.
 */
&lt;/mt:Ignore&gt;
function mtEditLink(entry_id, author_id) {
    var u = mtGetUser();
    if (! u) return;
    if (! entry_id) return;
    if (! author_id) return;
    if (u.id != author_id) return;
    var link = &apos;&lt;a href=&quot;&lt;$mt:AdminScript$&gt;?__mode=view&amp;amp;_type=entry&amp;amp;id=&apos; + entry_id + &apos;&quot;&gt;編集&lt;/a&gt;&apos;;
    document.write(link);
}

&lt;mt:Ignore&gt;
/***
 * Called when an input field on the comment form receives focus.
 */
&lt;/mt:Ignore&gt;
function mtCommentFormOnFocus() {
    // if CAPTCHA is enabled, this causes the captcha image to be
    // displayed if it hasn&apos;t been already.
    mtShowCaptcha();
}

&lt;mt:Ignore&gt;
/***
 * Displays a captcha field for anonymous commenters.
 */
&lt;/mt:Ignore&gt;
var mtCaptchaVisible = false;
function mtShowCaptcha() {
    var u = mtGetUser();
    if ( u &amp;&amp; u.is_authenticated ) return;
    if (mtCaptchaVisible) return;
    var div = document.getElementById(&apos;comments-open-captcha&apos;);
    if (div) {
        div.innerHTML = &apos;&lt;$mt:CaptchaFields$&gt;&apos;;
        mtCaptchaVisible = true;
    }
}

&lt;mt:Ignore&gt;
/* user object
    -- saved in user cookie --
    u.name (display name)
    u.url (link to home page)
    u.email (for anonymous only)
    u.userpic (url for commenter/author)
    u.profile (link to profile)
    u.is_trusted (boolean)
    u.is_author (user has posting rights)
    u.is_banned (banned status; neither post/comment perms)
    u.can_post (has permission to post)
    u.can_comment (has permission to comment)

    -- status fields --
    u.is_authenticated (boolean)
    u.is_anonymous (user is anonymous)
*/
&lt;/mt:Ignore&gt;

var is_preview;
var user;
&lt;mt:Ignore&gt;
/***
 * Assigns a user object as the actively logged in user; also saves the
 * user information in a browser cookie.
 */
&lt;/mt:Ignore&gt;
function mtSetUser(u) {
    if (u) {
        // persist this
        user = u;
        mtSaveUser();
        // sync up user greeting
        mtFireEvent(&apos;usersignin&apos;);
    }
}

&lt;mt:Ignore&gt;
/***
 * Simple function that escapes single quote characters for storing
 * in a cookie.
 */
&lt;/mt:Ignore&gt;
function mtEscapeJS(s) {
    s = s.replace(/&apos;/g, &quot;&amp;apos;&quot;);
    return s;
}

&lt;mt:Ignore&gt;
/***
 * Simple function that unescapes single quote characters that were
 * stored in a cookie.
 */
&lt;/mt:Ignore&gt;
function mtUnescapeJS(s) {
    s = s.replace(/&amp;apos;/g, &quot;&apos;&quot;);
    return s;
}

&lt;mt:Ignore&gt;
/***
 * Serializes a user object into a string, suitable for storing as a cookie.
 */
&lt;/mt:Ignore&gt;
function mtBakeUserCookie(u) {
    var str = &quot;&quot;;
    if (u.name) str += &quot;name:&apos;&quot; + mtEscapeJS(u.name) + &quot;&apos;;&quot;;
    if (u.url) str += &quot;url:&apos;&quot; + mtEscapeJS(u.url) + &quot;&apos;;&quot;;
    if (u.email) str += &quot;email:&apos;&quot; + mtEscapeJS(u.email) + &quot;&apos;;&quot;;
    if (u.is_authenticated) str += &quot;is_authenticated:&apos;1&apos;;&quot;;
    if (u.profile) str += &quot;profile:&apos;&quot; + mtEscapeJS(u.profile) + &quot;&apos;;&quot;;
    if (u.userpic) str += &quot;userpic:&apos;&quot; + mtEscapeJS(u.userpic) + &quot;&apos;;&quot;;
    if (u.sid) str += &quot;sid:&apos;&quot; + mtEscapeJS(u.sid) + &quot;&apos;;&quot;;
    str += &quot;is_trusted:&apos;&quot; + (u.is_trusted ? &quot;1&quot; : &quot;0&quot;) + &quot;&apos;;&quot;;
    str += &quot;is_author:&apos;&quot; + (u.is_author ? &quot;1&quot; : &quot;0&quot;) + &quot;&apos;;&quot;;
    str += &quot;is_banned:&apos;&quot; + (u.is_banned ? &quot;1&quot; : &quot;0&quot;) + &quot;&apos;;&quot;;
    str += &quot;can_post:&apos;&quot; + (u.can_post ? &quot;1&quot; : &quot;0&quot;) + &quot;&apos;;&quot;;
    str += &quot;can_comment:&apos;&quot; + (u.can_comment ? &quot;1&quot; : &quot;0&quot;) + &quot;&apos;;&quot;;
    str = str.replace(/;$/, &apos;&apos;);
    return str;
}

&lt;mt:Ignore&gt;
/***
 * Unserializes a user cookie and returns a user object with the restored
 * state.
 */
&lt;/mt:Ignore&gt;
function mtUnbakeUserCookie(s) {
    if (!s) return;

    var u = {};
    var m;
    while (m = s.match(/^((name|url|email|is_authenticated|profile|userpic|sid|is_trusted|is_author|is_banned|can_post|can_comment):&apos;([^&apos;]+?)&apos;;?)/)) {
        s = s.substring(m[1].length);
        if (m[2].match(/^(is|can)_/)) // boolean fields
            u[m[2]] = m[3] == &apos;1&apos; ? true : false;
        else
            u[m[2]] = mtUnescapeJS(m[3]);
    }
    if (u.is_authenticated) {
        u.is_anonymous = false;
    } else {
        u.is_anonymous = true;
        u.can_post = false;
        u.is_author = false;
        u.is_banned = false;
        u.is_trusted = false;
    }
    return u;
}

&lt;mt:Ignore&gt;
/***
 * Retrieves an object of the currently logged in user&apos;s state.
 * If no user is logged in or cookied, this will return null.
 */
&lt;/mt:Ignore&gt;
function mtGetUser() {
    if (!user) {
        var cookie = mtGetCookie(mtCookieName);
        if (!cookie) return;
        user = mtUnbakeUserCookie(cookie);
        if (! user) {
            user = {};
            user.is_anonymous = true;
            user.can_post = false;
            user.is_author = false;
            user.is_banned = false;
            user.is_trusted = false;
        }
    }
    return user;
}

&lt;mt:Ignore&gt;
/***
 * Issues a request to the MT comment script to retrieve the currently
 * logged-in user (if any).
 */
&lt;/mt:Ignore&gt;
var mtFetchedUser = false;
&lt;mt:IfBlog&gt;
function mtFetchUser(cb) {
    if (!cb) cb = &apos;mtSetUser&apos;;
    if ( ( cb == &apos;mtSetUser&apos; ) &amp;&amp; mtGetUser() ) {
        var url = document.URL;
        url = url.replace(/#.+$/, &apos;&apos;);
        url += &apos;#comments-open&apos;;
        location.href = url;
    } else {
        // we aren&apos;t using AJAX for this, since we may have to request
        // from a different domain. JSONP to the rescue.
        mtFetchedUser = true;
        var script = document.createElement(&apos;script&apos;);
        var ts = new Date().getTime();
        script.src = &apos;&lt;$mt:CGIPath$&gt;&lt;$mt:CommentScript$&gt;?__mode=session_js&amp;blog_id=&lt;$mt:BlogID$&gt;&amp;jsonp=&apos; + cb + &apos;&amp;ts=&apos; + ts;
        (document.getElementsByTagName(&apos;head&apos;))[0].appendChild(script);
    }
}
&lt;/mt:IfBlog&gt;

&lt;mt:Ignore&gt;
/***
 * Called when the &apos;Remember me&apos; checkbox is changed. If the checkbox
 * is cleared, the cached user cookie is immediately cleared.
 */
&lt;/mt:Ignore&gt;
function mtRememberMeOnClick(b) {
    if (!b.checked)
        mtClearUser(b.form);
    return true;
}

&lt;mt:Ignore&gt;
/***
 * Called when comment form is sent.
 * Required parameter: Form DOM object of comment form.
 * If form has a &apos;bakecookie&apos; member, it will be used to signal
 * storing the anonymous commenter information to a cookie.
 * If form has a &apos;armor&apos; member, it will be used to store
 * a token that is checked by the comment script.
 */
&lt;/mt:Ignore&gt;
&lt;mt:IfBlog&gt;
var mtRequestSubmitted = false;
function mtCommentOnSubmit(f) {
    if (!mtRequestSubmitted) {
        mtRequestSubmitted = true;

        if (f.armor)
            f.armor.value = &apos;&lt;$mt:BlogSitePath encode_sha1=&quot;1&quot;$&gt;&apos;;
        if (f.bakecookie &amp;&amp; f.bakecookie.checked)
            mtSaveUser(f);

        // disable submit buttons
        if (f.preview_button) f.preview_button.disabled = true;
        if (f.post) f.post.disabled = true;

        var u = mtGetUser();
        if ( !is_preview &amp;&amp; ( u &amp;&amp; u.is_authenticated ) ) {
            // validate session; then submit
            mtFetchedUser = false;
            mtFetchUser(&apos;mtCommentSessionVerify&apos;);
            return false;
        }

        return true;
    }
    return false;
}

function mtCommentSessionVerify(app_user) {
    var u = mtGetUser();
    var f = document[&apos;comments_form&apos;];
    if ( u &amp;&amp; app_user &amp;&amp; app_user.sid &amp;&amp; ( u.sid == app_user.sid ) ) {
        f.submit();
    } else {
        alert(&apos;セッションの有効期限が切れています。再度サインインしてください。&apos;);
        mtClearUser();
        mtFireEvent(&apos;usersignin&apos;);
&lt;mt:IfRegistrationRequired&gt;
        mtShow(&apos;comments-form&apos;);
        mtHide(&apos;comments-open-footer&apos;);
&lt;/mt:IfRegistrationRequired&gt;
    }
}

function mtUserOnLoad() {
    var u = mtGetUser();

    // if the user is authenticated, hide the &apos;anonymous&apos; fields
    // and any captcha input if already shown
    if ( document.getElementById(&apos;comments-form&apos;)) {
        if ( u &amp;&amp; u.is_authenticated ) {
            mtShow(&apos;comments-form&apos;);
            mtHide(&apos;comments-open-data&apos;);
            if (mtCaptchaVisible)
                mtHide(&apos;comments-open-captcha&apos;);
        } else {
&lt;mt:IfRegistrationRequired&gt;
            mtHide(&apos;comments-form&apos;);
&lt;/mt:IfRegistrationRequired&gt;
        }
        if ( u &amp;&amp; u.is_banned )
            mtHide(&apos;comments-form&apos;);

        // if we&apos;re previewing a comment, make sure the captcha
        // field is visible
        if (is_preview)
            mtShowCaptcha();
        else
            mtShowGreeting();

        // populate anonymous comment fields if user is cookied as anonymous
        var cf = document[&apos;comments_form&apos;];
        if (cf) {
            if (u &amp;&amp; u.is_anonymous) {
                if (u.email) cf.email.value = u.email;
                if (u.name) cf.author.value = u.name;
                if (u.url) cf.url.value = u.url;
                if (cf.bakecookie)
                    cf.bakecookie.checked = u.name || u.email;
            } else {
                if (u &amp;&amp; u.sid &amp;&amp; cf.sid)
                    cf.sid.value = u.sid;
            }
            if (cf.post &amp;&amp; cf.post.disabled)
                cf.post.disabled = false;
            if (cf.preview_button &amp;&amp; cf.preview_button.disabled)
                cf.preview_button.disabled = false;
            mtRequestSubmitted = false;
        }
    }
}
&lt;/mt:IfBlog&gt;

&lt;mt:Ignore&gt;
/***
 * Called when an entry archive page is loaded.
 * This routine controls which elements of the comment form are shown
 * or hidden, depending on commenter type and blog configuration.
 */
&lt;/mt:Ignore&gt;
&lt;mt:IfBlog&gt;
function mtEntryOnLoad() {
    var cf = document[&apos;comments_form&apos;];
    if (cf &amp;&amp; cf.preview) cf.preview.value = &apos;&apos;;
    &lt;mt:Unless tag=&quot;IfPingsAccepted&quot;&gt;mtHide(&apos;trackbacks-info&apos;);&lt;/mt:Unless&gt;
    &lt;mt:Unless tag=&quot;IfCommentsAccepted&quot;&gt;mtHide(&apos;comments-open&apos;);&lt;/mt:Unless&gt;
    mtFireEvent(&apos;usersignin&apos;);
}

function mtEntryOnUnload() {
    if (mtRequestSubmitted) {
        var cf = document[&apos;comments_form&apos;];
        if (cf) {
            if (cf.post &amp;&amp; cf.post.disabled)
                cf.post.disabled = false;
            if (cf.preview_button &amp;&amp; cf.preview_button.disabled)
                cf.preview_button.disabled = false;
        }
        mtRequestSubmitted = false;
    }
    return true;
}

mtAttachEvent(&apos;usersignin&apos;, mtUserOnLoad);
&lt;/mt:IfBlog&gt;

&lt;mt:Ignore&gt;
/***
 * Handles the action of the &quot;Sign in&quot; link. First clears any existing
 * user cookie, then directs to the MT comment script to sign the user in.
 */
&lt;/mt:Ignore&gt;
function mtSignIn() {
    var doc_url = document.URL;
    doc_url = doc_url.replace(/#.+/, &apos;&apos;);
    var url = &apos;&lt;$mt:SignInLink$&gt;&apos;;
    if (is_preview) {
        if ( document[&apos;comments_form&apos;] ) {
            var entry_id = document[&apos;comments_form&apos;].entry_id.value;
            url += &apos;&amp;entry_id=&apos; + entry_id;
        } else {
            url += &apos;&amp;return_url=&lt;$mt:BlogURL encode_url=&quot;1&quot;$&gt;&apos;;
        }
    } else {
        url += &apos;&amp;return_url=&apos; + encodeURIComponent(doc_url);
    }
    mtClearUser();
    location.href = url;
}

function mtSignInOnClick(sign_in_element) {
    var el;
    if (sign_in_element) {
        // display throbber
        el = document.getElementById(sign_in_element);
        if (!el)  // legacy MT 4.x element id
            el = document.getElementById(&apos;comment-form-external-auth&apos;);
    }
    if (el)
        el.innerHTML = &apos;サインインします... &lt;span class=&quot;status-indicator&quot;&gt;&amp;nbsp;&lt;/span&gt;&apos;;

    mtClearUser(); // clear any &apos;anonymous&apos; user cookie to allow sign in
    mtFetchUser(&apos;mtSetUserOrLogin&apos;);
    return false;
}

function mtSetUserOrLogin(u) {
    if (u &amp;&amp; u.is_authenticated) {
        mtSetUser(u);
    } else {
        // user really isn&apos;t logged in; so let&apos;s do this!
        mtSignIn();
    }
}

&lt;mt:Ignore&gt;
/***
 * Handles sign out from the web site.
 * First clears any existing user cookie, then direts to the MT comment
 * script to sign the user out.
 */
&lt;/mt:Ignore&gt;
function mtSignOut(entry_id) {
    mtClearUser();
    var doc_url = document.URL;
    doc_url = doc_url.replace(/#.+/, &apos;&apos;);
    var url = &apos;&lt;$mt:SignOutLink$&gt;&apos;;
    if (is_preview) {
        if ( document[&apos;comments_form&apos;] ) {
            var entry_id = document[&apos;comments_form&apos;].entry_id.value;
            url += &apos;&amp;entry_id=&apos; + entry_id;
        } else {
            url += &apos;&amp;return_url=&lt;$mt:BlogURL encode_url=&quot;1&quot;$&gt;&apos;;
        }
    } else {
        url += &apos;&amp;return_url=&apos; + encodeURIComponent(doc_url);
    }
    location.href = url;
}

&lt;mt:Ignore&gt;
/***
 * Handles the action of the &quot;Sign out&quot; link.
 */
&lt;/mt:Ignore&gt;
function mtSignOutOnClick() {
    mtSignOut();
    return false;
}

&lt;mt:Ignore&gt;
/***
 * Handles the display of the greeting message, depending on what kind of
 * user is logged in and blog comment policy.
 */
&lt;/mt:Ignore&gt;
&lt;mt:IfBlog&gt;
function mtShowGreeting() {
&lt;mt:IfRegistrationAllowed&gt;
    var reg_reqd = &lt;mt:IfRegistrationRequired&gt;true&lt;mt:Else&gt;false&lt;/mt:IfRegistrationRequired&gt;;

    var cf = document[&apos;comments_form&apos;];
    if (!cf) return;

    var el = document.getElementById(&apos;comment-greeting&apos;);
    if (!el)  // legacy MT 4.x element id
        el = document.getElementById(&apos;comment-form-external-auth&apos;);
    if (!el) return;

    var eid = cf.entry_id;
    var entry_id;
    if (eid) entry_id = eid.value;

    var phrase;
    var u = mtGetUser();

    if ( u &amp;&amp; u.is_authenticated ) {
        if ( u.is_banned ) {
            phrase = &apos;このブログにコメントする権限を持っていません。(\&lt;a href=\&quot;javas\cript:void(0);\&quot; onclick=\&quot;return mtSignOutOnClick();\&quot;\&gt;サインアウトする\&lt;\/a\&gt;)&apos;;
        } else {
            var user_link;
            if ( u.is_author ) {
                user_link = &apos;&lt;a href=&quot;&lt;$mt:CGIPath$&gt;&lt;$mt:CommentScript$&gt;?__mode=edit_profile&amp;return_url=&apos; + encodeURIComponent( location.href );
                user_link += &apos;&quot;&gt;&apos; + u.name + &apos;&lt;/a&gt;&apos;;
            } else {
                // registered user, but not a user with posting rights
                if (u.url)
                    user_link = &apos;&lt;a href=&quot;&apos; + u.url + &apos;&quot;&gt;&apos; + u.name + &apos;&lt;/a&gt;&apos;;
                else
                    user_link = u.name;
            }
            // TBD: supplement phrase with userpic if one is available.
            phrase = &apos;__NAME__としてサインインしています。(\&lt;a href=\&quot;javas\cript:void(0)\&quot; onclick=\&quot;return mtSignOutOnClick();\&quot;\&gt;サインアウト\&lt;\/a\&gt;)&apos;;
            phrase = phrase.replace(/__NAME__/, user_link);
        }
    } else {
        if (reg_reqd) {
            phrase = &apos;コメントするにはまず\&lt;a href=\&quot;javas\cript:void(0)\&quot; onclick=\&quot;return mtSignInOnClick(\&apos;comment-greeting\&apos;)\&quot;\&gt;サインイン\&lt;\/a\&gt;してください。&apos;;
        } else {
            phrase = &apos;コメントする前に\&lt;a href=\&quot;javas\cript:void(0)\&quot; onclick=\&quot;return mtSignInOnClick(\&apos;comment-greeting\&apos;)\&quot;\&gt;サインイン\&lt;\/a\&gt;することもできます。&apos;;
        }
    }
    el.innerHTML = phrase;
&lt;mt:Else&gt;
    mtShowCaptcha();
&lt;/mt:IfRegistrationAllowed&gt;
}
&lt;/mt:IfBlog&gt;

&lt;mt:Ignore&gt;
/***
 * Handles the action of the &apos;Reply&apos; links.
 */
&lt;/mt:Ignore&gt;
function mtReplyCommentOnClick(parent_id, author) {
    mtShow(&apos;comment-form-reply&apos;);

    var checkbox = document.getElementById(&apos;comment-reply&apos;);
    var label = document.getElementById(&apos;comment-reply-label&apos;);
    var text = document.getElementById(&apos;comment-text&apos;);

    // Populate label with new values
    var reply_text = &apos;\&lt;a href=\&quot;#comment-__PARENT__\&quot; onclick=\&quot;location.href=this.href; return false\&quot;\&gt;__AUTHOR__からのコメント\&lt;\/a\&gt;に返信&apos;;
    reply_text = reply_text.replace(/__PARENT__/, parent_id);
    reply_text = reply_text.replace(/__AUTHOR__/, author);
    label.innerHTML = reply_text;

    checkbox.value = parent_id; 
    checkbox.checked = true;
    try {
        // text field may be hidden
        text.focus();
    } catch(e) {
    }

    mtSetCommentParentID();
}

&lt;mt:Ignore&gt;
/***
 * Sets the parent comment ID when replying to a comment.
 */
&lt;/mt:Ignore&gt;
function mtSetCommentParentID() {
    var checkbox = document.getElementById(&apos;comment-reply&apos;);
    var parent_id_field = document.getElementById(&apos;comment-parent-id&apos;);
    if (!checkbox || !parent_id_field) return;

    var pid = 0;
    if (checkbox.checked == true)
        pid = checkbox.value;
    parent_id_field.value = pid;
}

&lt;mt:Ignore&gt;
/***
 * Persists a copy of the current user cookie into the browser cookie stash.
 */
&lt;/mt:Ignore&gt;
function mtSaveUser(f) {
    // We can&apos;t reliably store the user cookie during a preview.
    if (is_preview) return;

    var u = mtGetUser();

    if (f &amp;&amp; (!u || u.is_anonymous)) {
        if ( !u ) {
            u = {};
            u.is_authenticated = false;
            u.can_comment = true;
            u.is_author = false;
            u.is_banned = false;
            u.is_anonymous = true;
            u.is_trusted = false;
        }
        if (f.author != undefined) u.name = f.author.value;
        if (f.email != undefined) u.email = f.email.value;
        if (f.url != undefined) u.url = f.url.value;
    }

    if (!u) return;

    var cache_period = mtCookieTimeout * 1000;

    // cache anonymous user info for a long period if the
    // user has requested to be remembered
    if (u.is_anonymous &amp;&amp; f &amp;&amp; f.bakecookie &amp;&amp; f.bakecookie.checked)
        cache_period = 365 * 24 * 60 * 60 * 1000;

    var now = new Date();
    mtFixDate(now);
    now.setTime(now.getTime() + cache_period);

    var cmtcookie = mtBakeUserCookie(u);
    mtSetCookie(mtCookieName, cmtcookie, now, mtCookiePath, mtCookieDomain,
        location.protocol == &apos;https:&apos;);
}

&lt;mt:Ignore&gt;
/***
 * Clears the blog-side user cookie.
 */
&lt;/mt:Ignore&gt;
function mtClearUser() {
    user = null;
    mtDeleteCookie(mtCookieName, mtCookiePath, mtCookieDomain,
        location.protocol == &apos;https:&apos;);
}

&lt;mt:Ignore&gt;
/***
 * Sets a browser cookie.
 */
&lt;/mt:Ignore&gt;
function mtSetCookie(name, value, expires, path, domain, secure) {
    if (domain &amp;&amp; domain.match(/^\.?localhost$/))
        domain = null;
    var curCookie = name + &quot;=&quot; + escape(value) +
        (expires ? &quot;; expires=&quot; + expires.toGMTString() : &quot;&quot;) +
        (path ? &quot;; path=&quot; + path : &quot;&quot;) +
        (domain ? &quot;; domain=&quot; + domain : &quot;&quot;) +
        (secure ? &quot;; secure&quot; : &quot;&quot;);
    document.cookie = curCookie;
}

&lt;mt:Ignore&gt;
/***
 * Retrieves a browser cookie.
 */
&lt;/mt:Ignore&gt;
function mtGetCookie(name) {
    var prefix = name + &apos;=&apos;;
    var c = document.cookie;
    var cookieStartIndex = c.indexOf(prefix);
    if (cookieStartIndex == -1)
        return &apos;&apos;;
    var cookieEndIndex = c.indexOf(&quot;;&quot;, cookieStartIndex + prefix.length);
    if (cookieEndIndex == -1)
        cookieEndIndex = c.length;
    return unescape(c.substring(cookieStartIndex + prefix.length, cookieEndIndex));
}

&lt;mt:Ignore&gt;
/***
 * Deletes a browser cookie.
 */
&lt;/mt:Ignore&gt;
function mtDeleteCookie(name, path, domain, secure) {
    if (mtGetCookie(name)) {
        if (domain &amp;&amp; domain.match(/^\.?localhost$/))
            domain = null;
        document.cookie = name + &quot;=&quot; +
            (path ? &quot;; path=&quot; + path : &quot;&quot;) +
            (domain ? &quot;; domain=&quot; + domain : &quot;&quot;) +
            (secure ? &quot;; secure&quot; : &quot;&quot;) +
            &quot;; expires=Thu, 01-Jan-70 00:00:01 GMT&quot;;
    }
}

function mtFixDate(date) {
    var skew = (new Date(0)).getTime();
    if (skew &gt; 0)
        date.setTime(date.getTime() - skew);
}

&lt;mt:Ignore&gt;
/***
 * Returns a XMLHttpRequest object (for Ajax operations).
 */
&lt;/mt:Ignore&gt;
function mtGetXmlHttp() {
    if ( !window.XMLHttpRequest ) {
        window.XMLHttpRequest = function() {
            var types = [
                &quot;Microsoft.XMLHTTP&quot;,
                &quot;MSXML2.XMLHTTP.5.0&quot;,
                &quot;MSXML2.XMLHTTP.4.0&quot;,
                &quot;MSXML2.XMLHTTP.3.0&quot;,
                &quot;MSXML2.XMLHTTP&quot;
            ];

            for ( var i = 0; i &lt; types.length; i++ ) {
                try {
                    return new ActiveXObject( types[ i ] );
                } catch( e ) {}
            }

            return undefined;
        };
    }
    if ( window.XMLHttpRequest )
        return new XMLHttpRequest();
}

// BEGIN: fast browser onload init
// Modifications by David Davis, DWD
// Dean Edwards/Matthias Miller/John Resig
// http://dean.edwards.name/weblog/2006/06/again/?full#comment5338

function mtInit() {
    // quit if this function has already been called
    if (arguments.callee.done) return;

    // flag this function so we don&apos;t do the same thing twice
    arguments.callee.done = true;

    // kill the timer
    // DWD - check against window
    if ( window._timer ) clearInterval(window._timer);

    // DWD - fire the window onload now, and replace it
    if ( window.onload &amp;&amp; ( window.onload !== window.mtInit ) ) {
        window.onload();
        window.onload = function() {};
    }
}

/* for Mozilla/Opera9 */
if (document.addEventListener) {
    document.addEventListener(&quot;DOMContentLoaded&quot;, mtInit, false);
}

/* for Internet Explorer */
/*@cc_on @*/
/*@if (@_win32)
document.write(&quot;&lt;script id=__ie_onload defer src=javascript:void(0)&gt;&lt;\/script&gt;&quot;);
var script = document.getElementById(&quot;__ie_onload&quot;);
script.onreadystatechange = function() {
    if (this.readyState == &quot;complete&quot;) {
        mtInit(); // call the onload handler
    }
};
/*@end @*/

/* for Safari */
if (/WebKit/i.test(navigator.userAgent)) { // sniff
    _timer = setInterval(function() {
        if (/loaded|complete/.test(document.readyState)) {
            mtInit(); // call the onload handler
        }
    }, 10);
}

/* for other browsers */
window.onload = mtInit;

// END: fast browser onload init

&lt;mt:IfBlog&gt;
&lt;mt:IfRegistrationAllowed&gt;
/***
 * If request contains a &apos;#_login&apos; or &apos;#_logout&apos; hash, use this to
 * also delete the blog-side user cookie, since we&apos;re coming back from
 * a login, logout or edit profile operation.
 */
var clearCookie = ( window.location.hash &amp;&amp; window.location.hash.match( /^#_log(in|out)/ ) ) ? true : false;
if (clearCookie) {
    // clear any logged in state
    mtClearUser();
    if (RegExp.$1 == &apos;in&apos;)
        mtFetchUser();
} else {
    &lt;mt:Ignore&gt;
    /***
     * Uncondition this call to fetch the current user state (if available)
     * from MT upon page load if no user cookie is already present.
     * This is okay if you have a private install, such as an Intranet;
     * not recommended for public web sites!
     */
    &lt;/mt:Ignore&gt;
    if ( is_preview &amp;&amp; !user )
        mtFetchUser();
}
&lt;/mt:IfRegistrationAllowed&gt;
&lt;/mt:IfBlog&gt;
</text></template>
<template id='88' blog_id='3' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606221546' identifier='comment_listing' modified_on='20110606221546' name='コメント一覧' rebuild_me='1' type='comment_listing' current_revision='0'><text>{
    &quot;direction&quot;: &quot;&lt;mt:Var name=&quot;commentDirection&quot;&gt;&quot;,
    &quot;comments&quot;: &quot;&lt;mt:Comments sort_order=&quot;$commentDirection&quot;&gt;&lt;$mt:Include module=&quot;コメント詳細&quot; replace=&quot;\&quot;,&quot;\\&quot; replace=&apos;&quot;&apos;,&apos;\&quot;&apos; strip_linefeeds=&quot;1&quot;$&gt;&lt;/mt:Comments&gt;&quot;
}</text></template>
<template id='89' blog_id='3' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606221546' identifier='template_304' modified_by='1' modified_on='20120730141843' name='外部ファイル読み込み' rebuild_me='0' type='custom' current_revision='4' cache_expire_type='0' include_with_ssi='0' revision='4'><text>&lt;!-- PC --&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/common/css/import.css&quot; media=&quot;only screen and (min-width: 911px)&quot; /&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/common/css/lightbox.css&quot; media=&quot;only screen and (min-width: 911px)&quot; /&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot;  href=&quot;/news/css/style.css&quot; media=&quot;only screen and (min-width: 911px)&quot; /&gt;

&lt;!-- スマホ --&gt;
&lt;link href=&quot;/common/css/sp_base.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; media=&quot;only screen and (min-width: 0px) and (max-width: 640px)&quot; &gt;
&lt;link href=&quot;/common/css/sp_layout.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; media=&quot;only screen and (min-width: 0px) and (max-width: 640px)&quot; &gt;
&lt;link href=&quot;/news/css/sp_style.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; media=&quot;only screen and (min-width: 0px) and (max-width: 640px)&quot; &gt;

&lt;!--[if IE ]&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/common/css/import.css&quot; media=&quot;all&quot; /&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/common/css/lightbox.css&quot; media=&quot;screen&quot; /&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot;  href=&quot;/news/css/style.css&quot; media=&quot;all&quot; /&gt;
&lt;![endif]--&gt;

&lt;script src=&quot;/common/js/prototype.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;/common/js/scriptaculous.js?load=effects,builder&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;/common/js/lightbox.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;/common/js/setQueryParamNew.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;/common/js/mjl.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;/common/js/run.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;/common/js/ga.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;/head&gt;</text></template>
<template id='90' blog_id='3' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606221546' identifier='template_254' modified_by='1' modified_on='20130423185337' name='月別一覧' rebuild_me='0' type='archive' current_revision='6' cache_expire_type='0' include_with_ssi='0' revision='6'><text>&lt;$mt:Include module=&quot;DOCTYPE&quot;$&gt;
&lt;title&gt;最新情報｜声優・ナレーターなら　日本ナレーション演技研究所&lt;/title&gt;
&lt;$mt:Include module=&quot;外部ファイル読み込み&quot;$&gt;

&lt;body id=&quot;news&quot; onload=&quot;addLinkURL(&apos;code&apos;);return false;&quot;&gt;
&lt;a name=&quot;pagetop&quot; id=&quot;pagetop&quot;&gt;&lt;/a&gt;
&lt;div id=&quot;wrapper&quot;&gt;
&lt;$mt:Include module=&quot;ヘッダー&quot;$&gt;
&lt;p class=&quot;pankuzu normal&quot;&gt;&lt;a href=&quot;../../index.html&quot;&gt;日ナレトップ&lt;/a&gt;  ＞  最新情報&lt;/p&gt;
&lt;!-- Container --&gt;
&lt;div id=&quot;container&quot;&gt;
&lt;div id=&quot;contents&quot;&gt;
&lt;div class=&quot;right_contents&quot;&gt;
&lt;h2 class=&quot;index_ttl&quot;&gt;&lt;img src=&quot;../../images/h2_tit01.jpg&quot; width=&quot;707&quot; height=&quot;128&quot; alt=&quot;日ナレ最新情報&quot; /&gt;&lt;/h2&gt;
&lt;!-- Sec Contents --&gt;
&lt;div class=&quot;sec_main&quot;&gt;
&lt;!-- Start --&gt;
&lt;div class=&quot;line-none_column&quot;&gt;
&lt;mt:Entries&gt;
&lt;dl class=&quot;normal&quot;&gt;
&lt;dt&gt;&lt;mt:EntryDate format=&quot;%Y/%m/%d&quot;&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;a href=&quot;&lt;mt:EntryPermalink archive_type=&quot;Individual&quot;&gt;&quot;&gt;&lt;mt:EntryTitle&gt;&lt;/a&gt;&lt;/dd&gt;
&lt;/dl&gt;
&lt;/mt:Entries&gt;
&lt;/div&gt;
&lt;!-- End --&gt;
&lt;p class=&quot;sp_btback&quot;&gt;&lt;a href=&quot;javascript:history.back()&quot;&gt;戻る&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;!-- Sec Contents End --&gt;
&lt;/div&gt;
&lt;div class=&quot;left_contents&quot;&gt;
&lt;h4&gt;最新情報&lt;/h4&gt;
&lt;$mt:widgetset name=&quot;左メニュー&quot;$&gt;
&lt;$mt:Include module=&quot;下層左パーツ&quot;$&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;ul class=&quot;sub_nav&quot;&gt;
&lt;li class=&quot;hd_menu01&quot;&gt;&lt;a href=&quot;/faq/index.html&quot;&gt;よくあるご質問&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;hd_menu02&quot;&gt;&lt;a href=&quot;/contact/index.html&quot;&gt;お問い合わせ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;!-- Container End --&gt;
&lt;$mt:Include module=&quot;フッター&quot;$&gt;
&lt;/div&gt;

&lt;$mt:Include module=&quot;測定タグ&quot;$&gt;
&lt;/body&gt;
&lt;/html&gt;</text></template>
<template id='91' blog_id='3' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606221546' identifier='entry' modified_by='1' modified_on='20130423185344' name='最新情報詳細' rebuild_me='0' type='individual' current_revision='8' cache_expire_type='0' include_with_ssi='0' revision='8'><text>&lt;$mt:Include module=&quot;DOCTYPE&quot;$&gt;
&lt;title&gt;最新情報｜声優・ナレーターなら　日本ナレーション演技研究所&lt;/title&gt;
&lt;$mt:Include module=&quot;外部ファイル読み込み&quot;$&gt;

&lt;body id=&quot;news&quot; onload=&quot;addLinkURL(&apos;code&apos;);return false;&quot;&gt;
&lt;a name=&quot;pagetop&quot; id=&quot;pagetop&quot;&gt;&lt;/a&gt;
&lt;div id=&quot;wrapper&quot;&gt;
&lt;$mt:Include module=&quot;ヘッダー&quot;$&gt;
&lt;p class=&quot;pankuzu normal&quot;&gt;&lt;a href=&quot;../../../index.html&quot;&gt;日ナレトップ&lt;/a&gt;  ＞  最新情報&lt;/p&gt;
&lt;!-- Container --&gt;
&lt;div id=&quot;container&quot;&gt;
&lt;div id=&quot;contents&quot;&gt;
&lt;div class=&quot;right_contents&quot;&gt;
&lt;h2 class=&quot;index_ttl&quot;&gt;&lt;img src=&quot;../../images/h2_tit01.jpg&quot; width=&quot;707&quot; height=&quot;128&quot; alt=&quot;日ナレ最新情報&quot; /&gt;&lt;/h2&gt;
&lt;!-- Sec Contents --&gt;
&lt;div class=&quot;sec_main&quot;&gt;
&lt;!-- Start --&gt;
&lt;div class=&quot;line-none_column&quot;&gt;
&lt;p class=&quot;date normal&quot;&gt;&lt;mt:EntryDate format=&quot;%Y.%m.%d&quot;&gt;&lt;/p&gt;
&lt;h3 class=&quot;large&quot;&gt;&lt;strong&gt;&lt;$MTEntryTitle$&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;div class=&quot;normal&quot;&gt;
&lt;$MTEntryBody$&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;!-- End --&gt;
&lt;p class=&quot;sp_btback&quot;&gt;&lt;a href=&quot;javascript:history.back()&quot;&gt;戻る&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;!-- Sec Contents End --&gt;
&lt;/div&gt;
&lt;div class=&quot;left_contents&quot;&gt;
&lt;h4&gt;最新情報&lt;/h4&gt;
&lt;$mt:widgetset name=&quot;左メニュー&quot;$&gt;
&lt;$mt:Include module=&quot;下層左パーツ&quot;$&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;ul class=&quot;sub_nav&quot;&gt;
&lt;li class=&quot;hd_menu01&quot;&gt;&lt;a href=&quot;/faq/index.html&quot;&gt;よくあるご質問&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;hd_menu02&quot;&gt;&lt;a href=&quot;/contact/index.html&quot;&gt;お問い合わせ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;!-- Container End --&gt;
&lt;$mt:Include module=&quot;フッター&quot;$&gt;
&lt;/div&gt;

&lt;$mt:Include module=&quot;測定タグ&quot;$&gt;
&lt;/body&gt;
&lt;/html&gt;</text></template>
<template id='92' blog_id='3' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606221546' identifier='comment_response' modified_on='20110606221546' name='コメント完了' rebuild_me='1' type='comment_response' current_revision='0'><text>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;
    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; id=&quot;sixapart-standard&quot;&gt;
&lt;head&gt;


&lt;mt:If name=&quot;comment_confirmation&quot;&gt;
    &lt;mt:Ignore&gt;&lt;!-- Success message when comment has been submitted --&gt;&lt;/mt:Ignore&gt;
    &lt;$mt:Var name=&quot;page_title&quot; value=&quot;確認&quot;$&gt;
    &lt;$mt:Var name=&quot;message&quot; value=&quot;&lt;p&gt;コメントを投稿しました。&lt;/p&gt;&quot;$&gt;
&lt;mt:Else name=&quot;comment_pending&quot;&gt;
    &lt;mt:Ignore&gt;&lt;!-- Pending message when comment is being held for review --&gt;&lt;/mt:Ignore&gt;
    &lt;$mt:Var name=&quot;page_title&quot; value=&quot;コメントありがとうございます。&quot;$&gt;
    &lt;$mt:Var name=&quot;message&quot; value=&quot;&lt;p&gt;コメントは現在承認されるまで公開を保留されています。&lt;/p&gt;&quot;$&gt;
&lt;mt:Else name=&quot;comment_error&quot;&gt;
    &lt;mt:Ignore&gt;&lt;!-- Error message when comment submission fails --&gt;&lt;/mt:Ignore&gt;
    &lt;$mt:Var name=&quot;page_title&quot; value=&quot;コメント投稿エラー&quot;$&gt;
    &lt;mt:SetVarBlock name=&quot;message&quot;&gt;&lt;p&gt;コメントを投稿できませんでした。エラー: &lt;$mt:ErrorMessage$&gt;&lt;/p&gt;&lt;/mt:SetVarBlock&gt;
&lt;/mt:If&gt;


    &lt;$mt:Include module=&quot;HTMLヘッダー&quot;$&gt;
    &lt;title&gt;&lt;$mt:BlogName encode_html=&quot;1&quot;$&gt;: &lt;$mt:Var name=&quot;page_title&quot;$&gt;&lt;/title&gt;
&lt;/head&gt;
&lt;body id=&quot;&lt;$mt:BlogThemeID$&gt;&quot; class=&quot;&lt;$mt:Var name=&quot;body_class&quot;$&gt; &lt;$mt:Var name=&quot;page_layout&quot;$&gt;&quot;&gt;
    &lt;div id=&quot;container&quot;&gt;
        &lt;div id=&quot;container-inner&quot;&gt;


            &lt;$mt:Include module=&quot;バナーヘッダー&quot;$&gt;


            &lt;div id=&quot;content&quot;&gt;
                &lt;div id=&quot;content-inner&quot;&gt;


                    &lt;div id=&quot;alpha&quot;&gt;
                        &lt;div id=&quot;alpha-inner&quot;&gt;
                            &lt;h1 id=&quot;page-title&quot;&gt;&lt;$mt:Var name=&quot;page_title&quot;$&gt;&lt;/h1&gt;
                            &lt;$mt:Var name=&quot;message&quot;$&gt;
                            &lt;p&gt;&lt;a href=&quot;&lt;mt:If name=&quot;comment_error&quot;&gt;javascript:history.back()&lt;mt:Else&gt;&lt;$mt:EntryLink$&gt;&lt;/mt:If&gt;&quot;&gt;元の記事&lt;/a&gt;に戻る&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;


                    &lt;$mt:Include module=&quot;サイドバー&quot;$&gt;


                &lt;/div&gt;
            &lt;/div&gt;


            &lt;$mt:Include module=&quot;バナーフッター&quot;$&gt;


        &lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</text></template>
<template id='93' blog_id='3' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606221546' identifier='main_index' modified_by='1' modified_on='20130423185331' name='メインページ' outfile='index.html' rebuild_me='1' type='index' current_revision='5' cache_expire_type='0' include_with_ssi='0' revision='5'><text>&lt;$mt:Include module=&quot;DOCTYPE&quot;$&gt;
&lt;title&gt;最新情報｜声優・ナレーターなら　日本ナレーション演技研究所&lt;/title&gt;
&lt;$mt:Include module=&quot;外部ファイル読み込み&quot;$&gt;

&lt;body id=&quot;news&quot; onload=&quot;addLinkURL(&apos;code&apos;);return false;&quot;&gt;
&lt;a name=&quot;pagetop&quot; id=&quot;pagetop&quot;&gt;&lt;/a&gt;
&lt;div id=&quot;wrapper&quot;&gt;
&lt;$mt:Include module=&quot;ヘッダー&quot;$&gt;
&lt;p class=&quot;pankuzu normal&quot;&gt;&lt;a href=&quot;../index.html&quot;&gt;日ナレトップ&lt;/a&gt;  ＞  最新情報&lt;/p&gt;
&lt;!-- Container --&gt;
&lt;div id=&quot;container&quot;&gt;
&lt;div id=&quot;contents&quot;&gt;
&lt;div class=&quot;right_contents&quot;&gt;
&lt;h2 class=&quot;index_ttl&quot;&gt;&lt;img src=&quot;images/h2_tit01.jpg&quot; width=&quot;707&quot; height=&quot;128&quot; alt=&quot;日ナレ最新情報&quot; /&gt;&lt;/h2&gt;
&lt;!-- Sec Contents --&gt;
&lt;div class=&quot;sec_main&quot;&gt;
&lt;!-- Start --&gt;
&lt;div class=&quot;line-none_column&quot;&gt;
&lt;mt:Entries&gt;
&lt;dl class=&quot;normal&quot;&gt;
&lt;dt&gt;&lt;mt:EntryDate format=&quot;%Y/%m/%d&quot;&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;mtifnonempty tag=&quot;urldata&quot;&gt;  
&lt;a href=&quot;&lt;mt:urldata&gt;&quot;&gt;&lt;$MTEntryTitle$&gt;&lt;/a&gt;  
&lt;mtelse&gt;  
&lt;a href=&quot;&lt;mt:EntryPermalink archive_type=&quot;Individual&quot;&gt;&quot;&gt;&lt;$mt:EntryTitle$&gt;&lt;/a&gt;
&lt;/mtelse&gt;  
&lt;/mtifnonempty&gt;  
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/mt:Entries&gt;
&lt;/div&gt;
&lt;!-- End --&gt;
&lt;p class=&quot;sp_btback&quot;&gt;&lt;a href=&quot;javascript:history.back()&quot;&gt;戻る&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;!-- Sec Contents End --&gt;
&lt;/div&gt;
&lt;div class=&quot;left_contents&quot;&gt;
&lt;h4&gt;最新情報&lt;/h4&gt;
&lt;$mt:widgetset name=&quot;左メニュー&quot;$&gt;
&lt;$mt:Include module=&quot;下層左パーツ&quot;$&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;ul class=&quot;sub_nav&quot;&gt;
&lt;li class=&quot;hd_menu01&quot;&gt;&lt;a href=&quot;/faq/index.html&quot;&gt;よくあるご質問&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;hd_menu02&quot;&gt;&lt;a href=&quot;/contact/index.html&quot;&gt;お問い合わせ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;!-- Container End --&gt;
&lt;$mt:Include module=&quot;フッター&quot;$&gt;
&lt;/div&gt;

&lt;$mt:Include module=&quot;測定タグ&quot;$&gt;
&lt;/body&gt;
&lt;/html&gt;</text></template>
<template id='94' blog_id='3' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606221546' identifier='template_302' modified_on='20110606221546' name='左メニュー' rebuild_me='1' type='widgetset' current_revision='0' modulesets='83'><text>&lt;mt:include widget=&quot;月別アーカイブ&quot;&gt;</text></template>
<template id='95' blog_id='4' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606223353' identifier='comment_preview' modified_on='20110606223353' name='コメントプレビュー' rebuild_me='1' type='comment_preview' current_revision='0'><text>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;
    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; id=&quot;sixapart-standard&quot;&gt;
&lt;head&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
    /* &lt;![CDATA[ */
    var user = &lt;$mt:UserSessionState$&gt;;
    var is_preview = true;
    /* ]]&gt; */
    &lt;/script&gt;
    &lt;$mt:Include module=&quot;HTMLヘッダー&quot;$&gt;
    &lt;title&gt;&lt;$mt:BlogName encode_html=&quot;1&quot;$&gt;: コメントのプレビュー&lt;/title&gt;
&lt;/head&gt;
&lt;body id=&quot;&lt;$mt:BlogThemeID$&gt;&quot; class=&quot;mt-comment-preview &lt;$mt:Var name=&quot;page_layout&quot;$&gt;&quot; onload=&quot;mtEntryOnLoad()&quot; onunload=&quot;mtEntryOnUnload()&quot;&gt;
    &lt;div id=&quot;container&quot;&gt;
        &lt;div id=&quot;container-inner&quot;&gt;


            &lt;$mt:Include module=&quot;バナーヘッダー&quot;$&gt;


            &lt;div id=&quot;content&quot;&gt;
                &lt;div id=&quot;content-inner&quot;&gt;


                    &lt;div id=&quot;alpha&quot;&gt;
                        &lt;div id=&quot;alpha-inner&quot;&gt;


                            &lt;h1 id=&quot;page-title&quot;&gt;&lt;$mt:Var name=&quot;page_title&quot;$&gt;&lt;/h1&gt;


&lt;mt:Ignore&gt;&lt;!-- Comment Preview --&gt;&lt;/mt:Ignore&gt;
                            &lt;div class=&quot;comment&quot; id=&quot;comment-&lt;$mt:CommentID$&gt;&quot;&gt;
                                &lt;div class=&quot;inner&quot;&gt;
                                    &lt;div class=&quot;comment-header&quot;&gt;
                                        &lt;div class=&quot;asset-meta&quot;&gt;
                                            &lt;span class=&quot;byline&quot;&gt;
                                                &lt;$mt:CommentAuthorIdentity$&gt;
    &lt;mt:IfCommentParent&gt;
                                                &lt;span class=&quot;vcard author&quot;&gt;&lt;$mt:CommentAuthorLink$&gt;&lt;/span&gt;から&lt;a href=&quot;&lt;mt:CommentParent&gt;&lt;$mt:CommentLink$&gt;&lt;/mt:CommentParent&gt;&quot;&gt;&lt;mt:CommentParent&gt;&lt;$mt:CommentAuthor$&gt;&lt;/mt:CommentParent&gt;&lt;/a&gt;への返信
    &lt;mt:Else&gt;
                                                &lt;span class=&quot;vcard author&quot;&gt;&lt;$mt:CommentAuthorLink$&gt;&lt;/span&gt;
    &lt;/mt:IfCommentParent&gt;
                                                | &lt;a href=&quot;&lt;$mt:CommentLink$&gt;&quot;&gt;&lt;abbr class=&quot;published&quot; title=&quot;&lt;$mt:CommentDate format_name=&quot;iso8601&quot;$&gt;&quot;&gt;&lt;$mt:CommentDate$&gt;&lt;/abbr&gt;&lt;/a&gt;
                                            &lt;/span&gt;
                                        &lt;/div&gt;
                                    &lt;/div&gt;
                                    &lt;div class=&quot;comment-content&quot;&gt;
                                        &lt;$mt:CommentBody$&gt;
                                    &lt;/div&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;


&lt;mt:Ignore&gt;&lt;!-- Comment Form --&gt;&lt;/mt:Ignore&gt;
                            &lt;div class=&quot;comments-open&quot; id=&quot;comments-open&quot;&gt;
                                &lt;h2 class=&quot;comments-open-header&quot;&gt;コメントする&lt;/h2&gt;
                                &lt;div class=&quot;comments-open-content&quot;&gt;
                                    &lt;div id=&quot;comment-greeting&quot;&gt;&lt;/div&gt;
                                    &lt;form method=&quot;post&quot; action=&quot;&lt;$mt:CGIPath$&gt;&lt;$mt:CommentScript$&gt;&quot; name=&quot;comments_form&quot; id=&quot;comments-form&quot; onsubmit=&quot;return mtCommentOnSubmit(this)&quot;&gt;
                                        &lt;input type=&quot;hidden&quot; name=&quot;static&quot; value=&quot;1&quot; /&gt;
                                        &lt;input type=&quot;hidden&quot; name=&quot;armor&quot; value=&quot;1&quot; /&gt;
                                        &lt;input type=&quot;hidden&quot; name=&quot;preview&quot; value=&quot;&quot; /&gt;
                                        &lt;input type=&quot;hidden&quot; name=&quot;entry_id&quot; value=&quot;&lt;$mt:EntryID$&gt;&quot; /&gt;
                                        &lt;input type=&quot;hidden&quot; name=&quot;__lang&quot; value=&quot;&lt;$mt:BlogLanguage$&gt;&quot; /&gt;
&lt;mt:IfCommentParent&gt;
                                            &lt;input type=&quot;hidden&quot; name=&quot;parent_id&quot; value=&quot;&lt;$mt:CommentParentID escape=&quot;html&quot;$&gt;&quot; id=&quot;comment-parent-id&quot;&gt;
&lt;/mt:IfCommentParent&gt;
                                        &lt;div id=&quot;comments-open-data&quot;&gt;
                                            &lt;div id=&quot;comment-form-name&quot;&gt;
                                                &lt;label for=&quot;comment-author&quot;&gt;名前&lt;/label&gt;
                                                &lt;input id=&quot;comment-author&quot; name=&quot;author&quot; size=&quot;30&quot; value=&quot;&lt;$mt:CommentAuthor encode_html=&quot;1&quot;$&gt;&quot; onfocus=&quot;mtShowCaptcha()&quot; /&gt;
                                            &lt;/div&gt;
                                            &lt;div id=&quot;comment-form-email&quot;&gt;
                                                &lt;label for=&quot;comment-email&quot;&gt;電子メール&lt;/label&gt;
                                                &lt;input id=&quot;comment-email&quot; name=&quot;email&quot; size=&quot;30&quot; value=&quot;&lt;$mt:CommentEmail encode_html=&quot;1&quot;$&gt;&quot; onfocus=&quot;mtShowCaptcha()&quot; /&gt;
                                            &lt;/div&gt;
                                            &lt;div id=&quot;comment-form-url&quot;&gt;
                                                &lt;label for=&quot;comment-url&quot;&gt;URL&lt;/label&gt;
                                                &lt;input id=&quot;comment-url&quot; name=&quot;url&quot; size=&quot;30&quot; value=&quot;&lt;$mt:CommentURL encode_html=&quot;1&quot;$&gt;&quot; onfocus=&quot;mtShowCaptcha()&quot; /&gt;
                                            &lt;/div&gt;
                                        &lt;/div&gt;
&lt;mt:IfCommentParent&gt;
                                        &lt;div id=&quot;comment-form-reply&quot;&gt;
                                            &lt;input type=&quot;checkbox&quot; id=&quot;comment-reply&quot; name=&quot;comment_reply&quot; value=&quot;&lt;$mt:CommentParentID escape=&quot;html&quot;$&gt;&quot; checked=&quot;checked&quot; onclick=&quot;mtSetCommentParentID()&quot; /&gt;
                                            &lt;label for=&quot;comment-reply&quot; id=&quot;comment-reply-label&quot;&gt;&lt;mt:CommentParent&gt;&lt;$mt:CommentAuthor$&gt;&lt;/mt:CommentParent&gt;からのコメントに返信&lt;/label&gt;
                                        &lt;/div&gt;
&lt;/mt:IfCommentParent&gt;
                                        &lt;div id=&quot;comments-open-text&quot;&gt;
                                            &lt;label for=&quot;comment-text&quot;&gt;コメント &lt;mt:IfAllowCommentHTML&gt;(スタイル用のHTMLタグを使えます)&lt;/mt:IfAllowCommentHTML&gt;&lt;/label&gt;
                                            &lt;textarea id=&quot;comment-text&quot; name=&quot;text&quot; rows=&quot;15&quot; cols=&quot;50&quot; onfocus=&quot;mtShowCaptcha()&quot;&gt;&lt;$mt:CommentBody autolink=&quot;0&quot; sanitize=&quot;0&quot; convert_breaks=&quot;0&quot; encode_html=&quot;1&quot;$&gt;&lt;/textarea&gt;
                                        &lt;/div&gt;
                                        &lt;div id=&quot;comments-open-captcha&quot;&gt;&lt;/div&gt;
                                        &lt;div id=&quot;comments-open-footer&quot;&gt;
                                            &lt;input type=&quot;submit&quot; accesskey=&quot;v&quot; name=&quot;preview_button&quot; id=&quot;comment-preview&quot; value=&quot;プレビュー&quot; onclick=&quot;this.form.preview.value=&apos;1&apos;;&quot; /&gt;
                                            &lt;input type=&quot;submit&quot; accesskey=&quot;s&quot; name=&quot;post&quot; id=&quot;comment-submit&quot; value=&quot;投稿&quot; /&gt;
                                            &lt;input type=&quot;button&quot; name=&quot;cancel&quot; id=&quot;comment-cancel&quot; value=&quot;キャンセル&quot; onclick=&quot;window.location=&apos;&lt;$mt:EntryPermalink$&gt;&apos;&quot; /&gt;
                                        &lt;/div&gt;
                                    &lt;/form&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;


                    &lt;$mt:Include module=&quot;サイドバー&quot;$&gt;


                &lt;/div&gt;
            &lt;/div&gt;


            &lt;$mt:Include module=&quot;バナーフッター&quot;$&gt;


        &lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</text></template>
<template id='96' blog_id='4' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606223353' identifier='search_results' modified_on='20110606223353' name='検索結果' rebuild_me='1' type='search_results' current_revision='0'><text>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;
    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; id=&quot;sixapart-standard&quot;&gt;
&lt;head&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
    /* &lt;![CDATA[ */
    var user = &lt;$mt:UserSessionState$&gt;;
    /* ]]&gt; */
    &lt;/script&gt;
    &lt;$mt:Include module=&quot;HTMLヘッダー&quot;$&gt;
    &lt;title&gt;&lt;$mt:BlogName encode_html=&quot;1&quot;$&gt;: 検索結果&lt;/title&gt;
    &lt;mt:Ignore&gt;Below Javascript adds ajax search capability&lt;/mt:Ignore&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
    /* &lt;![CDATA[ */
    &lt;mt:IfMoreResults&gt;
    function getResults(page) {
        page = parseInt(page);
        if (timer) window.clearTimeout(timer);
        var xh = mtGetXmlHttp();
        if (!xh) return false;
        var res = results[page];
        if (!res) return;
        var url = res[&apos;next_url&apos;];
        if (!url) return;

        xh.open(&apos;GET&apos;, url + &apos;&amp;format=js&apos;, true);
        xh.onreadystatechange = function() {
            if ( xh.readyState == 4 ) {
                if ( xh.status &amp;&amp; ( xh.status != 200 ) ) {
                    // error - ignore
                } else {
                    try {
                        var page_results = eval(&quot;(&quot; + xh.responseText + &quot;)&quot;);
                        if ( page_results[&apos;error&apos;] == null )
                            results[page + 1] = page_results[&apos;result&apos;];
                    } catch (e) {
                    }
                }
            }
        };
        xh.send(null);
    }

    function swapContent(direction) {
        if ( direction == undefined ) direction = 1;
        var page_span = document.getElementById(&apos;current-page&apos;);
        if (!page_span) return true;
        var next_page = direction + parseInt(page_span.innerHTML);
        var res = results[next_page];
        if (!res) return true;
        var content = res[&apos;content&apos;];
        if (!content) return true;
        var div = document.getElementById(&apos;search-results&apos;);
        if (!div) return true;
        div.innerHTML = content;
        timer = window.setTimeout(&quot;getResults(&quot; + next_page + &quot;)&quot;, 1*1000);
        window.scroll(0, 0);
        return false;
    }
    &lt;mt:Else&gt;&lt;mt:IfPreviousResults&gt;
    function swapContent(direction) {
        return true;
    }&lt;/mt:IfPreviousResults&gt;
    &lt;/mt:IfMoreResults&gt;
    /* ]]&gt; */
    &lt;/script&gt;
&lt;/head&gt;
&lt;body id=&quot;&lt;$mt:BlogThemeID$&gt;&quot; class=&quot;mt-search-results &lt;$mt:Var name=&quot;page_layout&quot;$&gt;&quot;&gt;
    &lt;div id=&quot;container&quot;&gt;
        &lt;div id=&quot;container-inner&quot;&gt;


            &lt;$mt:Include module=&quot;バナーヘッダー&quot;$&gt;


            &lt;div id=&quot;content&quot;&gt;
                &lt;div id=&quot;content-inner&quot;&gt;


                    &lt;div id=&quot;alpha&quot;&gt;
                        &lt;div id=&quot;alpha-inner&quot;&gt;

&lt;mt:Ignore&gt;&lt;!--
    Below is the block to show search results.
    This makes an independent block to support
    Ajax-based background retrieval of the next search results.
--&gt;&lt;/mt:Ignore&gt;
&lt;mt:SetVarTemplate id=&quot;search_results&quot; name=&quot;search_results&quot;&gt;  
&lt;mt:SearchResults&gt;
    &lt;mt:SearchResultsHeader&gt;
                            &lt;div id=&quot;search-results&quot;&gt;
                                &lt;span id=&quot;current-page&quot; class=&quot;hidden&quot;&gt;&lt;$mt:CurrentPage$&gt;&lt;/span&gt;
                                &lt;h1 id=&quot;page-title&quot; class=&quot;search-results-header&quot;&gt;
        &lt;mt:IfStraightSearch&gt;
                                    「&lt;$mt:SearchString$&gt;」と一致するもの
        &lt;/mt:IfStraightSearch&gt;
        &lt;mt:IfTagSearch&gt;
                                    タグ「&lt;$mt:SearchString$&gt;」が付けられているもの
        &lt;/mt:IfTagSearch&gt;
                                &lt;/h1&gt;
                                &lt;div class=&quot;search-results-container autopagerize_page_element&quot;&gt;
    &lt;/mt:SearchResultsHeader&gt;
                                    &lt;$mt:Include module=&quot;ブログ記事の概要&quot; hide_counts=&quot;1&quot;$&gt;
    &lt;mt:SearchResultsFooter&gt;
                                &lt;/div&gt;&lt;div class=&quot;autopagerize_insert_before&quot;&gt;&lt;/div&gt;

    &lt;mt:Ignore&gt;&lt;!-- Used with the ajax search capability of the new search class --&gt;&lt;/mt:Ignore&gt;
                                &lt;div class=&quot;content-nav&quot;&gt;
                                    &lt;mt:IfPreviousResults&gt;&lt;a href=&quot;&lt;$mt:PreviousLink$&gt;&quot; rel=&quot;prev&quot; onclick=&quot;return swapContent(-1);&quot;&gt;&amp;lt; 前&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;/mt:IfPreviousResults&gt;&lt;mt:PagerBlock&gt;&lt;mt:IfCurrentPage&gt;&lt;$mt:Var name=&quot;__value__&quot;$&gt;&lt;mt:Else&gt;&lt;a href=&quot;&lt;$mt:PagerLink$&gt;&quot;&gt;&lt;$mt:Var name=&quot;__value__&quot;$&gt;&lt;/a&gt;&lt;/mt:IfCurrentPage&gt;&lt;mt:Unless name=&quot;__last__&quot;&gt;&amp;nbsp;&lt;/mt:Unless&gt;&lt;/mt:PagerBlock&gt;&lt;mt:IfMoreResults&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;&lt;$mt:NextLink$&gt;&quot; rel=&quot;next&quot; onclick=&quot;return swapContent();&quot;&gt;次 &amp;gt;&lt;/a&gt;&lt;/mt:IfMoreResults&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;
    &lt;/mt:SearchResultsFooter&gt;
&lt;/mt:SearchResults&gt;
&lt;/mt:SetVarTemplate&gt;
&lt;mt:Ignore&gt;&lt;!-- Display search results constructed in the block above --&gt;&lt;/mt:Ignore&gt;
&lt;$mt:Var name=&quot;search_results&quot;$&gt;


&lt;mt:Ignore&gt;&lt;!-- Display no results message --&gt;&lt;/mt:Ignore&gt;
&lt;mt:NoSearchResults&gt;
                            &lt;h1 id=&quot;page-title&quot; class=&quot;search-results-header&quot;&gt;
    &lt;mt:IfStraightSearch&gt;
                                「&lt;$mt:SearchString$&gt;」と一致するもの
    &lt;/mt:IfStraightSearch&gt;
    &lt;mt:IfTagSearch&gt;
                                タグ「&lt;$mt:SearchString$&gt;」が付けられているもの
    &lt;/mt:IfTagSearch&gt;
                            &lt;/h1&gt;
                            &lt;p&gt;「&lt;$mt:SearchString$&gt;」と一致する結果は見つかりませんでした。&lt;/p&gt;
&lt;/mt:NoSearchResults&gt;


&lt;mt:Ignore&gt;&lt;!-- Display instructions for searching if search script was accessed without a query --&gt;&lt;/mt:Ignore&gt;
&lt;mt:NoSearch&gt;
                            &lt;h1 id=&quot;page-title&quot; class=&quot;search-results-header&quot;&gt;例&lt;/h1&gt;
                            &lt;p&gt;すべての単語が順序に関係なく検索されます。フレーズで検索したいときは引用符で囲んでください。&lt;/p&gt;
                            &lt;blockquote&gt;
                                &lt;p&gt;&lt;code&gt;&quot;movable type&quot;&lt;/code&gt;&lt;/p&gt;
                            &lt;/blockquote&gt;
                            &lt;p&gt;AND、OR、NOTを入れることで論理検索を行うこともできます。&lt;/p&gt;
                            &lt;blockquote&gt;
                                &lt;p&gt;&lt;code&gt;個人 OR 出版&lt;/code&gt;&lt;/p&gt;
                                &lt;p&gt;&lt;code&gt;個人 NOT 出版&lt;/code&gt;&lt;/p&gt;
                            &lt;/blockquote&gt;
&lt;/mt:NoSearch&gt;

&lt;mt:Ignore&gt;&lt;!-- Used with the ajax search capability of the new search class --&gt;&lt;/mt:Ignore&gt;
&lt;mt:IfMoreResults&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
&lt;!--
var div = document.getElementById(&apos;search-results&apos;);
var results = {
    &apos;&lt;$mt:CurrentPage$&gt;&apos;: {
        &apos;content&apos;: div.innerHTML,
        &apos;next_url&apos;: &apos;&lt;$mt:NextLink$&gt;&apos;
    }
};
var timer = window.setTimeout(&quot;getResults(&quot; + &lt;$mt:CurrentPage$&gt; + &quot;)&quot;, 1*1000);
//--&gt;
&lt;/script&gt;
&lt;/mt:IfMoreResults&gt;


                        &lt;/div&gt;
                    &lt;/div&gt;

                    &lt;$mt:Include module=&quot;サイドバー&quot;$&gt;


                &lt;/div&gt;
            &lt;/div&gt;


            &lt;$mt:Include module=&quot;バナーフッター&quot;$&gt;


        &lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</text></template>
<template id='97' blog_id='4' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606223353' identifier='recent_assets' modified_on='20110606223353' name='アイテム' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:If tag=&quot;AssetCount&quot;&gt;
    &lt;mt:Assets type=&quot;image&quot; lastn=&quot;10&quot;&gt;
        &lt;mt:AssetsHeader&gt;
&lt;div class=&quot;widget-recent-assets widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;アイテム&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:AssetsHeader&gt;
        &lt;li class=&quot;item&quot;&gt;&lt;a class=&quot;asset-image&quot; href=&quot;&lt;$mt:AssetURL$&gt;&quot;&gt;&lt;img src=&quot;&lt;$mt:AssetThumbnailURL height=&quot;70&quot;$&gt;&quot; class=&quot;asset-img-thumb&quot; alt=&quot;&lt;$mt:AssetLabel$&gt;&quot; title=&quot;&lt;$mt:AssetLabel$&gt;&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
        &lt;mt:AssetsFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:AssetsFooter&gt;
    &lt;/mt:Assets&gt;
&lt;/mt:If&gt;
</text></template>
<template id='98' blog_id='4' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606223353' identifier='monthly_archive_dropdown' modified_on='20110606223353' name='月別アーカイブ(ドロップダウン)' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Monthly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Monthly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-monthly-dropdown widget-archive widget&quot;&gt;
   &lt;h3 class=&quot;widget-header&quot;&gt;&lt;a href=&quot;&lt;$mt:BlogURL$&gt;archives.html&quot;&gt;アーカイブ&lt;/a&gt;&lt;/h3&gt;
   &lt;div class=&quot;widget-content&quot;&gt;
      &lt;select onchange=&quot;nav(this)&quot;&gt;
         &lt;option&gt;月を選択...&lt;/option&gt;
         &lt;/mt:ArchiveListHeader&gt;
         &lt;option value=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt;&lt;/option&gt;
         &lt;mt:ArchiveListFooter&gt;
      &lt;/select&gt;
   &lt;/div&gt;
&lt;/div&gt;
&lt;script type=&quot;text/javascript&quot; charset=&quot;utf-8&quot;&gt;
/* &lt;![CDATA[ */
function nav(sel) {
   if (sel.selectedIndex == -1) return;
   var opt = sel.options[sel.selectedIndex];
   if (opt &amp;&amp; opt.value)
      location.href = opt.value;
}
/* ]]&gt; */
&lt;/script&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
</text></template>
<template id='99' blog_id='4' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606223353' identifier='category_archive_list' modified_on='20110606223353' name='カテゴリアーカイブ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Category&quot;&gt;
&lt;div class=&quot;widget-archive widget-archive-category widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;カテゴリ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
    &lt;mt:TopLevelCategories&gt;
        &lt;mt:SubCatIsFirst&gt;
        &lt;ul&gt;
        &lt;/mt:SubCatIsFirst&gt;
        &lt;mt:If tag=&quot;CategoryCount&quot;&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:CategoryArchiveLink$&gt;&quot;&lt;mt:If tag=&quot;CategoryDescription&quot;&gt; title=&quot;&lt;$mt:CategoryDescription remove_html=&quot;1&quot; encode_html=&quot;1&quot;$&gt;&quot;&lt;/mt:If&gt;&gt;&lt;$mt:CategoryLabel$&gt; (&lt;$mt:CategoryCount$&gt;)&lt;/a&gt;
        &lt;mt:Else&gt;
            &lt;li&gt;&lt;$mt:CategoryLabel$&gt;
        &lt;/mt:If&gt;
        &lt;$mt:SubCatsRecurse$&gt;
            &lt;/li&gt;
        &lt;mt:SubCatIsLast&gt;
        &lt;/ul&gt;
        &lt;/mt:SubCatIsLast&gt;
    &lt;/mt:TopLevelCategories&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
</text></template>
<template id='100' blog_id='4' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606223353' identifier='monthly_archive_list' modified_on='20110606223353' name='月別アーカイブ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Monthly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Monthly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-monthly widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;&lt;$mt:ArchiveTypeLabel$&gt; &lt;a href=&quot;&lt;$mt:Link template=&quot;archive_index&quot;$&gt;&quot;&gt;アーカイブ&lt;/a&gt;&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
</text></template>
<template id='101' blog_id='4' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606223353' identifier='popup_image' modified_on='20110606223353' name='ポップアップ画像' rebuild_me='1' type='popup_image' current_revision='0'><text>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; id=&quot;sixapart-standard&quot;&gt;
&lt;head&gt;&lt;title&gt;&lt;$mt:ImageURL$&gt;&lt;/title&gt;&lt;/head&gt;
&lt;body id=&quot;uploaded-image-popup&quot; class=&quot;popup&quot; style=&quot;margin: 0;padding: 0;&quot;&gt;
    &lt;img src=&quot;&lt;$mt:ImageURL$&gt;&quot; width=&quot;&lt;$mt:ImageWidth$&gt;&quot; height=&quot;&lt;$mt:ImageHeight$&gt;&quot; alt=&quot;&lt;$mt:ImageURL$&gt;&quot; style=&quot;margin: 0;padding: 0;border: 0;&quot; /&gt;
&lt;/body&gt;
&lt;/html&gt;
</text></template>
<template id='102' blog_id='4' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606223353' identifier='tag_cloud' modified_on='20110606223353' name='タグクラウド' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:Tags top=&quot;20&quot;&gt;
&lt;mt:If name=&quot;__first__&quot;&gt;
&lt;div class=&quot;widget-tag-cloud widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;タグクラウド&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
&lt;/mt:If&gt;
            &lt;li class=&quot;rank-&lt;$mt:TagRank max=&quot;10&quot;$&gt;&quot;&gt;&lt;a href=&quot;javascript:void(0)&quot; onclick=&quot;location.href=&apos;&lt;$mt:TagSearchLink encode_js=&quot;1&quot;$&gt;&apos;;return false;&quot; rel=&quot;tag&quot;&gt;&lt;$mt:TagName$&gt;&lt;/a&gt;&lt;/li&gt;
&lt;mt:If name=&quot;__last__&quot;&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/mt:If&gt;
&lt;/mt:Tags&gt;
</text></template>
<template id='103' blog_id='4' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606223353' identifier='technorati_search' modified_on='20110606223353' name='Technorati Search' rebuild_me='1' type='widget' current_revision='0'><text>&lt;div class=&quot;widget-technorati widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;Techonrati&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;div id=&quot;technorati&quot;&gt;
            &lt;form id=&quot;ts_s&quot; method=&quot;post&quot; action=&quot;http://technorati.com/search.php&quot;&gt;
                &lt;fieldset&gt;
                    &lt;legend&gt;&lt;a href=&apos;http://www.technorati.com/&apos;&gt;Technorati&lt;/a&gt; search&lt;/legend&gt;
                    &lt;input type=&quot;hidden&quot; name=&quot;sub&quot; value=&quot;searchlet&quot; /&gt;
                    &lt;input type=&quot;text&quot; id=&quot;ts_search&quot; name=&quot;s&quot; size=&quot;12&quot; maxlength=&quot;255&quot; value=&quot;&quot; /&gt;&lt;br /&gt;
                    &lt;input type=&quot;radio&quot; checked=&quot;checked&quot; name=&quot;from&quot; id=&quot;ts_yb&quot; value=&quot;&lt;$mt:BlogURL$&gt;&quot; /&gt;
                    &lt;label for=&quot;ts_yb&quot; title=&quot;&lt;$mt:BlogName$&gt;&quot;&gt;このブログ&lt;/label&gt;
                    &lt;input type=&quot;radio&quot; name=&quot;from&quot; id=&quot;ts_www&quot; value=&quot;&quot; /&gt; &lt;label for=&quot;ts_www&quot;&gt;すべてのブログ&lt;/label&gt;
                    &lt;input type=&quot;submit&quot; class=&quot;btn&quot; value=&quot;検索&quot; /&gt;
                &lt;/fieldset&gt;
            &lt;/form&gt;
            &lt;p id=&quot;ts_l&quot; class=&quot;ts_l&quot;&gt;&lt;a href=&quot;http://technorati.com/search/&lt;$mt:BlogURL$&gt;&quot; id=&quot;ts_lh&quot;&gt;&#187; リンクしているブログ&lt;/a&gt;&lt;/p&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
</text></template>
<template id='104' blog_id='4' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606223353' identifier='recent_entries' modified_on='20110606223353' name='最近のブログ記事' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:If tag=&quot;BlogEntryCount&quot;&gt;
    &lt;mt:Entries lastn=&quot;10&quot;&gt;
        &lt;mt:EntriesHeader&gt;
&lt;div class=&quot;widget-recent-entries widget-archives widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;最近のブログ記事&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:EntriesHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:EntryPermalink$&gt;&quot;&gt;&lt;$mt:EntryTitle$&gt;&lt;/a&gt;&lt;/li&gt;
        &lt;mt:EntriesFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:EntriesFooter&gt;
    &lt;/mt:Entries&gt;
&lt;/mt:If&gt;
</text></template>
<template id='105' blog_id='4' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606223353' identifier='author_archive_list' modified_on='20110606223353' name='ユーザーアーカイブ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Author&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Author&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive widget-archive-author widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;ユーザー&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
</text></template>
<template id='106' blog_id='4' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606223353' identifier='powered_by' modified_on='20110606223353' name='Powered By' rebuild_me='1' type='widget' current_revision='0'><text>&lt;div class=&quot;widget-powered widget&quot;&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;a href=&quot;http://www.sixapart.jp/movabletype/&quot;&gt;&lt;img src=&quot;&lt;$mt:StaticWebPath$&gt;images/bug-pbmt-white.png&quot; alt=&quot;Powered by Movable Type &lt;$mt:Version$&gt;&quot; width=&quot;120&quot; height=&quot;75&quot; /&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;
</text></template>
<template id='107' blog_id='4' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606223353' identifier='date_based_author_archives' modified_on='20110606223353' name='日付ベースのユーザーアーカイブ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Author-Yearly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Author-Yearly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-author-yearly widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;年別ユーザーアーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;

&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Author-Monthly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Author-Monthly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-author-monthly widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;月別ユーザーアーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;

&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Author-Weekly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Author-Weekly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-author-weekly widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;週別ユーザーアーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;

&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Author-Daily&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Author-Daily&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-author-daily widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;日別ユーザーアーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;

</text></template>
<template id='108' blog_id='4' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606223353' identifier='pages_list' modified_on='20110606223353' name='ページ一覧' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Page&quot;&gt;
&lt;div class=&quot;widget-pages widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;ウェブページ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
    &lt;mt:Pages no_folder=&quot;1&quot; sort_by=&quot;title&quot; sort_order=&quot;ascend&quot;&gt;
            &lt;li class=&quot;page page-&lt;$mt:PageID$&gt;&quot;&gt;&lt;a href=&quot;&lt;$mt:PagePermalink$&gt;&quot;&gt;&lt;$mt:PageTitle$&gt;&lt;/a&gt;&lt;/li&gt;
    &lt;/mt:Pages&gt;
    &lt;mt:TopLevelFolders&gt;
            &lt;li class=&quot;folder folder-&lt;$mt:FolderID$&gt;&quot;&gt;&lt;strong&gt;&lt;$mt:FolderLabel$&gt;&lt;/strong&gt;
        &lt;mt:Pages sort_by=&quot;title&quot; sort_order=&quot;ascend&quot;&gt;
            &lt;mt:PagesHeader&gt;
                &lt;ul&gt;
            &lt;/mt:PagesHeader&gt;
                    &lt;li class=&quot;page page-&lt;$mt:PageID$&gt;&quot;&gt;&lt;a href=&quot;&lt;$mt:PagePermalink$&gt;&quot;&gt;&lt;$mt:PageTitle$&gt;&lt;/a&gt;&lt;/li&gt;
            &lt;mt:PagesFooter&gt;
                &lt;/ul&gt;
            &lt;/mt:PagesFooter&gt;
        &lt;/mt:Pages&gt;
            &lt;/li&gt;
        &lt;$mt:SubFolderRecurse$&gt;
    &lt;/mt:TopLevelFolders&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
</text></template>
<template id='109' blog_id='4' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606223353' identifier='page' modified_by='1' modified_on='20130423185518' name='ウェブページ' rebuild_me='0' type='page' current_revision='12' cache_expire_type='0' include_with_ssi='0' revision='12'><text>&lt;$mt:Include module=&quot;DOCTYPE&quot;$&gt;
&lt;title&gt;声優・ナレーターになるには【日本ナレーション演技研究所】&lt;/title&gt;
&lt;link rel=&quot;canonical&quot; href=&quot;http://nichinare.com/&quot; /&gt;
&lt;$mt:Include module=&quot;外部ファイル読み込み&quot;$&gt;

&lt;body id=&quot;course&quot; onload=&quot;addLinkURL(&apos;code&apos;);return false;&quot;&gt;
&lt;a name=&quot;pagetop&quot; id=&quot;pagetop&quot;&gt;&lt;/a&gt;
&lt;div id=&quot;wrapper&quot;&gt;
&lt;$mt:Include module=&quot;ヘッダー&quot;$&gt;
&lt;p class=&quot;pankuzu normal&quot;&gt;&lt;a href=&quot;../index.html&quot;&gt;日ナレトップ&lt;/a&gt;  ＞  &lt;a href=&quot;index.html&quot;&gt;コース紹介&lt;/a&gt;  ＞  &lt;$MTEntryTitle$&gt;&lt;/p&gt;
&lt;!-- Container --&gt;
&lt;div id=&quot;container&quot;&gt;
&lt;div id=&quot;contents&quot;&gt;
&lt;div class=&quot;right_contents&quot;&gt;
&lt;h2 class=&quot;&lt;$mt:ArchiveFile extension=&apos;0&apos;$&gt;_ttl&quot;&gt;&lt;MTTitleImgAsset&gt;&lt;img src=&quot;&lt;$MTAssetURL$&gt;&quot; alt=&quot;&lt;$MTEntryTitle$&gt;&quot; /&gt;&lt;/MTTitleImgAsset&gt;&lt;/h2&gt;
&lt;!-- Sec Contents --&gt;
&lt;div class=&quot;sec_main&quot;&gt;
&lt;$MTEntryBody$&gt;
&lt;p class=&quot;sp_btback&quot;&gt;&lt;a href=&quot;javascript:history.back()&quot;&gt;戻る&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;!-- Sec Contents End --&gt;
&lt;/div&gt;
&lt;div class=&quot;left_contents&quot; id=&quot;&lt;$mt:ArchiveFile extension=&quot;0&quot;$&gt;&quot;&gt;
&lt;h4&gt;コース紹介&lt;/h4&gt;
&lt;ul class=&quot;local_menu&quot;&gt;
&lt;li class=&quot;menu01&quot;&gt;&lt;a href=&quot;index.html&quot;&gt;週1回クラス&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;menu02&quot;&gt;&lt;a href=&quot;threedays.html&quot;&gt;週3回クラス&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;menu03&quot;&gt;&lt;a href=&quot;jr.html&quot;&gt;ジュニア声優クラス&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;menu04&quot;&gt;&lt;a href=&quot;narrater.html&quot;&gt;ナレーターセミナー&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;menu05&quot;&gt;&lt;a href=&quot;starting.html&quot;&gt;声優スターティングセミナー&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;$mt:Include module=&quot;下層左パーツ&quot;$&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;ul class=&quot;sub_nav&quot;&gt;
&lt;li class=&quot;hd_menu01&quot;&gt;&lt;a href=&quot;/faq/index.html&quot;&gt;よくあるご質問&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;hd_menu02&quot;&gt;&lt;a href=&quot;/contact/index.html&quot;&gt;お問い合わせ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;!-- Container End --&gt;
&lt;$mt:Include module=&quot;フッター&quot;$&gt;
&lt;/div&gt;

&lt;$mt:Include module=&quot;測定タグ&quot;$&gt;
&lt;/body&gt;
&lt;/html&gt;</text></template>
<template id='110' blog_id='4' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606223353' identifier='current_category_monthly_archive_list' modified_on='20110606223353' name='カテゴリ月別アーカイブ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Category-Monthly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Category-Monthly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-current-category-monthly widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;&lt;$mt:CategoryLabel$&gt;: 月別アーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt;&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
</text></template>
<template id='111' blog_id='4' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606223353' identifier='about_this_page' modified_on='20110606223353' name='About' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:unless name=&quot;main_index&quot;&gt;
&lt;div class=&quot;widget-about-this-page widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;
&lt;mt:If name=&quot;entry_template&quot;&gt;
        このブログ記事について
&lt;mt:Else&gt;
    &lt;mt:If name=&quot;archive_template&quot;&gt;
        このアーカイブについて
    &lt;/mt:If&gt;
&lt;/mt:If&gt;
&lt;mt:If name=&quot;archive_index&quot;&gt;
        このページについて
&lt;/mt:If&gt;
    &lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
&lt;mt:If name=&quot;archive_index&quot;&gt;
        &lt;p&gt;このページには過去に書かれたすべてのコンテンツが含まれています。&lt;/p&gt;
&lt;/mt:If&gt;
&lt;mt:If name=&quot;entry_template&quot;&gt;
        &lt;p class=&quot;first&quot;&gt;このページは、&lt;$mt:EntryAuthorLink$&gt;が&lt;$mt:EntryDate format=&quot;%x %X&quot;$&gt;に書いたブログ記事です。&lt;/p&gt;
    &lt;mt:EntryPrevious&gt;
        &lt;p&gt;ひとつ前のブログ記事は「&lt;a href=&quot;&lt;$mt:EntryPermalink$&gt;&quot;&gt;&lt;$mt:EntryTitle remove_html=&quot;1&quot;$&gt;&lt;/a&gt;」です。&lt;/p&gt;
    &lt;/mt:EntryPrevious&gt;
    &lt;mt:EntryNext&gt;
        &lt;p&gt;次のブログ記事は「&lt;a href=&quot;&lt;$mt:EntryPermalink$&gt;&quot;&gt;&lt;$mt:EntryTitle remove_html=&quot;1&quot;$&gt;&lt;/a&gt;」です。&lt;/p&gt;
    &lt;/mt:EntryNext&gt;
&lt;/mt:If&gt;
&lt;mt:If name=&quot;category_archive&quot;&gt;
    &lt;mt:If name=&quot;datebased_archive&quot;&gt;
        &lt;p class=&quot;first&quot;&gt;このページには、&lt;strong&gt;&lt;$mt:ArchiveDate format=&quot;%B %Y&quot;$&gt;&lt;/strong&gt;以降に書かれたブログ記事のうち&lt;strong&gt;&lt;$mt:CategoryLabel$&gt;&lt;/strong&gt;カテゴリに属しているものが含まれています。&lt;/p&gt;
        &lt;mt:ArchivePrevious&gt;
        &lt;p&gt;前のアーカイブは&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt;&lt;/a&gt;です。&lt;/p&gt;
        &lt;/mt:ArchivePrevious&gt;
        &lt;mt:ArchiveNext&gt;
        &lt;p&gt;次のアーカイブは&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt;&lt;/a&gt;です。&lt;/p&gt;
        &lt;/mt:ArchiveNext&gt;
    &lt;mt:Else&gt;
        &lt;p class=&quot;first&quot;&gt;このページには、過去に書かれたブログ記事のうち&lt;strong&gt;&lt;$mt:CategoryLabel$&gt;&lt;/strong&gt;カテゴリに属しているものが含まれています。&lt;/p&gt;
        &lt;mt:CategoryPrevious&gt;
        &lt;p&gt;前のカテゴリは&lt;a href=&quot;&lt;$mt:CategoryArchiveLink$&gt;&quot;&gt;&lt;$mt:CategoryLabel$&gt;&lt;/a&gt;です。&lt;/p&gt;
        &lt;/mt:CategoryPrevious&gt;
        &lt;mt:CategoryNext&gt;
        &lt;p&gt;次のカテゴリは&lt;a href=&quot;&lt;$mt:CategoryArchiveLink$&gt;&quot;&gt;&lt;$mt:CategoryLabel$&gt;&lt;/a&gt;です。&lt;/p&gt;
        &lt;/mt:CategoryNext&gt;
    &lt;/mt:If&gt;
&lt;/mt:If&gt;
&lt;mt:If name=&quot;author_archive&quot;&gt;
    &lt;mt:If name=&quot;datebased_archive&quot;&gt;
        &lt;p class=&quot;first&quot;&gt;このページには、&lt;strong&gt;&lt;$mt:AuthorDisplayName encode_html=&quot;1&quot;$&gt;&lt;/strong&gt;が&lt;strong&gt;&lt;$mt:ArchiveDate format=&quot;%B %Y&quot;$&gt;&lt;/strong&gt;に書いたブログ記事が含まれています。&lt;/p&gt;
        &lt;mt:ArchivePrevious&gt;
        &lt;p&gt;前のアーカイブは&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt;&lt;/a&gt;です。&lt;/p&gt;
        &lt;/mt:ArchivePrevious&gt;
        &lt;mt:ArchiveNext&gt;
        &lt;p&gt;次のアーカイブは&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt;&lt;/a&gt;です。&lt;/p&gt;
        &lt;/mt:ArchiveNext&gt;
    &lt;mt:Else&gt;
        &lt;p class=&quot;first&quot;&gt;このページには、&lt;strong&gt;&lt;$mt:AuthorDisplayName encode_html=&quot;1&quot;$&gt;&lt;/strong&gt;が最近書いたブログ記事が含まれています。&lt;/p&gt;
    &lt;/mt:If&gt;
&lt;/mt:If&gt;
&lt;mt:If name=&quot;datebased_only_archive&quot;&gt;
        &lt;p class=&quot;first&quot;&gt;このページには、&lt;strong&gt;&lt;$mt:ArchiveDate format=&quot;%B %Y&quot;$&gt;&lt;/strong&gt;に書かれたブログ記事が新しい順に公開されています。&lt;/p&gt;
    &lt;mt:ArchivePrevious&gt;
        &lt;p&gt;前のアーカイブは&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt;&lt;/a&gt;です。&lt;/p&gt;
    &lt;/mt:ArchivePrevious&gt;
    &lt;mt:ArchiveNext&gt;
        &lt;p&gt;次のアーカイブは&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt;&lt;/a&gt;です。&lt;/p&gt;
    &lt;/mt:ArchiveNext&gt;
&lt;/mt:If&gt;
&lt;mt:If name=&quot;archive_index&quot;&gt;
        &lt;p&gt;最近のコンテンツは&lt;a href=&quot;&lt;$mt:BlogURL$&gt;&quot;&gt;インデックスページ&lt;/a&gt;で見られます。&lt;/p&gt;
&lt;mt:Else&gt;
        &lt;p&gt;最近のコンテンツは&lt;a href=&quot;&lt;$mt:BlogURL$&gt;&quot;&gt;インデックスページ&lt;/a&gt;で見られます。過去に書かれたものは&lt;a href=&quot;&lt;$mt:Link template=&quot;archive_index&quot;$&gt;&quot;&gt;アーカイブのページ&lt;/a&gt;で見られます。&lt;/p&gt;
&lt;/mt:If&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/mt:unless&gt;
</text></template>
<template id='112' blog_id='4' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606223353' identifier='signin' modified_on='20110606223353' name='サインイン' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfRegistrationAllowed&gt;
&lt;div class=&quot;widget-sign-in widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;サインイン&lt;/h3&gt;
    &lt;div id=&quot;signin-widget-content&quot; class=&quot;widget-content&quot;&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
/* &lt;![CDATA[ */
function mtUpdateSignInWidget(u) {
    var el = document.getElementById(&apos;signin-widget-content&apos;);
    var content = &apos;&apos;;
    if (!el) return;
    if (u) {
        if (u &amp;&amp; u.is_authenticated) {
            user = u;
            mtSaveUser();
        } else {
            // user really isn&apos;t logged in; so let&apos;s do this!
            return mtSignIn();
        }
    } else {
        u = mtGetUser();
    }
    if (u &amp;&amp; u.name) {
        var url;
        if (u.is_authenticated) {
            if (u.is_author) {
                url = &apos;&lt;$mt:CGIPath$&gt;&lt;$mt:CommentScript$&gt;?__mode=edit_profile&apos;;
                url += &apos;&amp;return_url=&apos; + encodeURIComponent( location.href );
            } else {
                url = u.url;
            }
        } else if (u.url) {
            url = u.url;
        } else {
            url = null;
        }
        var content = &apos;ユーザー名:&apos;;
        if (url)
            content += &apos;&lt;a href=&quot;&apos; + url + &apos;&quot;&gt;&apos; + u.name + &apos;&lt;/a&gt;&apos;;
        else
            content += u.name;
        content += &apos;.  (&lt;a href=&quot;javascript:void(0)&quot; onclick=&quot;return mtSignOutOnClick()&quot;&gt;サインアウト&lt;/a&gt;)&apos;;
    } else if (u &amp;&amp; u.is_banned) {
        content = &apos;このブログにサインインする権限がありません。&apos;;
    } else {
        content = &apos;&lt;a href=&quot;javascript:void(0)&quot; onclick=&quot;return mtSignInOnClick(\&apos;signin-widget-content\&apos;)&quot;&gt;サインイン&lt;/a&gt;&apos;;
    }
    el.innerHTML = content;
}
mtAttachEvent(&apos;usersignin&apos;, mtUpdateSignInWidget);
mtUpdateSignInWidget();
/* ]]&gt; */
&lt;/script&gt;
&lt;/mt:IfRegistrationAllowed&gt;
</text></template>
<template id='113' blog_id='4' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606223353' identifier='openid' modified_on='20110606223353' name='OpenID対応' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfRegistrationAllowed type=&quot;OpenID&quot;&gt;
&lt;div class=&quot;widget-openid widget&quot;&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;em&gt;&lt;strong&gt;OpenID&lt;/strong&gt;対応しています&lt;/em&gt;
        &lt;a href=&quot;http://www.movabletype.jp/openid/&quot;&gt;OpenIDについて&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/mt:IfRegistrationAllowed&gt;
</text></template>
<template id='114' blog_id='4' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606223353' identifier='creative_commons' modified_on='20110606223353' name='クリエイティブ・コモンズ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:BlogIfCCLicense&gt;
&lt;div class=&quot;widget-creative-commons widget&quot;&gt;
   &lt;div class=&quot;widget-content&quot;&gt;
      &lt;a href=&quot;&lt;$mt:BlogCCLicenseURL$&gt;&quot;&gt;&lt;img alt=&quot;Creative Commons License&quot; src=&quot;&lt;$mt:BlogCCLicenseImage$&gt;&quot; /&gt;&lt;/a&gt;&lt;br /&gt;
      このブログは&lt;a href=&quot;&lt;$mt:BlogCCLicenseURL$&gt;&quot;&gt;クリエイティブ・コモンズ&lt;/a&gt;でライセンスされています。
   &lt;/div&gt;
&lt;/div&gt;
&lt;/mt:BlogIfCCLicense&gt;
</text></template>
<template id='115' blog_id='4' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606223353' identifier='comment_response' modified_on='20110606223353' name='コメント完了' rebuild_me='1' type='comment_response' current_revision='0'><text>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;
    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; id=&quot;sixapart-standard&quot;&gt;
&lt;head&gt;


&lt;mt:If name=&quot;comment_confirmation&quot;&gt;
    &lt;mt:Ignore&gt;&lt;!-- Success message when comment has been submitted --&gt;&lt;/mt:Ignore&gt;
    &lt;$mt:Var name=&quot;page_title&quot; value=&quot;確認&quot;$&gt;
    &lt;$mt:Var name=&quot;message&quot; value=&quot;&lt;p&gt;コメントを投稿しました。&lt;/p&gt;&quot;$&gt;
&lt;mt:Else name=&quot;comment_pending&quot;&gt;
    &lt;mt:Ignore&gt;&lt;!-- Pending message when comment is being held for review --&gt;&lt;/mt:Ignore&gt;
    &lt;$mt:Var name=&quot;page_title&quot; value=&quot;コメントありがとうございます。&quot;$&gt;
    &lt;$mt:Var name=&quot;message&quot; value=&quot;&lt;p&gt;コメントは現在承認されるまで公開を保留されています。&lt;/p&gt;&quot;$&gt;
&lt;mt:Else name=&quot;comment_error&quot;&gt;
    &lt;mt:Ignore&gt;&lt;!-- Error message when comment submission fails --&gt;&lt;/mt:Ignore&gt;
    &lt;$mt:Var name=&quot;page_title&quot; value=&quot;コメント投稿エラー&quot;$&gt;
    &lt;mt:SetVarBlock name=&quot;message&quot;&gt;&lt;p&gt;コメントを投稿できませんでした。エラー: &lt;$mt:ErrorMessage$&gt;&lt;/p&gt;&lt;/mt:SetVarBlock&gt;
&lt;/mt:If&gt;


    &lt;$mt:Include module=&quot;HTMLヘッダー&quot;$&gt;
    &lt;title&gt;&lt;$mt:BlogName encode_html=&quot;1&quot;$&gt;: &lt;$mt:Var name=&quot;page_title&quot;$&gt;&lt;/title&gt;
&lt;/head&gt;
&lt;body id=&quot;&lt;$mt:BlogThemeID$&gt;&quot; class=&quot;&lt;$mt:Var name=&quot;body_class&quot;$&gt; &lt;$mt:Var name=&quot;page_layout&quot;$&gt;&quot;&gt;
    &lt;div id=&quot;container&quot;&gt;
        &lt;div id=&quot;container-inner&quot;&gt;


            &lt;$mt:Include module=&quot;バナーヘッダー&quot;$&gt;


            &lt;div id=&quot;content&quot;&gt;
                &lt;div id=&quot;content-inner&quot;&gt;


                    &lt;div id=&quot;alpha&quot;&gt;
                        &lt;div id=&quot;alpha-inner&quot;&gt;
                            &lt;h1 id=&quot;page-title&quot;&gt;&lt;$mt:Var name=&quot;page_title&quot;$&gt;&lt;/h1&gt;
                            &lt;$mt:Var name=&quot;message&quot;$&gt;
                            &lt;p&gt;&lt;a href=&quot;&lt;mt:If name=&quot;comment_error&quot;&gt;javascript:history.back()&lt;mt:Else&gt;&lt;$mt:EntryLink$&gt;&lt;/mt:If&gt;&quot;&gt;元の記事&lt;/a&gt;に戻る&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;


                    &lt;$mt:Include module=&quot;サイドバー&quot;$&gt;


                &lt;/div&gt;
            &lt;/div&gt;


            &lt;$mt:Include module=&quot;バナーフッター&quot;$&gt;


        &lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</text></template>
<template id='116' blog_id='4' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606223353' identifier='archive_widgets_group' modified_on='20110606223353' name='アーカイブウィジェットグループ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:Ignore&gt;
    アーカイブの種類に応じて異なる内容を表示するように設定されたウィジェットです。詳細: http://www.movabletype.org/documentation/designer/widget-sets.html
&lt;/mt:Ignore&gt;
&lt;mt:If name=&quot;category_archive&quot;&gt;
    &lt;mt:IfArchiveTypeEnabled archive_type=&quot;Category-Monthly&quot;&gt;
        &lt;$mt:Include widget=&quot;カテゴリ月別アーカイブ&quot;$&gt;
    &lt;/mt:IfArchiveTypeEnabled&gt;
&lt;/mt:If&gt;
&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Category&quot;&gt;
    &lt;$mt:Include widget=&quot;カテゴリアーカイブ&quot;$&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Monthly&quot;&gt;
    &lt;$mt:Include widget=&quot;月別アーカイブ&quot;$&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
</text></template>
<template id='117' blog_id='4' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606223353' identifier='syndication' modified_on='20110606223353' name='購読' rebuild_me='1' type='widget' current_revision='0'><text>&lt;div class=&quot;widget-syndication widget&quot;&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
            &lt;li&gt;&lt;img src=&quot;&lt;$mt:StaticWebPath$&gt;images/status_icons/feed.gif&quot; alt=&quot;購読する&quot; width=&quot;9&quot; height=&quot;9&quot; /&gt; &lt;a href=&quot;&lt;$mt:Link template=&quot;feed_recent&quot;$&gt;&quot;&gt;このブログを購読&lt;/a&gt;&lt;/li&gt;
&lt;mt:If name=&quot;search_results&quot;&gt;
    &lt;mt:If tag=&quot;SearchString&quot;&gt;
            &lt;li class=&quot;search-results-feed&quot;&gt;&lt;img src=&quot;&lt;$mt:StaticWebPath$&gt;images/status_icons/feed.gif&quot; alt=&quot;購読する&quot; width=&quot;9&quot; height=&quot;9&quot; /&gt; &lt;a href=&quot;&lt;$mt:CGIPath$&gt;&lt;$mt:SearchScript$&gt;?&lt;mt:IfTagSearch&gt;tag&lt;mt:else&gt;search&lt;/mt:IfTagSearch&gt;=&lt;$mt:SearchString encode_url=&quot;1&quot;$&gt;&amp;amp;Template=feed&amp;amp;IncludeBlogs=&lt;$mt:SearchIncludeBlogs$&gt;&amp;amp;limit=&lt;$mt:SearchMaxResults$&gt;&quot; title=&quot;&lt;mt:IfTagSearch&gt;「&lt;$mt:SearchString$&gt;」の検索結果を購読&lt;mt:Else&gt;タグ「&lt;$mt:SearchString$&gt;」を購読&lt;/mt:IfTagSearch&gt;&quot;&gt;&lt;mt:IfTagSearch&gt;タグ「&lt;$mt:SearchString$&gt;」のフィード&lt;mt:Else&gt;「&lt;$mt:SearchString$&gt;」を検索した結果のフィード&lt;/mt:IfTagSearch&gt;&lt;/a&gt;&lt;/li&gt;
    &lt;/mt:If&gt;
&lt;/mt:If&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
</text></template>
<template id='118' blog_id='4' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606223353' identifier='dynamic_error' modified_on='20110606223353' name='ダイナミックパブリッシングエラー' rebuild_me='1' type='dynamic_error' current_revision='0'><text>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;
    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; id=&quot;sixapart-standard&quot;&gt;
&lt;head&gt;
    &lt;$mt:Include module=&quot;HTMLヘッダー&quot;$&gt;
    &lt;title&gt;&lt;$mt:BlogName encode_html=&quot;1&quot;$&gt;: ページが見つかりません。&lt;/title&gt;
&lt;/head&gt;
&lt;body id=&quot;&lt;$mt:BlogThemeID$&gt;&quot; class=&quot;mt-dynamic-error &lt;$mt:Var name=&quot;page_layout&quot;$&gt;&quot;&gt;
    &lt;div id=&quot;container&quot;&gt;
        &lt;div id=&quot;container-inner&quot;&gt;


            &lt;$mt:Include module=&quot;バナーヘッダー&quot;$&gt;


            &lt;div id=&quot;content&quot;&gt;
                &lt;div id=&quot;content-inner&quot;&gt;


                    &lt;div id=&quot;alpha&quot;&gt;
                        &lt;div id=&quot;alpha-inner&quot;&gt;
                            &lt;h1 id=&quot;page-title&quot;&gt;ページが見つかりません。&lt;/h1&gt;
                            &lt;blockquote&gt;
                                &lt;strong&gt;&lt;$mt:ErrorMessage$&gt;&lt;/strong&gt;
                            &lt;/blockquote&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;


                    &lt;$mt:Include module=&quot;サイドバー&quot;$&gt;


                &lt;/div&gt;
            &lt;/div&gt;


            &lt;$mt:Include module=&quot;バナーフッター&quot;$&gt;


        &lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</text></template>
<template id='119' blog_id='4' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606223353' identifier='javascript' modified_on='20110606223353' name='JavaScript' outfile='mt.js' rebuild_me='1' type='index' current_revision='0'><text>&lt;mt:Ignore&gt;
/*  The following functions and variables are here to support legacy MT templates.
    If you have refreshed your JavaScript template but still use older MT comment
    templates, you may need to uncomment this block in order for those templates 
    to work properly. To use, simply remove the &apos;mt:Ignore&apos; tags wrapping this
    block of code.
*/
    function hideDocumentElement(id) { return mtHide(id) }
    function showDocumentElement(id) { return mtShow(id) }
    function individualArchivesOnLoad() { return mtEntryOnLoad() }
    function writeCommenterGreeting() { return mtShowGreeting() }
    function rememberMe(f) { return mtRememberMe(f) }
    function forgetMe(f) { return mtForgetMe(f) }
    var commenter_name;
    var commenter_id;
    var commenter_url;
    var commenter_blog_ids;
    var mtcmtmail;
    var mtcmtauth;
    var mtcmthome;
    var captcha_timer;
&lt;/mt:Ignore&gt;

// The cookie name to use for storing the blog-side comment session cookie.
var mtCookieName = &quot;&lt;$mt:UserSessionCookieName$&gt;&quot;;
var mtCookieDomain = &quot;&lt;$mt:UserSessionCookieDomain$&gt;&quot;;
var mtCookiePath = &quot;&lt;$mt:UserSessionCookiePath$&gt;&quot;;
var mtCookieTimeout = &lt;$mt:UserSessionCookieTimeout$&gt;;

&lt;mt:Ignore&gt;
/***
 * Simple routine for showing a DOM element (applying a CSS display
 * attribute of &apos;none&apos;).
 */
&lt;/mt:Ignore&gt;
function mtHide(id) {
    var el = (typeof id == &quot;string&quot;) ? document.getElementById(id) : id;
    if (el) el.style.display = &apos;none&apos;;
}

&lt;mt:Ignore&gt;
/***
 * Simple routine for showing a DOM element (applying a CSS display
 * attribute of &apos;block&apos;).
 */
&lt;/mt:Ignore&gt;
function mtShow(id) {
    var el = (typeof id == &quot;string&quot;) ? document.getElementById(id) : id;
    if (el) el.style.display = &apos;block&apos;;
}

&lt;mt:Ignore&gt;
/***
 * A utility function for assigning/adding handlers to window events.
 */
&lt;/mt:Ignore&gt;
function mtAttachEvent(eventName,func) {
    var onEventName = &apos;on&apos; + eventName;
    var old = window[onEventName];
    if( typeof old != &apos;function&apos; )
        window[onEventName] = func;
    else {
        window[onEventName] = function( evt ) {
            old( evt );
            return func( evt );
        };
    }
}

&lt;mt:Ignore&gt;
/***
 * Calls the event named, if there are handlers for it.
 */
&lt;/mt:Ignore&gt;
function mtFireEvent(eventName,param) {
    var fn = window[&apos;on&apos; + eventName];
    if (typeof fn == &apos;function&apos;) return fn(param);
    return;
}

if(!this.JSON){JSON={};}(function(){function f(n){return n&lt;10?&apos;0&apos;+n:n;}if(typeof Date.prototype.toJSON!==&apos;function&apos;){Date.prototype.toJSON=function(key){return this.getUTCFullYear()+&apos;-&apos;+f(this.getUTCMonth()+1)+&apos;-&apos;+f(this.getUTCDate())+&apos;T&apos;+f(this.getUTCHours())+&apos;:&apos;+f(this.getUTCMinutes())+&apos;:&apos;+f(this.getUTCSeconds())+&apos;Z&apos;;};String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(key){return this.valueOf();};}var cx=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,escapable=/[\\\&quot;\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta={&apos;\b&apos;:&apos;\\b&apos;,&apos;\t&apos;:&apos;\\t&apos;,&apos;\n&apos;:&apos;\\n&apos;,&apos;\f&apos;:&apos;\\f&apos;,&apos;\r&apos;:&apos;\\r&apos;,&apos;&quot;&apos;:&apos;\\&quot;&apos;,&apos;\\&apos;:&apos;\\\\&apos;},rep;function quote(string){escapable.lastIndex=0;return escapable.test(string)?&apos;&quot;&apos;+string.replace(escapable,function(a){var c=meta[a];return typeof c===&apos;string&apos;?c:&apos;\\u&apos;+(&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);})+&apos;&quot;&apos;:&apos;&quot;&apos;+string+&apos;&quot;&apos;;}function str(key,holder){var i,k,v,length,mind=gap,partial,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;&amp;&amp;typeof value.toJSON===&apos;function&apos;){value=value.toJSON(key);}if(typeof rep===&apos;function&apos;){value=rep.call(holder,key,value);}switch(typeof value){case&apos;string&apos;:return quote(value);case&apos;number&apos;:return isFinite(value)?String(value):&apos;null&apos;;case&apos;boolean&apos;:case&apos;null&apos;:return String(value);case&apos;object&apos;:if(!value){return&apos;null&apos;;}gap+=indent;partial=[];if(Object.prototype.toString.apply(value)===&apos;[object Array]&apos;){length=value.length;for(i=0;i&lt;length;i+=1){partial[i]=str(i,value)||&apos;null&apos;;}v=partial.length===0?&apos;[]&apos;:gap?&apos;[\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+mind+&apos;]&apos;:&apos;[&apos;+partial.join(&apos;,&apos;)+&apos;]&apos;;gap=mind;return v;}if(rep&amp;&amp;typeof rep===&apos;object&apos;){length=rep.length;for(i=0;i&lt;length;i+=1){k=rep[i];if(typeof k===&apos;string&apos;){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}}else{for(k in value){if(Object.hasOwnProperty.call(value,k)){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}}v=partial.length===0?&apos;{}&apos;:gap?&apos;{\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+mind+&apos;}&apos;:&apos;{&apos;+partial.join(&apos;,&apos;)+&apos;}&apos;;gap=mind;return v;}}if(typeof JSON.stringify!==&apos;function&apos;){JSON.stringify=function(value,replacer,space){var i;gap=&apos;&apos;;indent=&apos;&apos;;if(typeof space===&apos;number&apos;){for(i=0;i&lt;space;i+=1){indent+=&apos; &apos;;}}else if(typeof space===&apos;string&apos;){indent=space;}rep=replacer;if(replacer&amp;&amp;typeof replacer!==&apos;function&apos;&amp;&amp;(typeof replacer!==&apos;object&apos;||typeof replacer.length!==&apos;number&apos;)){throw new Error(&apos;JSON.stringify&apos;);}return str(&apos;&apos;,{&apos;&apos;:value});};}if(typeof JSON.parse!==&apos;function&apos;){JSON.parse=function(text,reviver){var j;function walk(holder,key){var k,v,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;){for(k in value){if(Object.hasOwnProperty.call(value,k)){v=walk(value,k);if(v!==undefined){value[k]=v;}else{delete value[k];}}}}return reviver.call(holder,key,value);}cx.lastIndex=0;if(cx.test(text)){text=text.replace(cx,function(a){return&apos;\\u&apos;+(&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);});}if(/^[\],:{}\s]*$/.test(text.replace(/\\(?:[&quot;\\\/bfnrt]|u[0-9a-fA-F]{4})/g,&apos;@&apos;).replace(/&quot;[^&quot;\\\n\r]*&quot;|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,&apos;]&apos;).replace(/(?:^|:|,)(?:\s*\[)+/g,&apos;&apos;))){j=eval(&apos;(&apos;+text+&apos;)&apos;);return typeof reviver===&apos;function&apos;?walk({&apos;&apos;:j},&apos;&apos;):j;}throw new SyntaxError(&apos;JSON.parse&apos;);};}}());

var MT = window.MT || {};

MT.cons = function () {
  return {
    LOG : &apos;log&apos;,
    WARN : &apos;warn&apos;,
    DEBUG : &apos;debug&apos;,
    INFO : &apos;info&apos;,
    ERR : &apos;error&apos;,
    JSON : &apos;json&apos;
  };
}();

&lt;mt:Ignore&gt;
/**
 * Used for base functionality related to MT
 * 
 * @package MT
 * @class core
 * @global
 * @param {Object} o optional configuration object
 * Options:
 */
&lt;/mt:Ignore&gt;
MT.core = function (o) {
  var _debug = false;
  
  return {
    &lt;mt:Ignore&gt;
    /**
     * Makes remote call and handles response
     * 
     * @param {String} url The URL endpoint
     * @param {String} respType The type of response expected
     * @param {Function} respHandler The function to handle the response
     * @return void
     */
    &lt;/mt:Ignore&gt;
    connect : function (url,respType,respHandler) {
      var xh = mtGetXmlHttp();
      if (!xh) return false;
      
      xh.onreadystatechange = function() {
        if ( xh.readyState == 4 ) {
          if ( xh.status &amp;&amp; ( xh.status != 200 ) ) {
            // error - ignore
          } else {
            switch (respType) {
              case &apos;json&apos;:
                respHandler(JSON.parse(xh.responseText));
                break;
                
              case &apos;xml&apos;:
                break;
                
              case &apos;text&apos;:
                break;
            }
          }
        }
      };
      
      xh.open(&apos;GET&apos;,url);
      xh.send(null);
    },
    
    getEl : function (el) {
      return MT.util.checkNodeType(el)===&apos;element&apos; ? id : (document.getElementById(el) || false);
    },
    
    addEvent : function (el,type,func,obj) {
      if(!obj &amp;&amp; document.addEventListener) {
        el.addEventListener(type,func,false);
      } else if(obj &amp;&amp; document.addEventListener) {
        el.addEventListener(type,function () {
          func.call(obj,event);
        },false);
      } else {
        if(obj) {
          el.attachEvent(&apos;on&apos; + type,function () {
            func.call(obj,event);
          });
        } else {
          el.attachEvent(&apos;on&apos; + type,function () {          
            func.call(el,event);
          });
        }
      }
    },
    
    &lt;mt:Ignore&gt;
    /**
     * Basic logging function
     * 
     * @param {String} level The log level (WARN|DEBUG|INFO|ERROR|LOG)
     * Specified by one of the MT constants
     * @param {String} msg The log message
     * @return void
     */
    &lt;/mt:Ignore&gt;
    log : function (level,msg) {
      if(_debug &amp;&amp; window.console) {
        switch(level) {
          case &apos;warn&apos;:
          case &apos;debug&apos;:
          case &apos;info&apos;:
          case &apos;error&apos;:
          case &apos;log&apos;:
            console[level](msg);
            break;
            
          default:
            return false; 
        }
      } else {
        return false;
      }
    }
  }
}();

&lt;mt:Ignore&gt;
/**
 * Utilities class
 * 
 * @package MT
 * @class util
 * @global
 * Options:
 */
&lt;/mt:Ignore&gt;
MT.util = function () {
  return {
    toggleVisibility : {
      show : function () {
        var i = arguments.length;
        
        while(i--) {
          if(MT.util.checkNodeType(arguments[i])===&apos;element&apos;) {
            arguments[i].style.visibility = &apos;visible&apos;;
          } else {
            MT.core.getEl(arguments[i]).style.visibility = &apos;visible&apos;;
          }
        }
      },
      
      hide : function () {
        var i = arguments.length;
        while(i--) {
          if(MT.util.checkNodeType(arguments[i])===&apos;element&apos;) {
            arguments[i].style.visibility = &apos;hidden&apos;;
          } else {
            MT.core.getEl(arguments[i]).style.visibility = &apos;hidden&apos;;
          }
        }
      }
    },
    
    toggleDisplay : {
      show : function () {
        var i = arguments.length;
        while(i--) {
          if(MT.util.checkNodeType(arguments[i])===&apos;element&apos;) {
            arguments[i].style.display = &apos;&apos;;
          } else {
            MT.core.getEl(arguments[i]).style.display = &apos;&apos;;
          }
        }
      },
      
      hide : function () {
        var i = arguments.length;
        while(i--) {
          if(MT.util.checkNodeType(arguments[i])===&apos;element&apos;) {
            arguments[i].style.display = &apos;none&apos;;
          } else {
            MT.core.getEl(arguments[i]).style.display = &apos;none&apos;;
          }
        }
      }
    },
    
    &lt;mt:Ignore&gt;
    /**
     * Finds the nearest defining (i.e. with an id) parent to the given element
     * 
     * @param {HTMLElement} origin the node from which to start the search
     * @return {HTMLElement|Boolean} The parent node with an id attribute or false
     */
    &lt;/mt:Ignore&gt;
    findDefiningParent : function (origin) {
      if(MT.util.checkNodeType(origin)===&apos;element&apos;) {
        for(var node=origin.parentNode;node.parentNode;node=node.parentNode) {
          if((node.hasAttribute &amp;&amp; node.hasAttribute(&apos;id&apos;)) || node.getAttribute(&apos;id&apos;)) {
            return node;
          }
        }
      }
      return false;
    },
    
    &lt;mt:Ignore&gt;
    /**
     * Tests objects to verify if they are DOM nodes
     * 
     * @param {Object} obj The object to be tested
     * @return {String} the values &apos;element&apos;|&apos;textnode&apos;|&apos;whitespace&apos;
     */
    &lt;/mt:Ignore&gt;
    checkNodeType : function (obj) {
      if (obj &amp;&amp; obj.nodeName){
        switch (obj.nodeType) {
          case 1: return &apos;element&apos;;
          case 3: return (/\S/).test(obj.nodeValue) ? &apos;textnode&apos; : &apos;whitespace&apos;;
        }
      }
    }
  }
}();

&lt;mt:Ignore&gt;
/**
 * mtPaginateComments takes the currently generated static page and either:
 *  - Attempts to find an individual comment link in the query string
 *  - If no link is found, the static page loads
 * In either case, the pagination event is set
 */
&lt;/mt:Ignore&gt;
(function () {
  var M = MT.core,
      c = MT.cons,
      u = MT.util,
      cache,
      isLoading,
      direction,
      currentComments,
      commentAnchor,
      commentArrId,
      commentsPerPage,
      commentsTotalPages,
      loadingIcon,
      pageNum,
      commentsOffset,
      totalComments,
      entryID,
      commentContentDiv,
      topNav,
      nav,
      currentCommentsSpan,
      topCurrentCommentsSpan;
            
  M.addEvent(window,&apos;load&apos;,_init);
  
  /**
   * Initializes the class
   * 
   * @return void
   */
  function _init () {
    if(!MT.entryCommentCount) {
      return;
    }
    
    _initializeVariables();
    _setCommentOffset(false);
    _checkForAnchor();
		_setCurrentComments();
    _toggleNavLinks();
    _initializeEvents();
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Initializes variables to their initial values
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _initializeVariables() {
    cache = {};
    isLoading = false;
    commentAnchor = &apos;&apos;;
    commentArrId = &apos;&apos;;
    commentsPerPage = MT.commentsPerPage || 50;
    currentComments = &apos;&apos;;
    direction = &apos;ascend&apos;;
    entryID = MT.entryID;
    totalComments = MT.entryCommentCount;
    commentsTotalPages = Math.ceil(totalComments / commentsPerPage);
    pageNum = 1;
    
    loadingIcon = &quot;&lt;img title=&apos;Loading...&apos; src=&apos;&lt;$MTStaticWebPath$&gt;images/indicator.white.gif&apos; alt=&apos;Loading&apos; /&gt;&quot;;
    
    commentContentDiv = M.getEl(&quot;comments-content&quot;);
    topNav = M.getEl(&quot;top-comment-nav&quot;);
    nav = M.getEl(&quot;comment-nav&quot;);
    
    currentCommentsSpan = M.getEl(&quot;current-comments&quot;);
    topCurrentCommentsSpan = M.getEl(&quot;top-current-comments&quot;);
  }
  
  function _initializeEvents() {
    if (commentsPerPage &lt; totalComments) {
      M.addEvent(nav,&apos;click&apos;,_handleEvents);
      M.addEvent(topNav,&apos;click&apos;,_handleEvents);
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Checks for an existing anchor tag in the query string
   * If found, it looks for it on the current page
   * If that fails, it tries to find it in comment list and loads
   * the desired page
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _checkForAnchor() {
    var found = String(window.location.hash).match( /comment-(\d{1,6})/ );
		
		if (found) {
		  M.log(c.DEBUG,found);
			if (!Object.prototype.hasOwnProperty.call(M.getEl(found[0]), &apos;className&apos;)) {
				if (_findIdMatch(found[1])) {
    			pageNum = Math.floor(commentArrId / commentsPerPage) + 1;
    			M.log(c.DEBUG,&apos;Comment Array Id: &apos; + commentArrId);
    			M.log(c.DEBUG,&apos;Comments Per Page: &apos; + commentsPerPage);
    			M.log(c.DEBUG,&apos;Page Number: &apos; + pageNum);
    			M.log(c.DEBUG,&apos;Comment Offset: &apos; + _getCommentOffset());
    			_updateComments();
    		}
			}
		}
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Sets commentsOffset (i.e. the offset number to the remote list)
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _setCommentOffset() {
    commentsOffset = commentsPerPage * (pageNum-1);
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Gets the commentsOffset (i.e. the offset number to the remote list)
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _getCommentOffset() {
    return commentsOffset;
  }
  
  &lt;mt:Ignore&gt;
  /**
   * General event handler
   * 
   * @param {Event} e The event object
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _handleEvents (e) {
    var origin = e.target || e.srcElement,
        parentId;
        
    // stupid IE
    origin = origin.id &amp;&amp; M.getEl(origin.id) || false;

    if(origin) {
      parentId = u.checkNodeType(origin.parentNode)===&apos;element&apos; &amp;&amp; origin.parentNode.getAttribute(&apos;id&apos;) &amp;&amp; origin.parentNode.id;
    } else {
      return false;
    }
    
    switch(origin.nodeName) {
      case &apos;A&apos;:
        switch (parentId) {
          case &apos;prev-comments&apos;:
          case &apos;top-prev-comments&apos;:
            if(e.preventDefault) {
              e.preventDefault();
            } else {
              e.returnValue =	false;
            }
            if(!isLoading) {
              _previousPage();
            }
            break;
          case &apos;next-comments&apos;:
          case &apos;top-next-comments&apos;:
            if(e.preventDefault) {
              e.preventDefault();
            } else {
              e.returnValue =	false;
            }
            if(!isLoading) {
              _nextPage();
            }
            break;
        }
        break;
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Toggles the visibility of the navigation links
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _toggleNavLinks () {
    M.log(c.DEBUG,M.getEl(&apos;top-prev-comments&apos;));
    if(pageNum &lt;= commentsTotalPages &amp;&amp; pageNum !== 1) {
      u.toggleVisibility.show(&apos;prev-comments&apos;);
      u.toggleVisibility.show(&apos;top-prev-comments&apos;);
    }
    
    if(pageNum &gt;= 1 &amp;&amp; pageNum !== commentsTotalPages) {
      u.toggleVisibility.show(&apos;next-comments&apos;);
      u.toggleVisibility.show(&apos;top-next-comments&apos;);
    }
    
    if(pageNum===1 || nav.style.visibility===&apos;hidden&apos;) {
      u.toggleVisibility.hide(&apos;prev-comments&apos;);
      u.toggleVisibility.hide(&apos;top-prev-comments&apos;);
    }
    
    if(pageNum===commentsTotalPages || nav.style.visibility===&apos;hidden&apos;) {
      u.toggleVisibility.hide(&apos;next-comments&apos;);
      u.toggleVisibility.hide(&apos;top-next-comments&apos;);
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Determines appropriate action based on the id of the parent
   * clicked link. Decrements pageNum based on id.
   * 
   * @param {String} id the id of the parent of the clicked link
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _nextPage () {
    if(pageNum &lt; commentsTotalPages) {
      pageNum++;
      _updateComments();
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Determines appropriate action based on the id of the parent
   * clicked link. Increments/decrements pageNum based on id.
   * 
   * @param {String} id the id of the parent of the clicked link
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _previousPage() {
    if(pageNum &gt; 1) {
      pageNum--;
      _updateComments();
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Searches for a particular comment in the list of ids
   * 
   * @param {String} id The id for which to search
   * @return {Boolean} true, if found, false otherwise
   */
  &lt;/mt:Ignore&gt;
  function _findIdMatch (id) {
    var len = MT.commentIds.length;
    
  	while (len--) {
  		if (MT.commentIds[len] == id) {
  			commentAnchor = &quot;comment-&quot; + id;
  			commentArrId = len;
  			return true;
  		}
  	}
  	
  	return false;
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Sets the current comment counts on the page
   *
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _setCurrentComments() {
    var commentsOnPage = pageNum != commentsTotalPages ? commentsOffset + commentsPerPage : totalComments;
    
    _setCurrentCommentsContent([commentsOffset+1,&quot; - &quot;,commentsOnPage].join(&apos;&apos;));
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Sets the &quot;current-comments&quot; element with the HTML value
   * 
   * @param {String|Element} currentCommentsHTML The content to be set
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _setCurrentCommentsContent(currentCommentsHTML) {
    currentCommentsSpan.innerHTML = currentCommentsHTML;
    topCurrentCommentsSpan.innerHTML = currentCommentsHTML;
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Sets the content of the comment list
   * 
   * @param {String|Element} commentHTML The content to be set 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _setCommentContent(commentHTML) {
    commentContentDiv.innerHTML = commentHTML;
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Builds the appropriate URL to make a remote call to get the
   * next set of comments
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _updateComments() {
    var comments, jsonUrl;
    isLoading = true;
    _setCurrentCommentsContent(loadingIcon);
    _setCommentOffset();
    
    jsonUrl = [
        &quot;&lt;$mt:CGIPath$&gt;&lt;$mt:CommentScript$&gt;?__mode=comment_listing&amp;direction=&quot;,
        direction,
        &quot;&amp;entry_id=&quot;,
        entryID,
        &quot;&amp;limit=&quot;,
        commentsPerPage,
        &quot;&amp;offset=&quot;,
        _getCommentOffset()
      ].join(&apos;&apos;);
  	
  	if (!commentAnchor) {
      commentAnchor = &quot;comments-content&quot;;
    }
    
    if(cache.hasOwnProperty(jsonUrl)) {
      _refreshComments(cache[jsonUrl]);
      isLoading = false;
    } else {
      M.connect(jsonUrl,c.JSON,function (json) {
        cache[jsonUrl] = json.comments;
    	  _refreshComments(json.comments);
    	  isLoading = false;
      });
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Refreshes the comment data with the current
   * 
   * @param {String} commentData The data used to replace current comments
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _refreshComments(commentData) {
    _setCommentContent(commentData);
    _setCurrentComments();
    window.location.hash = &apos;reset&apos;;
    window.location.hash = commentAnchor;
    _toggleNavLinks();
  }
})();

&lt;mt:Ignore&gt;
/***
 * Displays a relative date.
 * &apos;ts&apos; is a Date object, &apos;fds&apos; is a string of the date which
 * will be displayed if the given date is older than 1 week.
 */
&lt;/mt:Ignore&gt;
function mtRelativeDate(ts, fds) {
    var now = new Date();
    var ref = ts;
    var delta = Math.floor((now.getTime() - ref.getTime()) / 1000);

    var str;
    if (delta &lt; 60) {
        str = &apos;直前&apos;;
    } else if (delta &lt;= 86400) {
        // less than 1 day
        var hours = Math.floor(delta / 3600);
        var min = Math.floor((delta % 3600) / 60);
        if (hours == 1)
            str = &apos;1 時間前&apos;;
        else if (hours &gt; 1)
            str = &apos;2 時間前&apos;.replace(/2/, hours);
        else if (min == 1)
            str = &apos;1 分前&apos;;
        else
            str = &apos;2 分前&apos;.replace(/2/, min);
    } else if (delta &lt;= 604800) {
        // less than 1 week
        var days = Math.floor(delta / 86400);
        var hours = Math.floor((delta % 86400) / 3600);
        if (days == 1)
            str = &apos;1 日前&apos;;
        else if (days &gt; 1)
            str = &apos;2 日前&apos;.replace(/2/, days);
        else if (hours == 1)
            str = &apos;1 時間前&apos;;
        else
            str = &apos;2 時間前&apos;.replace(/2/, hours);
    }
    return str ? str : fds;
}

&lt;mt:Ignore&gt;
/***
 * Used to display an edit link for the given entry.
 */
&lt;/mt:Ignore&gt;
function mtEditLink(entry_id, author_id) {
    var u = mtGetUser();
    if (! u) return;
    if (! entry_id) return;
    if (! author_id) return;
    if (u.id != author_id) return;
    var link = &apos;&lt;a href=&quot;&lt;$mt:AdminScript$&gt;?__mode=view&amp;amp;_type=entry&amp;amp;id=&apos; + entry_id + &apos;&quot;&gt;編集&lt;/a&gt;&apos;;
    document.write(link);
}

&lt;mt:Ignore&gt;
/***
 * Called when an input field on the comment form receives focus.
 */
&lt;/mt:Ignore&gt;
function mtCommentFormOnFocus() {
    // if CAPTCHA is enabled, this causes the captcha image to be
    // displayed if it hasn&apos;t been already.
    mtShowCaptcha();
}

&lt;mt:Ignore&gt;
/***
 * Displays a captcha field for anonymous commenters.
 */
&lt;/mt:Ignore&gt;
var mtCaptchaVisible = false;
function mtShowCaptcha() {
    var u = mtGetUser();
    if ( u &amp;&amp; u.is_authenticated ) return;
    if (mtCaptchaVisible) return;
    var div = document.getElementById(&apos;comments-open-captcha&apos;);
    if (div) {
        div.innerHTML = &apos;&lt;$mt:CaptchaFields$&gt;&apos;;
        mtCaptchaVisible = true;
    }
}

&lt;mt:Ignore&gt;
/* user object
    -- saved in user cookie --
    u.name (display name)
    u.url (link to home page)
    u.email (for anonymous only)
    u.userpic (url for commenter/author)
    u.profile (link to profile)
    u.is_trusted (boolean)
    u.is_author (user has posting rights)
    u.is_banned (banned status; neither post/comment perms)
    u.can_post (has permission to post)
    u.can_comment (has permission to comment)

    -- status fields --
    u.is_authenticated (boolean)
    u.is_anonymous (user is anonymous)
*/
&lt;/mt:Ignore&gt;

var is_preview;
var user;
&lt;mt:Ignore&gt;
/***
 * Assigns a user object as the actively logged in user; also saves the
 * user information in a browser cookie.
 */
&lt;/mt:Ignore&gt;
function mtSetUser(u) {
    if (u) {
        // persist this
        user = u;
        mtSaveUser();
        // sync up user greeting
        mtFireEvent(&apos;usersignin&apos;);
    }
}

&lt;mt:Ignore&gt;
/***
 * Simple function that escapes single quote characters for storing
 * in a cookie.
 */
&lt;/mt:Ignore&gt;
function mtEscapeJS(s) {
    s = s.replace(/&apos;/g, &quot;&amp;apos;&quot;);
    return s;
}

&lt;mt:Ignore&gt;
/***
 * Simple function that unescapes single quote characters that were
 * stored in a cookie.
 */
&lt;/mt:Ignore&gt;
function mtUnescapeJS(s) {
    s = s.replace(/&amp;apos;/g, &quot;&apos;&quot;);
    return s;
}

&lt;mt:Ignore&gt;
/***
 * Serializes a user object into a string, suitable for storing as a cookie.
 */
&lt;/mt:Ignore&gt;
function mtBakeUserCookie(u) {
    var str = &quot;&quot;;
    if (u.name) str += &quot;name:&apos;&quot; + mtEscapeJS(u.name) + &quot;&apos;;&quot;;
    if (u.url) str += &quot;url:&apos;&quot; + mtEscapeJS(u.url) + &quot;&apos;;&quot;;
    if (u.email) str += &quot;email:&apos;&quot; + mtEscapeJS(u.email) + &quot;&apos;;&quot;;
    if (u.is_authenticated) str += &quot;is_authenticated:&apos;1&apos;;&quot;;
    if (u.profile) str += &quot;profile:&apos;&quot; + mtEscapeJS(u.profile) + &quot;&apos;;&quot;;
    if (u.userpic) str += &quot;userpic:&apos;&quot; + mtEscapeJS(u.userpic) + &quot;&apos;;&quot;;
    if (u.sid) str += &quot;sid:&apos;&quot; + mtEscapeJS(u.sid) + &quot;&apos;;&quot;;
    str += &quot;is_trusted:&apos;&quot; + (u.is_trusted ? &quot;1&quot; : &quot;0&quot;) + &quot;&apos;;&quot;;
    str += &quot;is_author:&apos;&quot; + (u.is_author ? &quot;1&quot; : &quot;0&quot;) + &quot;&apos;;&quot;;
    str += &quot;is_banned:&apos;&quot; + (u.is_banned ? &quot;1&quot; : &quot;0&quot;) + &quot;&apos;;&quot;;
    str += &quot;can_post:&apos;&quot; + (u.can_post ? &quot;1&quot; : &quot;0&quot;) + &quot;&apos;;&quot;;
    str += &quot;can_comment:&apos;&quot; + (u.can_comment ? &quot;1&quot; : &quot;0&quot;) + &quot;&apos;;&quot;;
    str = str.replace(/;$/, &apos;&apos;);
    return str;
}

&lt;mt:Ignore&gt;
/***
 * Unserializes a user cookie and returns a user object with the restored
 * state.
 */
&lt;/mt:Ignore&gt;
function mtUnbakeUserCookie(s) {
    if (!s) return;

    var u = {};
    var m;
    while (m = s.match(/^((name|url|email|is_authenticated|profile|userpic|sid|is_trusted|is_author|is_banned|can_post|can_comment):&apos;([^&apos;]+?)&apos;;?)/)) {
        s = s.substring(m[1].length);
        if (m[2].match(/^(is|can)_/)) // boolean fields
            u[m[2]] = m[3] == &apos;1&apos; ? true : false;
        else
            u[m[2]] = mtUnescapeJS(m[3]);
    }
    if (u.is_authenticated) {
        u.is_anonymous = false;
    } else {
        u.is_anonymous = true;
        u.can_post = false;
        u.is_author = false;
        u.is_banned = false;
        u.is_trusted = false;
    }
    return u;
}

&lt;mt:Ignore&gt;
/***
 * Retrieves an object of the currently logged in user&apos;s state.
 * If no user is logged in or cookied, this will return null.
 */
&lt;/mt:Ignore&gt;
function mtGetUser() {
    if (!user) {
        var cookie = mtGetCookie(mtCookieName);
        if (!cookie) return;
        user = mtUnbakeUserCookie(cookie);
        if (! user) {
            user = {};
            user.is_anonymous = true;
            user.can_post = false;
            user.is_author = false;
            user.is_banned = false;
            user.is_trusted = false;
        }
    }
    return user;
}

&lt;mt:Ignore&gt;
/***
 * Issues a request to the MT comment script to retrieve the currently
 * logged-in user (if any).
 */
&lt;/mt:Ignore&gt;
var mtFetchedUser = false;
&lt;mt:IfBlog&gt;
function mtFetchUser(cb) {
    if (!cb) cb = &apos;mtSetUser&apos;;
    if ( ( cb == &apos;mtSetUser&apos; ) &amp;&amp; mtGetUser() ) {
        var url = document.URL;
        url = url.replace(/#.+$/, &apos;&apos;);
        url += &apos;#comments-open&apos;;
        location.href = url;
    } else {
        // we aren&apos;t using AJAX for this, since we may have to request
        // from a different domain. JSONP to the rescue.
        mtFetchedUser = true;
        var script = document.createElement(&apos;script&apos;);
        var ts = new Date().getTime();
        script.src = &apos;&lt;$mt:CGIPath$&gt;&lt;$mt:CommentScript$&gt;?__mode=session_js&amp;blog_id=&lt;$mt:BlogID$&gt;&amp;jsonp=&apos; + cb + &apos;&amp;ts=&apos; + ts;
        (document.getElementsByTagName(&apos;head&apos;))[0].appendChild(script);
    }
}
&lt;/mt:IfBlog&gt;

&lt;mt:Ignore&gt;
/***
 * Called when the &apos;Remember me&apos; checkbox is changed. If the checkbox
 * is cleared, the cached user cookie is immediately cleared.
 */
&lt;/mt:Ignore&gt;
function mtRememberMeOnClick(b) {
    if (!b.checked)
        mtClearUser(b.form);
    return true;
}

&lt;mt:Ignore&gt;
/***
 * Called when comment form is sent.
 * Required parameter: Form DOM object of comment form.
 * If form has a &apos;bakecookie&apos; member, it will be used to signal
 * storing the anonymous commenter information to a cookie.
 * If form has a &apos;armor&apos; member, it will be used to store
 * a token that is checked by the comment script.
 */
&lt;/mt:Ignore&gt;
&lt;mt:IfBlog&gt;
var mtRequestSubmitted = false;
function mtCommentOnSubmit(f) {
    if (!mtRequestSubmitted) {
        mtRequestSubmitted = true;

        if (f.armor)
            f.armor.value = &apos;&lt;$mt:BlogSitePath encode_sha1=&quot;1&quot;$&gt;&apos;;
        if (f.bakecookie &amp;&amp; f.bakecookie.checked)
            mtSaveUser(f);

        // disable submit buttons
        if (f.preview_button) f.preview_button.disabled = true;
        if (f.post) f.post.disabled = true;

        var u = mtGetUser();
        if ( !is_preview &amp;&amp; ( u &amp;&amp; u.is_authenticated ) ) {
            // validate session; then submit
            mtFetchedUser = false;
            mtFetchUser(&apos;mtCommentSessionVerify&apos;);
            return false;
        }

        return true;
    }
    return false;
}

function mtCommentSessionVerify(app_user) {
    var u = mtGetUser();
    var f = document[&apos;comments_form&apos;];
    if ( u &amp;&amp; app_user &amp;&amp; app_user.sid &amp;&amp; ( u.sid == app_user.sid ) ) {
        f.submit();
    } else {
        alert(&apos;セッションの有効期限が切れています。再度サインインしてください。&apos;);
        mtClearUser();
        mtFireEvent(&apos;usersignin&apos;);
&lt;mt:IfRegistrationRequired&gt;
        mtShow(&apos;comments-form&apos;);
        mtHide(&apos;comments-open-footer&apos;);
&lt;/mt:IfRegistrationRequired&gt;
    }
}

function mtUserOnLoad() {
    var u = mtGetUser();

    // if the user is authenticated, hide the &apos;anonymous&apos; fields
    // and any captcha input if already shown
    if ( document.getElementById(&apos;comments-form&apos;)) {
        if ( u &amp;&amp; u.is_authenticated ) {
            mtShow(&apos;comments-form&apos;);
            mtHide(&apos;comments-open-data&apos;);
            if (mtCaptchaVisible)
                mtHide(&apos;comments-open-captcha&apos;);
        } else {
&lt;mt:IfRegistrationRequired&gt;
            mtHide(&apos;comments-form&apos;);
&lt;/mt:IfRegistrationRequired&gt;
        }
        if ( u &amp;&amp; u.is_banned )
            mtHide(&apos;comments-form&apos;);

        // if we&apos;re previewing a comment, make sure the captcha
        // field is visible
        if (is_preview)
            mtShowCaptcha();
        else
            mtShowGreeting();

        // populate anonymous comment fields if user is cookied as anonymous
        var cf = document[&apos;comments_form&apos;];
        if (cf) {
            if (u &amp;&amp; u.is_anonymous) {
                if (u.email) cf.email.value = u.email;
                if (u.name) cf.author.value = u.name;
                if (u.url) cf.url.value = u.url;
                if (cf.bakecookie)
                    cf.bakecookie.checked = u.name || u.email;
            } else {
                if (u &amp;&amp; u.sid &amp;&amp; cf.sid)
                    cf.sid.value = u.sid;
            }
            if (cf.post &amp;&amp; cf.post.disabled)
                cf.post.disabled = false;
            if (cf.preview_button &amp;&amp; cf.preview_button.disabled)
                cf.preview_button.disabled = false;
            mtRequestSubmitted = false;
        }
    }
}
&lt;/mt:IfBlog&gt;

&lt;mt:Ignore&gt;
/***
 * Called when an entry archive page is loaded.
 * This routine controls which elements of the comment form are shown
 * or hidden, depending on commenter type and blog configuration.
 */
&lt;/mt:Ignore&gt;
&lt;mt:IfBlog&gt;
function mtEntryOnLoad() {
    var cf = document[&apos;comments_form&apos;];
    if (cf &amp;&amp; cf.preview) cf.preview.value = &apos;&apos;;
    &lt;mt:Unless tag=&quot;IfPingsAccepted&quot;&gt;mtHide(&apos;trackbacks-info&apos;);&lt;/mt:Unless&gt;
    &lt;mt:Unless tag=&quot;IfCommentsAccepted&quot;&gt;mtHide(&apos;comments-open&apos;);&lt;/mt:Unless&gt;
    mtFireEvent(&apos;usersignin&apos;);
}

function mtEntryOnUnload() {
    if (mtRequestSubmitted) {
        var cf = document[&apos;comments_form&apos;];
        if (cf) {
            if (cf.post &amp;&amp; cf.post.disabled)
                cf.post.disabled = false;
            if (cf.preview_button &amp;&amp; cf.preview_button.disabled)
                cf.preview_button.disabled = false;
        }
        mtRequestSubmitted = false;
    }
    return true;
}

mtAttachEvent(&apos;usersignin&apos;, mtUserOnLoad);
&lt;/mt:IfBlog&gt;

&lt;mt:Ignore&gt;
/***
 * Handles the action of the &quot;Sign in&quot; link. First clears any existing
 * user cookie, then directs to the MT comment script to sign the user in.
 */
&lt;/mt:Ignore&gt;
function mtSignIn() {
    var doc_url = document.URL;
    doc_url = doc_url.replace(/#.+/, &apos;&apos;);
    var url = &apos;&lt;$mt:SignInLink$&gt;&apos;;
    if (is_preview) {
        if ( document[&apos;comments_form&apos;] ) {
            var entry_id = document[&apos;comments_form&apos;].entry_id.value;
            url += &apos;&amp;entry_id=&apos; + entry_id;
        } else {
            url += &apos;&amp;return_url=&lt;$mt:BlogURL encode_url=&quot;1&quot;$&gt;&apos;;
        }
    } else {
        url += &apos;&amp;return_url=&apos; + encodeURIComponent(doc_url);
    }
    mtClearUser();
    location.href = url;
}

function mtSignInOnClick(sign_in_element) {
    var el;
    if (sign_in_element) {
        // display throbber
        el = document.getElementById(sign_in_element);
        if (!el)  // legacy MT 4.x element id
            el = document.getElementById(&apos;comment-form-external-auth&apos;);
    }
    if (el)
        el.innerHTML = &apos;サインインします... &lt;span class=&quot;status-indicator&quot;&gt;&amp;nbsp;&lt;/span&gt;&apos;;

    mtClearUser(); // clear any &apos;anonymous&apos; user cookie to allow sign in
    mtFetchUser(&apos;mtSetUserOrLogin&apos;);
    return false;
}

function mtSetUserOrLogin(u) {
    if (u &amp;&amp; u.is_authenticated) {
        mtSetUser(u);
    } else {
        // user really isn&apos;t logged in; so let&apos;s do this!
        mtSignIn();
    }
}

&lt;mt:Ignore&gt;
/***
 * Handles sign out from the web site.
 * First clears any existing user cookie, then direts to the MT comment
 * script to sign the user out.
 */
&lt;/mt:Ignore&gt;
function mtSignOut(entry_id) {
    mtClearUser();
    var doc_url = document.URL;
    doc_url = doc_url.replace(/#.+/, &apos;&apos;);
    var url = &apos;&lt;$mt:SignOutLink$&gt;&apos;;
    if (is_preview) {
        if ( document[&apos;comments_form&apos;] ) {
            var entry_id = document[&apos;comments_form&apos;].entry_id.value;
            url += &apos;&amp;entry_id=&apos; + entry_id;
        } else {
            url += &apos;&amp;return_url=&lt;$mt:BlogURL encode_url=&quot;1&quot;$&gt;&apos;;
        }
    } else {
        url += &apos;&amp;return_url=&apos; + encodeURIComponent(doc_url);
    }
    location.href = url;
}

&lt;mt:Ignore&gt;
/***
 * Handles the action of the &quot;Sign out&quot; link.
 */
&lt;/mt:Ignore&gt;
function mtSignOutOnClick() {
    mtSignOut();
    return false;
}

&lt;mt:Ignore&gt;
/***
 * Handles the display of the greeting message, depending on what kind of
 * user is logged in and blog comment policy.
 */
&lt;/mt:Ignore&gt;
&lt;mt:IfBlog&gt;
function mtShowGreeting() {
&lt;mt:IfRegistrationAllowed&gt;
    var reg_reqd = &lt;mt:IfRegistrationRequired&gt;true&lt;mt:Else&gt;false&lt;/mt:IfRegistrationRequired&gt;;

    var cf = document[&apos;comments_form&apos;];
    if (!cf) return;

    var el = document.getElementById(&apos;comment-greeting&apos;);
    if (!el)  // legacy MT 4.x element id
        el = document.getElementById(&apos;comment-form-external-auth&apos;);
    if (!el) return;

    var eid = cf.entry_id;
    var entry_id;
    if (eid) entry_id = eid.value;

    var phrase;
    var u = mtGetUser();

    if ( u &amp;&amp; u.is_authenticated ) {
        if ( u.is_banned ) {
            phrase = &apos;このブログにコメントする権限を持っていません。(\&lt;a href=\&quot;javas\cript:void(0);\&quot; onclick=\&quot;return mtSignOutOnClick();\&quot;\&gt;サインアウトする\&lt;\/a\&gt;)&apos;;
        } else {
            var user_link;
            if ( u.is_author ) {
                user_link = &apos;&lt;a href=&quot;&lt;$mt:CGIPath$&gt;&lt;$mt:CommentScript$&gt;?__mode=edit_profile&amp;return_url=&apos; + encodeURIComponent( location.href );
                user_link += &apos;&quot;&gt;&apos; + u.name + &apos;&lt;/a&gt;&apos;;
            } else {
                // registered user, but not a user with posting rights
                if (u.url)
                    user_link = &apos;&lt;a href=&quot;&apos; + u.url + &apos;&quot;&gt;&apos; + u.name + &apos;&lt;/a&gt;&apos;;
                else
                    user_link = u.name;
            }
            // TBD: supplement phrase with userpic if one is available.
            phrase = &apos;__NAME__としてサインインしています。(\&lt;a href=\&quot;javas\cript:void(0)\&quot; onclick=\&quot;return mtSignOutOnClick();\&quot;\&gt;サインアウト\&lt;\/a\&gt;)&apos;;
            phrase = phrase.replace(/__NAME__/, user_link);
        }
    } else {
        if (reg_reqd) {
            phrase = &apos;コメントするにはまず\&lt;a href=\&quot;javas\cript:void(0)\&quot; onclick=\&quot;return mtSignInOnClick(\&apos;comment-greeting\&apos;)\&quot;\&gt;サインイン\&lt;\/a\&gt;してください。&apos;;
        } else {
            phrase = &apos;コメントする前に\&lt;a href=\&quot;javas\cript:void(0)\&quot; onclick=\&quot;return mtSignInOnClick(\&apos;comment-greeting\&apos;)\&quot;\&gt;サインイン\&lt;\/a\&gt;することもできます。&apos;;
        }
    }
    el.innerHTML = phrase;
&lt;mt:Else&gt;
    mtShowCaptcha();
&lt;/mt:IfRegistrationAllowed&gt;
}
&lt;/mt:IfBlog&gt;

&lt;mt:Ignore&gt;
/***
 * Handles the action of the &apos;Reply&apos; links.
 */
&lt;/mt:Ignore&gt;
function mtReplyCommentOnClick(parent_id, author) {
    mtShow(&apos;comment-form-reply&apos;);

    var checkbox = document.getElementById(&apos;comment-reply&apos;);
    var label = document.getElementById(&apos;comment-reply-label&apos;);
    var text = document.getElementById(&apos;comment-text&apos;);

    // Populate label with new values
    var reply_text = &apos;\&lt;a href=\&quot;#comment-__PARENT__\&quot; onclick=\&quot;location.href=this.href; return false\&quot;\&gt;__AUTHOR__からのコメント\&lt;\/a\&gt;に返信&apos;;
    reply_text = reply_text.replace(/__PARENT__/, parent_id);
    reply_text = reply_text.replace(/__AUTHOR__/, author);
    label.innerHTML = reply_text;

    checkbox.value = parent_id; 
    checkbox.checked = true;
    try {
        // text field may be hidden
        text.focus();
    } catch(e) {
    }

    mtSetCommentParentID();
}

&lt;mt:Ignore&gt;
/***
 * Sets the parent comment ID when replying to a comment.
 */
&lt;/mt:Ignore&gt;
function mtSetCommentParentID() {
    var checkbox = document.getElementById(&apos;comment-reply&apos;);
    var parent_id_field = document.getElementById(&apos;comment-parent-id&apos;);
    if (!checkbox || !parent_id_field) return;

    var pid = 0;
    if (checkbox.checked == true)
        pid = checkbox.value;
    parent_id_field.value = pid;
}

&lt;mt:Ignore&gt;
/***
 * Persists a copy of the current user cookie into the browser cookie stash.
 */
&lt;/mt:Ignore&gt;
function mtSaveUser(f) {
    // We can&apos;t reliably store the user cookie during a preview.
    if (is_preview) return;

    var u = mtGetUser();

    if (f &amp;&amp; (!u || u.is_anonymous)) {
        if ( !u ) {
            u = {};
            u.is_authenticated = false;
            u.can_comment = true;
            u.is_author = false;
            u.is_banned = false;
            u.is_anonymous = true;
            u.is_trusted = false;
        }
        if (f.author != undefined) u.name = f.author.value;
        if (f.email != undefined) u.email = f.email.value;
        if (f.url != undefined) u.url = f.url.value;
    }

    if (!u) return;

    var cache_period = mtCookieTimeout * 1000;

    // cache anonymous user info for a long period if the
    // user has requested to be remembered
    if (u.is_anonymous &amp;&amp; f &amp;&amp; f.bakecookie &amp;&amp; f.bakecookie.checked)
        cache_period = 365 * 24 * 60 * 60 * 1000;

    var now = new Date();
    mtFixDate(now);
    now.setTime(now.getTime() + cache_period);

    var cmtcookie = mtBakeUserCookie(u);
    mtSetCookie(mtCookieName, cmtcookie, now, mtCookiePath, mtCookieDomain,
        location.protocol == &apos;https:&apos;);
}

&lt;mt:Ignore&gt;
/***
 * Clears the blog-side user cookie.
 */
&lt;/mt:Ignore&gt;
function mtClearUser() {
    user = null;
    mtDeleteCookie(mtCookieName, mtCookiePath, mtCookieDomain,
        location.protocol == &apos;https:&apos;);
}

&lt;mt:Ignore&gt;
/***
 * Sets a browser cookie.
 */
&lt;/mt:Ignore&gt;
function mtSetCookie(name, value, expires, path, domain, secure) {
    if (domain &amp;&amp; domain.match(/^\.?localhost$/))
        domain = null;
    var curCookie = name + &quot;=&quot; + escape(value) +
        (expires ? &quot;; expires=&quot; + expires.toGMTString() : &quot;&quot;) +
        (path ? &quot;; path=&quot; + path : &quot;&quot;) +
        (domain ? &quot;; domain=&quot; + domain : &quot;&quot;) +
        (secure ? &quot;; secure&quot; : &quot;&quot;);
    document.cookie = curCookie;
}

&lt;mt:Ignore&gt;
/***
 * Retrieves a browser cookie.
 */
&lt;/mt:Ignore&gt;
function mtGetCookie(name) {
    var prefix = name + &apos;=&apos;;
    var c = document.cookie;
    var cookieStartIndex = c.indexOf(prefix);
    if (cookieStartIndex == -1)
        return &apos;&apos;;
    var cookieEndIndex = c.indexOf(&quot;;&quot;, cookieStartIndex + prefix.length);
    if (cookieEndIndex == -1)
        cookieEndIndex = c.length;
    return unescape(c.substring(cookieStartIndex + prefix.length, cookieEndIndex));
}

&lt;mt:Ignore&gt;
/***
 * Deletes a browser cookie.
 */
&lt;/mt:Ignore&gt;
function mtDeleteCookie(name, path, domain, secure) {
    if (mtGetCookie(name)) {
        if (domain &amp;&amp; domain.match(/^\.?localhost$/))
            domain = null;
        document.cookie = name + &quot;=&quot; +
            (path ? &quot;; path=&quot; + path : &quot;&quot;) +
            (domain ? &quot;; domain=&quot; + domain : &quot;&quot;) +
            (secure ? &quot;; secure&quot; : &quot;&quot;) +
            &quot;; expires=Thu, 01-Jan-70 00:00:01 GMT&quot;;
    }
}

function mtFixDate(date) {
    var skew = (new Date(0)).getTime();
    if (skew &gt; 0)
        date.setTime(date.getTime() - skew);
}

&lt;mt:Ignore&gt;
/***
 * Returns a XMLHttpRequest object (for Ajax operations).
 */
&lt;/mt:Ignore&gt;
function mtGetXmlHttp() {
    if ( !window.XMLHttpRequest ) {
        window.XMLHttpRequest = function() {
            var types = [
                &quot;Microsoft.XMLHTTP&quot;,
                &quot;MSXML2.XMLHTTP.5.0&quot;,
                &quot;MSXML2.XMLHTTP.4.0&quot;,
                &quot;MSXML2.XMLHTTP.3.0&quot;,
                &quot;MSXML2.XMLHTTP&quot;
            ];

            for ( var i = 0; i &lt; types.length; i++ ) {
                try {
                    return new ActiveXObject( types[ i ] );
                } catch( e ) {}
            }

            return undefined;
        };
    }
    if ( window.XMLHttpRequest )
        return new XMLHttpRequest();
}

// BEGIN: fast browser onload init
// Modifications by David Davis, DWD
// Dean Edwards/Matthias Miller/John Resig
// http://dean.edwards.name/weblog/2006/06/again/?full#comment5338

function mtInit() {
    // quit if this function has already been called
    if (arguments.callee.done) return;

    // flag this function so we don&apos;t do the same thing twice
    arguments.callee.done = true;

    // kill the timer
    // DWD - check against window
    if ( window._timer ) clearInterval(window._timer);

    // DWD - fire the window onload now, and replace it
    if ( window.onload &amp;&amp; ( window.onload !== window.mtInit ) ) {
        window.onload();
        window.onload = function() {};
    }
}

/* for Mozilla/Opera9 */
if (document.addEventListener) {
    document.addEventListener(&quot;DOMContentLoaded&quot;, mtInit, false);
}

/* for Internet Explorer */
/*@cc_on @*/
/*@if (@_win32)
document.write(&quot;&lt;script id=__ie_onload defer src=javascript:void(0)&gt;&lt;\/script&gt;&quot;);
var script = document.getElementById(&quot;__ie_onload&quot;);
script.onreadystatechange = function() {
    if (this.readyState == &quot;complete&quot;) {
        mtInit(); // call the onload handler
    }
};
/*@end @*/

/* for Safari */
if (/WebKit/i.test(navigator.userAgent)) { // sniff
    _timer = setInterval(function() {
        if (/loaded|complete/.test(document.readyState)) {
            mtInit(); // call the onload handler
        }
    }, 10);
}

/* for other browsers */
window.onload = mtInit;

// END: fast browser onload init

&lt;mt:IfBlog&gt;
&lt;mt:IfRegistrationAllowed&gt;
/***
 * If request contains a &apos;#_login&apos; or &apos;#_logout&apos; hash, use this to
 * also delete the blog-side user cookie, since we&apos;re coming back from
 * a login, logout or edit profile operation.
 */
var clearCookie = ( window.location.hash &amp;&amp; window.location.hash.match( /^#_log(in|out)/ ) ) ? true : false;
if (clearCookie) {
    // clear any logged in state
    mtClearUser();
    if (RegExp.$1 == &apos;in&apos;)
        mtFetchUser();
} else {
    &lt;mt:Ignore&gt;
    /***
     * Uncondition this call to fetch the current user state (if available)
     * from MT upon page load if no user cookie is already present.
     * This is okay if you have a private install, such as an Intranet;
     * not recommended for public web sites!
     */
    &lt;/mt:Ignore&gt;
    if ( is_preview &amp;&amp; !user )
        mtFetchUser();
}
&lt;/mt:IfRegistrationAllowed&gt;
&lt;/mt:IfBlog&gt;
</text></template>
<template id='120' blog_id='4' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606223353' identifier='calendar' modified_on='20110606223353' name='カレンダー' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Individual&quot;&gt;
&lt;div class=&quot;widget-calendar widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;&lt;$mt:Date format=&quot;%B %Y&quot;$&gt;&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;table summary=&quot;リンク付きのカレンダー&quot;&gt;
            &lt;tr&gt;
                &lt;th abbr=&quot;日曜日&quot;&gt;日&lt;/th&gt;
                &lt;th abbr=&quot;月曜日&quot;&gt;月&lt;/th&gt;
                &lt;th abbr=&quot;火曜日&quot;&gt;火&lt;/th&gt;
                &lt;th abbr=&quot;水曜日&quot;&gt;水&lt;/th&gt;
                &lt;th abbr=&quot;木曜日&quot;&gt;木&lt;/th&gt;
                &lt;th abbr=&quot;金曜日&quot;&gt;金&lt;/th&gt;
                &lt;th abbr=&quot;土曜日&quot;&gt;土&lt;/th&gt;
            &lt;/tr&gt;
    &lt;mt:Calendar&gt;
        &lt;mt:CalendarWeekHeader&gt;
            &lt;tr&gt;
        &lt;/mt:CalendarWeekHeader&gt;
                &lt;td&gt;
        &lt;mt:CalendarIfEntries&gt;
            &lt;mt:Entries lastn=&quot;1&quot;&gt;
                    &lt;a href=&quot;&lt;$mt:EntryPermalink$&gt;&quot;&gt;&lt;$mt:CalendarDay$&gt;&lt;/a&gt;
            &lt;/mt:Entries&gt;
        &lt;/mt:CalendarIfEntries&gt;
        &lt;mt:CalendarIfNoEntries&gt;
                    &lt;$mt:CalendarDay$&gt;
        &lt;/mt:CalendarIfNoEntries&gt;
        &lt;mt:CalendarIfBlank&gt;&amp;nbsp;&lt;/mt:CalendarIfBlank&gt;
                &lt;/td&gt;
        &lt;mt:CalendarWeekFooter&gt;
            &lt;/tr&gt;
        &lt;/mt:CalendarWeekFooter&gt;
    &lt;/mt:Calendar&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
</text></template>
<template id='121' blog_id='4' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606223353' identifier='comment_listing' modified_on='20110606223353' name='コメント一覧' rebuild_me='1' type='comment_listing' current_revision='0'><text>{
    &quot;direction&quot;: &quot;&lt;mt:Var name=&quot;commentDirection&quot;&gt;&quot;,
    &quot;comments&quot;: &quot;&lt;mt:Comments sort_order=&quot;$commentDirection&quot;&gt;&lt;$mt:Include module=&quot;コメント詳細&quot; replace=&quot;\&quot;,&quot;\\&quot; replace=&apos;&quot;&apos;,&apos;\&quot;&apos; strip_linefeeds=&quot;1&quot;$&gt;&lt;/mt:Comments&gt;&quot;
}</text></template>
<template id='122' blog_id='4' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606223353' identifier='date_based_category_archives' modified_on='20110606223353' name='日付ベースのカテゴリアーカイブ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Category-Yearly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Category-Yearly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-category-yearly widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;年別カテゴリアーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;

&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Category-Monthly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Category-Monthly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-category-monthly widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;月別カテゴリアーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;

&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Category-Weekly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Category-Weekly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-category-weekly widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;週別カテゴリアーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;

&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Category-Daily&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Category-Daily&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-category-daily widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;日別カテゴリアーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;

</text></template>
<template id='123' blog_id='4' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606223353' identifier='main_index_widgets_group' modified_on='20110606223353' name='ホームページウィジェットグループ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:Ignore&gt;
    main_indexのテンプレートだけに表示されるように設定されているウィジェットのセットです。詳細: http://www.movabletype.org/documentation/designer/widget-sets.html
&lt;/mt:Ignore&gt;
&lt;mt:If name=&quot;main_index&quot;&gt;
    &lt;$mt:Include widget=&quot;最近のコメント&quot;$&gt;
    &lt;$mt:Include widget=&quot;最近のブログ記事&quot;$&gt;
    &lt;$mt:Include widget=&quot;アイテム&quot;$&gt;
    &lt;$mt:Include widget=&quot;タグクラウド&quot;$&gt;
&lt;/mt:If&gt;
</text></template>
<template id='124' blog_id='4' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606223353' identifier='search' modified_on='20110606223353' name='検索' rebuild_me='1' type='widget' current_revision='0'><text>&lt;div class=&quot;widget-search widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;検索&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;form method=&quot;get&quot; action=&quot;&lt;$mt:CGIPath$&gt;&lt;$mt:SearchScript$&gt;&quot;&gt;
            &lt;input type=&quot;text&quot; id=&quot;search&quot; class=&quot;ti&quot; name=&quot;search&quot; value=&quot;&lt;$mt:SearchString$&gt;&quot; /&gt;
&lt;mt:If name=&quot;search_results&quot;&gt;
            &lt;input type=&quot;hidden&quot; name=&quot;IncludeBlogs&quot; value=&quot;&lt;$mt:SearchIncludeBlogs$&gt;&quot; /&gt;
            &lt;mt:Ignore&gt;
            &lt;!-- use these options only with MT::App::Search::Legacy --&gt;
            &lt;ul class=&quot;search-options&quot;&gt;
                &lt;li&gt;&lt;input type=&quot;checkbox&quot; name=&quot;CaseSearch&quot; /&gt; 大文字/小文字を区別する&lt;/li&gt;
                &lt;li&gt;&lt;input type=&quot;checkbox&quot; name=&quot;RegexSearch&quot; /&gt; 正規表現&lt;/li&gt;
            &lt;/ul&gt;
            &lt;/mt:Ignore&gt;
&lt;mt:Else&gt;
            &lt;input type=&quot;hidden&quot; name=&quot;IncludeBlogs&quot; value=&quot;&lt;$mt:BlogID$&gt;&quot; /&gt;
&lt;/mt:If&gt;
            &lt;input type=&quot;hidden&quot; name=&quot;limit&quot; value=&quot;&lt;$mt:SearchMaxResults$&gt;&quot; /&gt;
            &lt;input type=&quot;submit&quot; accesskey=&quot;4&quot; value=&quot;検索&quot; /&gt;
        &lt;/form&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;mt:If name=&quot;search_results&quot;&gt;
    &lt;mt:IfTagSearch&gt;
&lt;div class=&quot;widget-tags widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;タグ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;mt:Tags&gt;
            &lt;li&gt;&lt;a href=&quot;javascript:void(0)&quot; onclick=&quot;location.href=&apos;&lt;$mt:TagSearchLink encode_js=&quot;1&quot;$&gt;&apos;;return false;&quot;&gt;&lt;$mt:TagName$&gt; (&lt;$mt:TagCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;/mt:Tags&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
    &lt;/mt:IfTagSearch&gt;
&lt;/mt:If&gt;
</text></template>
<template id='125' blog_id='4' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606223353' identifier='template_357' modified_by='1' modified_on='20130122172227' name='外部ファイル読み込み' rebuild_me='0' type='custom' current_revision='7' cache_expire_type='0' include_with_ssi='0' revision='7'><text>&lt;link rel=&quot;alternate&quot; media=&quot;handheld&quot; type=&quot;text/html&quot; href=&quot;http://nichinare.com/m/&quot; /&gt;
&lt;!-- PC --&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/common/css/import.css&quot; media=&quot;only screen and (min-width: 911px)&quot; /&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/common/css/lightbox.css&quot; media=&quot;only screen and (min-width: 911px)&quot; /&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot;  href=&quot;/course/css/style.css&quot; media=&quot;only screen and (min-width: 911px)&quot; /&gt;

&lt;!-- スマホ --&gt;
&lt;link href=&quot;/common/css/sp_base.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; media=&quot;only screen and (min-width: 0px) and (max-width: 640px)&quot; &gt;
&lt;link href=&quot;/common/css/sp_layout.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; media=&quot;only screen and (min-width: 0px) and (max-width: 640px)&quot; &gt;
&lt;link href=&quot;/course/css/sp_style.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; media=&quot;only screen and (min-width: 0px) and (max-width: 640px)&quot; &gt;

&lt;!--[if IE ]&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/common/css/import.css&quot; media=&quot;all&quot; /&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/common/css/lightbox.css&quot; media=&quot;screen&quot; /&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot;  href=&quot;/course/css/style.css&quot; media=&quot;all&quot; /&gt;
&lt;![endif]--&gt;

&lt;script src=&quot;/common/js/prototype.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;/common/js/scriptaculous.js?load=effects,builder&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;/common/js/lightbox.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;/common/js/setQueryParamNew.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;/common/js/mjl.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;/common/js/run.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;/common/js/ga.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;/head&gt;</text></template>
<template id='126' blog_id='4' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606223353' identifier='recent_comments' modified_on='20110606223353' name='最近のコメント' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:If tag=&quot;BlogCommentCount&quot;&gt;
    &lt;mt:Comments lastn=&quot;10&quot; sort_order=&quot;descend&quot;&gt;
        &lt;mt:CommentsHeader&gt;
&lt;div class=&quot;widget-recent-comments widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;最近のコメント&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:CommentsHeader&gt;
            &lt;li&gt;&lt;strong&gt;&lt;$mt:CommentAuthor$&gt;:&lt;/strong&gt; &lt;$mt:CommentBody remove_html=&quot;1&quot; words=&quot;10&quot;$&gt; &lt;a href=&quot;&lt;$mt:CommentLink$&gt;&quot; title=&quot;&lt;mt:CommentEntry&gt;&lt;$mt:EntryTitle$&gt;&lt;/mt:CommentEntry&gt;へのコメント&quot;&gt;続きを読む&lt;/a&gt;&lt;/li&gt;
        &lt;mt:CommentsFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:CommentsFooter&gt;
    &lt;/mt:Comments&gt;
&lt;/mt:If&gt;
</text></template>
<template id='127' blog_id='4' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606223353' identifier='current_author_monthly_archive_list' modified_on='20110606223353' name='ユーザー月別アーカイブ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Author-Monthly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Author-Monthly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-current-author-monthly widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;&lt;$mt:AuthorDisplayName encode_html=&quot;1&quot;$&gt;: 月別アーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
</text></template>
<template id='128' blog_id='5' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225428' identifier='comment_preview' modified_on='20110606225428' name='コメントプレビュー' rebuild_me='1' type='comment_preview' current_revision='0'><text>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;
    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; id=&quot;sixapart-standard&quot;&gt;
&lt;head&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
    /* &lt;![CDATA[ */
    var user = &lt;$mt:UserSessionState$&gt;;
    var is_preview = true;
    /* ]]&gt; */
    &lt;/script&gt;
    &lt;$mt:Include module=&quot;HTMLヘッダー&quot;$&gt;
    &lt;title&gt;&lt;$mt:BlogName encode_html=&quot;1&quot;$&gt;: コメントのプレビュー&lt;/title&gt;
&lt;/head&gt;
&lt;body id=&quot;&lt;$mt:BlogThemeID$&gt;&quot; class=&quot;mt-comment-preview &lt;$mt:Var name=&quot;page_layout&quot;$&gt;&quot; onload=&quot;mtEntryOnLoad()&quot; onunload=&quot;mtEntryOnUnload()&quot;&gt;
    &lt;div id=&quot;container&quot;&gt;
        &lt;div id=&quot;container-inner&quot;&gt;


            &lt;$mt:Include module=&quot;バナーヘッダー&quot;$&gt;


            &lt;div id=&quot;content&quot;&gt;
                &lt;div id=&quot;content-inner&quot;&gt;


                    &lt;div id=&quot;alpha&quot;&gt;
                        &lt;div id=&quot;alpha-inner&quot;&gt;


                            &lt;h1 id=&quot;page-title&quot;&gt;&lt;$mt:Var name=&quot;page_title&quot;$&gt;&lt;/h1&gt;


&lt;mt:Ignore&gt;&lt;!-- Comment Preview --&gt;&lt;/mt:Ignore&gt;
                            &lt;div class=&quot;comment&quot; id=&quot;comment-&lt;$mt:CommentID$&gt;&quot;&gt;
                                &lt;div class=&quot;inner&quot;&gt;
                                    &lt;div class=&quot;comment-header&quot;&gt;
                                        &lt;div class=&quot;asset-meta&quot;&gt;
                                            &lt;span class=&quot;byline&quot;&gt;
                                                &lt;$mt:CommentAuthorIdentity$&gt;
    &lt;mt:IfCommentParent&gt;
                                                &lt;span class=&quot;vcard author&quot;&gt;&lt;$mt:CommentAuthorLink$&gt;&lt;/span&gt;から&lt;a href=&quot;&lt;mt:CommentParent&gt;&lt;$mt:CommentLink$&gt;&lt;/mt:CommentParent&gt;&quot;&gt;&lt;mt:CommentParent&gt;&lt;$mt:CommentAuthor$&gt;&lt;/mt:CommentParent&gt;&lt;/a&gt;への返信
    &lt;mt:Else&gt;
                                                &lt;span class=&quot;vcard author&quot;&gt;&lt;$mt:CommentAuthorLink$&gt;&lt;/span&gt;
    &lt;/mt:IfCommentParent&gt;
                                                | &lt;a href=&quot;&lt;$mt:CommentLink$&gt;&quot;&gt;&lt;abbr class=&quot;published&quot; title=&quot;&lt;$mt:CommentDate format_name=&quot;iso8601&quot;$&gt;&quot;&gt;&lt;$mt:CommentDate$&gt;&lt;/abbr&gt;&lt;/a&gt;
                                            &lt;/span&gt;
                                        &lt;/div&gt;
                                    &lt;/div&gt;
                                    &lt;div class=&quot;comment-content&quot;&gt;
                                        &lt;$mt:CommentBody$&gt;
                                    &lt;/div&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;


&lt;mt:Ignore&gt;&lt;!-- Comment Form --&gt;&lt;/mt:Ignore&gt;
                            &lt;div class=&quot;comments-open&quot; id=&quot;comments-open&quot;&gt;
                                &lt;h2 class=&quot;comments-open-header&quot;&gt;コメントする&lt;/h2&gt;
                                &lt;div class=&quot;comments-open-content&quot;&gt;
                                    &lt;div id=&quot;comment-greeting&quot;&gt;&lt;/div&gt;
                                    &lt;form method=&quot;post&quot; action=&quot;&lt;$mt:CGIPath$&gt;&lt;$mt:CommentScript$&gt;&quot; name=&quot;comments_form&quot; id=&quot;comments-form&quot; onsubmit=&quot;return mtCommentOnSubmit(this)&quot;&gt;
                                        &lt;input type=&quot;hidden&quot; name=&quot;static&quot; value=&quot;1&quot; /&gt;
                                        &lt;input type=&quot;hidden&quot; name=&quot;armor&quot; value=&quot;1&quot; /&gt;
                                        &lt;input type=&quot;hidden&quot; name=&quot;preview&quot; value=&quot;&quot; /&gt;
                                        &lt;input type=&quot;hidden&quot; name=&quot;entry_id&quot; value=&quot;&lt;$mt:EntryID$&gt;&quot; /&gt;
                                        &lt;input type=&quot;hidden&quot; name=&quot;__lang&quot; value=&quot;&lt;$mt:BlogLanguage$&gt;&quot; /&gt;
&lt;mt:IfCommentParent&gt;
                                            &lt;input type=&quot;hidden&quot; name=&quot;parent_id&quot; value=&quot;&lt;$mt:CommentParentID escape=&quot;html&quot;$&gt;&quot; id=&quot;comment-parent-id&quot;&gt;
&lt;/mt:IfCommentParent&gt;
                                        &lt;div id=&quot;comments-open-data&quot;&gt;
                                            &lt;div id=&quot;comment-form-name&quot;&gt;
                                                &lt;label for=&quot;comment-author&quot;&gt;名前&lt;/label&gt;
                                                &lt;input id=&quot;comment-author&quot; name=&quot;author&quot; size=&quot;30&quot; value=&quot;&lt;$mt:CommentAuthor encode_html=&quot;1&quot;$&gt;&quot; onfocus=&quot;mtShowCaptcha()&quot; /&gt;
                                            &lt;/div&gt;
                                            &lt;div id=&quot;comment-form-email&quot;&gt;
                                                &lt;label for=&quot;comment-email&quot;&gt;電子メール&lt;/label&gt;
                                                &lt;input id=&quot;comment-email&quot; name=&quot;email&quot; size=&quot;30&quot; value=&quot;&lt;$mt:CommentEmail encode_html=&quot;1&quot;$&gt;&quot; onfocus=&quot;mtShowCaptcha()&quot; /&gt;
                                            &lt;/div&gt;
                                            &lt;div id=&quot;comment-form-url&quot;&gt;
                                                &lt;label for=&quot;comment-url&quot;&gt;URL&lt;/label&gt;
                                                &lt;input id=&quot;comment-url&quot; name=&quot;url&quot; size=&quot;30&quot; value=&quot;&lt;$mt:CommentURL encode_html=&quot;1&quot;$&gt;&quot; onfocus=&quot;mtShowCaptcha()&quot; /&gt;
                                            &lt;/div&gt;
                                        &lt;/div&gt;
&lt;mt:IfCommentParent&gt;
                                        &lt;div id=&quot;comment-form-reply&quot;&gt;
                                            &lt;input type=&quot;checkbox&quot; id=&quot;comment-reply&quot; name=&quot;comment_reply&quot; value=&quot;&lt;$mt:CommentParentID escape=&quot;html&quot;$&gt;&quot; checked=&quot;checked&quot; onclick=&quot;mtSetCommentParentID()&quot; /&gt;
                                            &lt;label for=&quot;comment-reply&quot; id=&quot;comment-reply-label&quot;&gt;&lt;mt:CommentParent&gt;&lt;$mt:CommentAuthor$&gt;&lt;/mt:CommentParent&gt;からのコメントに返信&lt;/label&gt;
                                        &lt;/div&gt;
&lt;/mt:IfCommentParent&gt;
                                        &lt;div id=&quot;comments-open-text&quot;&gt;
                                            &lt;label for=&quot;comment-text&quot;&gt;コメント &lt;mt:IfAllowCommentHTML&gt;(スタイル用のHTMLタグを使えます)&lt;/mt:IfAllowCommentHTML&gt;&lt;/label&gt;
                                            &lt;textarea id=&quot;comment-text&quot; name=&quot;text&quot; rows=&quot;15&quot; cols=&quot;50&quot; onfocus=&quot;mtShowCaptcha()&quot;&gt;&lt;$mt:CommentBody autolink=&quot;0&quot; sanitize=&quot;0&quot; convert_breaks=&quot;0&quot; encode_html=&quot;1&quot;$&gt;&lt;/textarea&gt;
                                        &lt;/div&gt;
                                        &lt;div id=&quot;comments-open-captcha&quot;&gt;&lt;/div&gt;
                                        &lt;div id=&quot;comments-open-footer&quot;&gt;
                                            &lt;input type=&quot;submit&quot; accesskey=&quot;v&quot; name=&quot;preview_button&quot; id=&quot;comment-preview&quot; value=&quot;プレビュー&quot; onclick=&quot;this.form.preview.value=&apos;1&apos;;&quot; /&gt;
                                            &lt;input type=&quot;submit&quot; accesskey=&quot;s&quot; name=&quot;post&quot; id=&quot;comment-submit&quot; value=&quot;投稿&quot; /&gt;
                                            &lt;input type=&quot;button&quot; name=&quot;cancel&quot; id=&quot;comment-cancel&quot; value=&quot;キャンセル&quot; onclick=&quot;window.location=&apos;&lt;$mt:EntryPermalink$&gt;&apos;&quot; /&gt;
                                        &lt;/div&gt;
                                    &lt;/form&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;


                    &lt;$mt:Include module=&quot;サイドバー&quot;$&gt;


                &lt;/div&gt;
            &lt;/div&gt;


            &lt;$mt:Include module=&quot;バナーフッター&quot;$&gt;


        &lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</text></template>
<template id='129' blog_id='5' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225428' identifier='search_results' modified_on='20110606225428' name='検索結果' rebuild_me='1' type='search_results' current_revision='0'><text>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;
    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; id=&quot;sixapart-standard&quot;&gt;
&lt;head&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
    /* &lt;![CDATA[ */
    var user = &lt;$mt:UserSessionState$&gt;;
    /* ]]&gt; */
    &lt;/script&gt;
    &lt;$mt:Include module=&quot;HTMLヘッダー&quot;$&gt;
    &lt;title&gt;&lt;$mt:BlogName encode_html=&quot;1&quot;$&gt;: 検索結果&lt;/title&gt;
    &lt;mt:Ignore&gt;Below Javascript adds ajax search capability&lt;/mt:Ignore&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
    /* &lt;![CDATA[ */
    &lt;mt:IfMoreResults&gt;
    function getResults(page) {
        page = parseInt(page);
        if (timer) window.clearTimeout(timer);
        var xh = mtGetXmlHttp();
        if (!xh) return false;
        var res = results[page];
        if (!res) return;
        var url = res[&apos;next_url&apos;];
        if (!url) return;

        xh.open(&apos;GET&apos;, url + &apos;&amp;format=js&apos;, true);
        xh.onreadystatechange = function() {
            if ( xh.readyState == 4 ) {
                if ( xh.status &amp;&amp; ( xh.status != 200 ) ) {
                    // error - ignore
                } else {
                    try {
                        var page_results = eval(&quot;(&quot; + xh.responseText + &quot;)&quot;);
                        if ( page_results[&apos;error&apos;] == null )
                            results[page + 1] = page_results[&apos;result&apos;];
                    } catch (e) {
                    }
                }
            }
        };
        xh.send(null);
    }

    function swapContent(direction) {
        if ( direction == undefined ) direction = 1;
        var page_span = document.getElementById(&apos;current-page&apos;);
        if (!page_span) return true;
        var next_page = direction + parseInt(page_span.innerHTML);
        var res = results[next_page];
        if (!res) return true;
        var content = res[&apos;content&apos;];
        if (!content) return true;
        var div = document.getElementById(&apos;search-results&apos;);
        if (!div) return true;
        div.innerHTML = content;
        timer = window.setTimeout(&quot;getResults(&quot; + next_page + &quot;)&quot;, 1*1000);
        window.scroll(0, 0);
        return false;
    }
    &lt;mt:Else&gt;&lt;mt:IfPreviousResults&gt;
    function swapContent(direction) {
        return true;
    }&lt;/mt:IfPreviousResults&gt;
    &lt;/mt:IfMoreResults&gt;
    /* ]]&gt; */
    &lt;/script&gt;
&lt;/head&gt;
&lt;body id=&quot;&lt;$mt:BlogThemeID$&gt;&quot; class=&quot;mt-search-results &lt;$mt:Var name=&quot;page_layout&quot;$&gt;&quot;&gt;
    &lt;div id=&quot;container&quot;&gt;
        &lt;div id=&quot;container-inner&quot;&gt;


            &lt;$mt:Include module=&quot;バナーヘッダー&quot;$&gt;


            &lt;div id=&quot;content&quot;&gt;
                &lt;div id=&quot;content-inner&quot;&gt;


                    &lt;div id=&quot;alpha&quot;&gt;
                        &lt;div id=&quot;alpha-inner&quot;&gt;

&lt;mt:Ignore&gt;&lt;!--
    Below is the block to show search results.
    This makes an independent block to support
    Ajax-based background retrieval of the next search results.
--&gt;&lt;/mt:Ignore&gt;
&lt;mt:SetVarTemplate id=&quot;search_results&quot; name=&quot;search_results&quot;&gt;  
&lt;mt:SearchResults&gt;
    &lt;mt:SearchResultsHeader&gt;
                            &lt;div id=&quot;search-results&quot;&gt;
                                &lt;span id=&quot;current-page&quot; class=&quot;hidden&quot;&gt;&lt;$mt:CurrentPage$&gt;&lt;/span&gt;
                                &lt;h1 id=&quot;page-title&quot; class=&quot;search-results-header&quot;&gt;
        &lt;mt:IfStraightSearch&gt;
                                    「&lt;$mt:SearchString$&gt;」と一致するもの
        &lt;/mt:IfStraightSearch&gt;
        &lt;mt:IfTagSearch&gt;
                                    タグ「&lt;$mt:SearchString$&gt;」が付けられているもの
        &lt;/mt:IfTagSearch&gt;
                                &lt;/h1&gt;
                                &lt;div class=&quot;search-results-container autopagerize_page_element&quot;&gt;
    &lt;/mt:SearchResultsHeader&gt;
                                    &lt;$mt:Include module=&quot;ブログ記事の概要&quot; hide_counts=&quot;1&quot;$&gt;
    &lt;mt:SearchResultsFooter&gt;
                                &lt;/div&gt;&lt;div class=&quot;autopagerize_insert_before&quot;&gt;&lt;/div&gt;

    &lt;mt:Ignore&gt;&lt;!-- Used with the ajax search capability of the new search class --&gt;&lt;/mt:Ignore&gt;
                                &lt;div class=&quot;content-nav&quot;&gt;
                                    &lt;mt:IfPreviousResults&gt;&lt;a href=&quot;&lt;$mt:PreviousLink$&gt;&quot; rel=&quot;prev&quot; onclick=&quot;return swapContent(-1);&quot;&gt;&amp;lt; 前&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;/mt:IfPreviousResults&gt;&lt;mt:PagerBlock&gt;&lt;mt:IfCurrentPage&gt;&lt;$mt:Var name=&quot;__value__&quot;$&gt;&lt;mt:Else&gt;&lt;a href=&quot;&lt;$mt:PagerLink$&gt;&quot;&gt;&lt;$mt:Var name=&quot;__value__&quot;$&gt;&lt;/a&gt;&lt;/mt:IfCurrentPage&gt;&lt;mt:Unless name=&quot;__last__&quot;&gt;&amp;nbsp;&lt;/mt:Unless&gt;&lt;/mt:PagerBlock&gt;&lt;mt:IfMoreResults&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;&lt;$mt:NextLink$&gt;&quot; rel=&quot;next&quot; onclick=&quot;return swapContent();&quot;&gt;次 &amp;gt;&lt;/a&gt;&lt;/mt:IfMoreResults&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;
    &lt;/mt:SearchResultsFooter&gt;
&lt;/mt:SearchResults&gt;
&lt;/mt:SetVarTemplate&gt;
&lt;mt:Ignore&gt;&lt;!-- Display search results constructed in the block above --&gt;&lt;/mt:Ignore&gt;
&lt;$mt:Var name=&quot;search_results&quot;$&gt;


&lt;mt:Ignore&gt;&lt;!-- Display no results message --&gt;&lt;/mt:Ignore&gt;
&lt;mt:NoSearchResults&gt;
                            &lt;h1 id=&quot;page-title&quot; class=&quot;search-results-header&quot;&gt;
    &lt;mt:IfStraightSearch&gt;
                                「&lt;$mt:SearchString$&gt;」と一致するもの
    &lt;/mt:IfStraightSearch&gt;
    &lt;mt:IfTagSearch&gt;
                                タグ「&lt;$mt:SearchString$&gt;」が付けられているもの
    &lt;/mt:IfTagSearch&gt;
                            &lt;/h1&gt;
                            &lt;p&gt;「&lt;$mt:SearchString$&gt;」と一致する結果は見つかりませんでした。&lt;/p&gt;
&lt;/mt:NoSearchResults&gt;


&lt;mt:Ignore&gt;&lt;!-- Display instructions for searching if search script was accessed without a query --&gt;&lt;/mt:Ignore&gt;
&lt;mt:NoSearch&gt;
                            &lt;h1 id=&quot;page-title&quot; class=&quot;search-results-header&quot;&gt;例&lt;/h1&gt;
                            &lt;p&gt;すべての単語が順序に関係なく検索されます。フレーズで検索したいときは引用符で囲んでください。&lt;/p&gt;
                            &lt;blockquote&gt;
                                &lt;p&gt;&lt;code&gt;&quot;movable type&quot;&lt;/code&gt;&lt;/p&gt;
                            &lt;/blockquote&gt;
                            &lt;p&gt;AND、OR、NOTを入れることで論理検索を行うこともできます。&lt;/p&gt;
                            &lt;blockquote&gt;
                                &lt;p&gt;&lt;code&gt;個人 OR 出版&lt;/code&gt;&lt;/p&gt;
                                &lt;p&gt;&lt;code&gt;個人 NOT 出版&lt;/code&gt;&lt;/p&gt;
                            &lt;/blockquote&gt;
&lt;/mt:NoSearch&gt;

&lt;mt:Ignore&gt;&lt;!-- Used with the ajax search capability of the new search class --&gt;&lt;/mt:Ignore&gt;
&lt;mt:IfMoreResults&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
&lt;!--
var div = document.getElementById(&apos;search-results&apos;);
var results = {
    &apos;&lt;$mt:CurrentPage$&gt;&apos;: {
        &apos;content&apos;: div.innerHTML,
        &apos;next_url&apos;: &apos;&lt;$mt:NextLink$&gt;&apos;
    }
};
var timer = window.setTimeout(&quot;getResults(&quot; + &lt;$mt:CurrentPage$&gt; + &quot;)&quot;, 1*1000);
//--&gt;
&lt;/script&gt;
&lt;/mt:IfMoreResults&gt;


                        &lt;/div&gt;
                    &lt;/div&gt;

                    &lt;$mt:Include module=&quot;サイドバー&quot;$&gt;


                &lt;/div&gt;
            &lt;/div&gt;


            &lt;$mt:Include module=&quot;バナーフッター&quot;$&gt;


        &lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</text></template>
<template id='130' blog_id='5' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225428' identifier='recent_assets' modified_on='20110606225428' name='アイテム' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:If tag=&quot;AssetCount&quot;&gt;
    &lt;mt:Assets type=&quot;image&quot; lastn=&quot;10&quot;&gt;
        &lt;mt:AssetsHeader&gt;
&lt;div class=&quot;widget-recent-assets widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;アイテム&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:AssetsHeader&gt;
        &lt;li class=&quot;item&quot;&gt;&lt;a class=&quot;asset-image&quot; href=&quot;&lt;$mt:AssetURL$&gt;&quot;&gt;&lt;img src=&quot;&lt;$mt:AssetThumbnailURL height=&quot;70&quot;$&gt;&quot; class=&quot;asset-img-thumb&quot; alt=&quot;&lt;$mt:AssetLabel$&gt;&quot; title=&quot;&lt;$mt:AssetLabel$&gt;&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
        &lt;mt:AssetsFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:AssetsFooter&gt;
    &lt;/mt:Assets&gt;
&lt;/mt:If&gt;
</text></template>
<template id='131' blog_id='5' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225428' identifier='monthly_archive_dropdown' modified_on='20110606225428' name='月別アーカイブ(ドロップダウン)' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Monthly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Monthly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-monthly-dropdown widget-archive widget&quot;&gt;
   &lt;h3 class=&quot;widget-header&quot;&gt;&lt;a href=&quot;&lt;$mt:BlogURL$&gt;archives.html&quot;&gt;アーカイブ&lt;/a&gt;&lt;/h3&gt;
   &lt;div class=&quot;widget-content&quot;&gt;
      &lt;select onchange=&quot;nav(this)&quot;&gt;
         &lt;option&gt;月を選択...&lt;/option&gt;
         &lt;/mt:ArchiveListHeader&gt;
         &lt;option value=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt;&lt;/option&gt;
         &lt;mt:ArchiveListFooter&gt;
      &lt;/select&gt;
   &lt;/div&gt;
&lt;/div&gt;
&lt;script type=&quot;text/javascript&quot; charset=&quot;utf-8&quot;&gt;
/* &lt;![CDATA[ */
function nav(sel) {
   if (sel.selectedIndex == -1) return;
   var opt = sel.options[sel.selectedIndex];
   if (opt &amp;&amp; opt.value)
      location.href = opt.value;
}
/* ]]&gt; */
&lt;/script&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
</text></template>
<template id='132' blog_id='5' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225428' identifier='category_archive_list' modified_on='20110606225428' name='カテゴリアーカイブ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Category&quot;&gt;
&lt;div class=&quot;widget-archive widget-archive-category widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;カテゴリ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
    &lt;mt:TopLevelCategories&gt;
        &lt;mt:SubCatIsFirst&gt;
        &lt;ul&gt;
        &lt;/mt:SubCatIsFirst&gt;
        &lt;mt:If tag=&quot;CategoryCount&quot;&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:CategoryArchiveLink$&gt;&quot;&lt;mt:If tag=&quot;CategoryDescription&quot;&gt; title=&quot;&lt;$mt:CategoryDescription remove_html=&quot;1&quot; encode_html=&quot;1&quot;$&gt;&quot;&lt;/mt:If&gt;&gt;&lt;$mt:CategoryLabel$&gt; (&lt;$mt:CategoryCount$&gt;)&lt;/a&gt;
        &lt;mt:Else&gt;
            &lt;li&gt;&lt;$mt:CategoryLabel$&gt;
        &lt;/mt:If&gt;
        &lt;$mt:SubCatsRecurse$&gt;
            &lt;/li&gt;
        &lt;mt:SubCatIsLast&gt;
        &lt;/ul&gt;
        &lt;/mt:SubCatIsLast&gt;
    &lt;/mt:TopLevelCategories&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
</text></template>
<template id='133' blog_id='5' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225428' identifier='monthly_archive_list' modified_on='20110606225428' name='月別アーカイブ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Monthly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Monthly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-monthly widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;&lt;$mt:ArchiveTypeLabel$&gt; &lt;a href=&quot;&lt;$mt:Link template=&quot;archive_index&quot;$&gt;&quot;&gt;アーカイブ&lt;/a&gt;&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
</text></template>
<template id='134' blog_id='5' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225428' identifier='popup_image' modified_on='20110606225428' name='ポップアップ画像' rebuild_me='1' type='popup_image' current_revision='0'><text>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; id=&quot;sixapart-standard&quot;&gt;
&lt;head&gt;&lt;title&gt;&lt;$mt:ImageURL$&gt;&lt;/title&gt;&lt;/head&gt;
&lt;body id=&quot;uploaded-image-popup&quot; class=&quot;popup&quot; style=&quot;margin: 0;padding: 0;&quot;&gt;
    &lt;img src=&quot;&lt;$mt:ImageURL$&gt;&quot; width=&quot;&lt;$mt:ImageWidth$&gt;&quot; height=&quot;&lt;$mt:ImageHeight$&gt;&quot; alt=&quot;&lt;$mt:ImageURL$&gt;&quot; style=&quot;margin: 0;padding: 0;border: 0;&quot; /&gt;
&lt;/body&gt;
&lt;/html&gt;
</text></template>
<template id='135' blog_id='5' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225428' identifier='tag_cloud' modified_on='20110606225428' name='タグクラウド' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:Tags top=&quot;20&quot;&gt;
&lt;mt:If name=&quot;__first__&quot;&gt;
&lt;div class=&quot;widget-tag-cloud widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;タグクラウド&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
&lt;/mt:If&gt;
            &lt;li class=&quot;rank-&lt;$mt:TagRank max=&quot;10&quot;$&gt;&quot;&gt;&lt;a href=&quot;javascript:void(0)&quot; onclick=&quot;location.href=&apos;&lt;$mt:TagSearchLink encode_js=&quot;1&quot;$&gt;&apos;;return false;&quot; rel=&quot;tag&quot;&gt;&lt;$mt:TagName$&gt;&lt;/a&gt;&lt;/li&gt;
&lt;mt:If name=&quot;__last__&quot;&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/mt:If&gt;
&lt;/mt:Tags&gt;
</text></template>
<template id='136' blog_id='5' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225428' identifier='technorati_search' modified_on='20110606225428' name='Technorati Search' rebuild_me='1' type='widget' current_revision='0'><text>&lt;div class=&quot;widget-technorati widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;Techonrati&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;div id=&quot;technorati&quot;&gt;
            &lt;form id=&quot;ts_s&quot; method=&quot;post&quot; action=&quot;http://technorati.com/search.php&quot;&gt;
                &lt;fieldset&gt;
                    &lt;legend&gt;&lt;a href=&apos;http://www.technorati.com/&apos;&gt;Technorati&lt;/a&gt; search&lt;/legend&gt;
                    &lt;input type=&quot;hidden&quot; name=&quot;sub&quot; value=&quot;searchlet&quot; /&gt;
                    &lt;input type=&quot;text&quot; id=&quot;ts_search&quot; name=&quot;s&quot; size=&quot;12&quot; maxlength=&quot;255&quot; value=&quot;&quot; /&gt;&lt;br /&gt;
                    &lt;input type=&quot;radio&quot; checked=&quot;checked&quot; name=&quot;from&quot; id=&quot;ts_yb&quot; value=&quot;&lt;$mt:BlogURL$&gt;&quot; /&gt;
                    &lt;label for=&quot;ts_yb&quot; title=&quot;&lt;$mt:BlogName$&gt;&quot;&gt;このブログ&lt;/label&gt;
                    &lt;input type=&quot;radio&quot; name=&quot;from&quot; id=&quot;ts_www&quot; value=&quot;&quot; /&gt; &lt;label for=&quot;ts_www&quot;&gt;すべてのブログ&lt;/label&gt;
                    &lt;input type=&quot;submit&quot; class=&quot;btn&quot; value=&quot;検索&quot; /&gt;
                &lt;/fieldset&gt;
            &lt;/form&gt;
            &lt;p id=&quot;ts_l&quot; class=&quot;ts_l&quot;&gt;&lt;a href=&quot;http://technorati.com/search/&lt;$mt:BlogURL$&gt;&quot; id=&quot;ts_lh&quot;&gt;&#187; リンクしているブログ&lt;/a&gt;&lt;/p&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
</text></template>
<template id='137' blog_id='5' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225428' identifier='recent_entries' modified_on='20110606225428' name='最近のブログ記事' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:If tag=&quot;BlogEntryCount&quot;&gt;
    &lt;mt:Entries lastn=&quot;10&quot;&gt;
        &lt;mt:EntriesHeader&gt;
&lt;div class=&quot;widget-recent-entries widget-archives widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;最近のブログ記事&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:EntriesHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:EntryPermalink$&gt;&quot;&gt;&lt;$mt:EntryTitle$&gt;&lt;/a&gt;&lt;/li&gt;
        &lt;mt:EntriesFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:EntriesFooter&gt;
    &lt;/mt:Entries&gt;
&lt;/mt:If&gt;
</text></template>
<template id='138' blog_id='5' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225428' identifier='author_archive_list' modified_on='20110606225428' name='ユーザーアーカイブ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Author&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Author&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive widget-archive-author widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;ユーザー&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
</text></template>
<template id='139' blog_id='5' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225428' identifier='powered_by' modified_on='20110606225428' name='Powered By' rebuild_me='1' type='widget' current_revision='0'><text>&lt;div class=&quot;widget-powered widget&quot;&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;a href=&quot;http://www.sixapart.jp/movabletype/&quot;&gt;&lt;img src=&quot;&lt;$mt:StaticWebPath$&gt;images/bug-pbmt-white.png&quot; alt=&quot;Powered by Movable Type &lt;$mt:Version$&gt;&quot; width=&quot;120&quot; height=&quot;75&quot; /&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;
</text></template>
<template id='140' blog_id='5' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225428' identifier='date_based_author_archives' modified_on='20110606225428' name='日付ベースのユーザーアーカイブ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Author-Yearly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Author-Yearly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-author-yearly widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;年別ユーザーアーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;

&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Author-Monthly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Author-Monthly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-author-monthly widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;月別ユーザーアーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;

&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Author-Weekly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Author-Weekly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-author-weekly widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;週別ユーザーアーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;

&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Author-Daily&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Author-Daily&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-author-daily widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;日別ユーザーアーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;

</text></template>
<template id='141' blog_id='5' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225428' identifier='pages_list' modified_on='20110606225428' name='ページ一覧' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Page&quot;&gt;
&lt;div class=&quot;widget-pages widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;ウェブページ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
    &lt;mt:Pages no_folder=&quot;1&quot; sort_by=&quot;title&quot; sort_order=&quot;ascend&quot;&gt;
            &lt;li class=&quot;page page-&lt;$mt:PageID$&gt;&quot;&gt;&lt;a href=&quot;&lt;$mt:PagePermalink$&gt;&quot;&gt;&lt;$mt:PageTitle$&gt;&lt;/a&gt;&lt;/li&gt;
    &lt;/mt:Pages&gt;
    &lt;mt:TopLevelFolders&gt;
            &lt;li class=&quot;folder folder-&lt;$mt:FolderID$&gt;&quot;&gt;&lt;strong&gt;&lt;$mt:FolderLabel$&gt;&lt;/strong&gt;
        &lt;mt:Pages sort_by=&quot;title&quot; sort_order=&quot;ascend&quot;&gt;
            &lt;mt:PagesHeader&gt;
                &lt;ul&gt;
            &lt;/mt:PagesHeader&gt;
                    &lt;li class=&quot;page page-&lt;$mt:PageID$&gt;&quot;&gt;&lt;a href=&quot;&lt;$mt:PagePermalink$&gt;&quot;&gt;&lt;$mt:PageTitle$&gt;&lt;/a&gt;&lt;/li&gt;
            &lt;mt:PagesFooter&gt;
                &lt;/ul&gt;
            &lt;/mt:PagesFooter&gt;
        &lt;/mt:Pages&gt;
            &lt;/li&gt;
        &lt;$mt:SubFolderRecurse$&gt;
    &lt;/mt:TopLevelFolders&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
</text></template>
<template id='142' blog_id='5' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225428' identifier='page' modified_by='1' modified_on='20130423185603' name='ウェブページ' rebuild_me='0' type='page' current_revision='27' cache_expire_type='0' include_with_ssi='0' revision='27'><text>&lt;$mt:Include module=&quot;DOCTYPE&quot;$&gt;
&lt;title&gt;声優・ナレーターの養成スクール【日本ナレーション演技研究所】&lt;/title&gt;
&lt;link rel=&quot;canonical&quot; href=&quot;http://nichinare.com/&quot; /&gt;
&lt;$mt:Include module=&quot;外部ファイル読み込み&quot;$&gt;

&lt;body id=&quot;about&quot; onload=&quot;addLinkURL(&apos;code&apos;);return false;&quot;&gt;
&lt;a name=&quot;pagetop&quot; id=&quot;pagetop&quot;&gt;&lt;/a&gt;
&lt;div id=&quot;wrapper&quot;&gt;
&lt;$mt:Include module=&quot;ヘッダー&quot;$&gt;
&lt;p class=&quot;pankuzu normal&quot;&gt;&lt;a href=&quot;../index.html&quot;&gt;日ナレトップ&lt;/a&gt;  ＞  &lt;a href=&quot;index.html&quot;&gt;日ナレについて&lt;/a&gt;  ＞  &lt;$MTEntryTitle$&gt;&lt;/p&gt;
&lt;!-- Container --&gt;
&lt;div id=&quot;container&quot;&gt;
&lt;div id=&quot;contents&quot;&gt;
&lt;div class=&quot;right_contents&quot;&gt;
&lt;h2 class=&quot;&lt;$mt:ArchiveFile extension=&apos;0&apos;$&gt;_ttl&quot;&gt;&lt;MTTitleImgAsset&gt;&lt;img src=&quot;&lt;$MTAssetURL$&gt;&quot; alt=&quot;&lt;$MTEntryTitle$&gt;&quot; /&gt;&lt;/MTTitleImgAsset&gt;&lt;/h2&gt;
&lt;!-- Sec Contents --&gt;
&lt;div class=&quot;sec_main&quot;&gt;
&lt;$MTEntryBody$&gt;
&lt;p class=&quot;sp_btback&quot;&gt;&lt;a href=&quot;javascript:history.back()&quot;&gt;戻る&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;!-- Sec Contents End --&gt;
&lt;/div&gt;
&lt;div class=&quot;left_contents&quot; id=&quot;&lt;$mt:ArchiveFile extension=&quot;0&quot;$&gt;&quot;&gt;
&lt;h4&gt;日ナレについて&lt;/h4&gt;
&lt;ul class=&quot;local_menu&quot;&gt;
&lt;li class=&quot;menu01&quot;&gt;&lt;a href=&quot;index.html&quot;&gt;日ナレの特色&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;menu02&quot;&gt;&lt;a href=&quot;step.html&quot;&gt;入所までのステップ&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;menu04&quot;&gt;&lt;a href=&quot;studio.html&quot;&gt;レッスンスタジオ&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;menu05&quot;&gt;&lt;a href=&quot;lecturer.html&quot;&gt;講師一覧&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;menu06&quot;&gt;&lt;a href=&quot;native.html&quot;&gt;主な出身者&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;$mt:Include module=&quot;下層左パーツ&quot;$&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;ul class=&quot;sub_nav&quot;&gt;
&lt;li class=&quot;hd_menu01&quot;&gt;&lt;a href=&quot;/faq/index.html&quot;&gt;よくあるご質問&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;hd_menu02&quot;&gt;&lt;a href=&quot;/contact/index.html&quot;&gt;お問い合わせ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;!-- Container End --&gt;
&lt;$mt:Include module=&quot;フッター&quot;$&gt;
&lt;/div&gt;

&lt;$mt:Include module=&quot;測定タグ&quot;$&gt;
&lt;/body&gt;
&lt;/html&gt;</text></template>
<template id='143' blog_id='5' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225428' identifier='current_category_monthly_archive_list' modified_on='20110606225428' name='カテゴリ月別アーカイブ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Category-Monthly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Category-Monthly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-current-category-monthly widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;&lt;$mt:CategoryLabel$&gt;: 月別アーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt;&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
</text></template>
<template id='144' blog_id='5' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225428' identifier='about_this_page' modified_on='20110606225428' name='About' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:unless name=&quot;main_index&quot;&gt;
&lt;div class=&quot;widget-about-this-page widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;
&lt;mt:If name=&quot;entry_template&quot;&gt;
        このブログ記事について
&lt;mt:Else&gt;
    &lt;mt:If name=&quot;archive_template&quot;&gt;
        このアーカイブについて
    &lt;/mt:If&gt;
&lt;/mt:If&gt;
&lt;mt:If name=&quot;archive_index&quot;&gt;
        このページについて
&lt;/mt:If&gt;
    &lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
&lt;mt:If name=&quot;archive_index&quot;&gt;
        &lt;p&gt;このページには過去に書かれたすべてのコンテンツが含まれています。&lt;/p&gt;
&lt;/mt:If&gt;
&lt;mt:If name=&quot;entry_template&quot;&gt;
        &lt;p class=&quot;first&quot;&gt;このページは、&lt;$mt:EntryAuthorLink$&gt;が&lt;$mt:EntryDate format=&quot;%x %X&quot;$&gt;に書いたブログ記事です。&lt;/p&gt;
    &lt;mt:EntryPrevious&gt;
        &lt;p&gt;ひとつ前のブログ記事は「&lt;a href=&quot;&lt;$mt:EntryPermalink$&gt;&quot;&gt;&lt;$mt:EntryTitle remove_html=&quot;1&quot;$&gt;&lt;/a&gt;」です。&lt;/p&gt;
    &lt;/mt:EntryPrevious&gt;
    &lt;mt:EntryNext&gt;
        &lt;p&gt;次のブログ記事は「&lt;a href=&quot;&lt;$mt:EntryPermalink$&gt;&quot;&gt;&lt;$mt:EntryTitle remove_html=&quot;1&quot;$&gt;&lt;/a&gt;」です。&lt;/p&gt;
    &lt;/mt:EntryNext&gt;
&lt;/mt:If&gt;
&lt;mt:If name=&quot;category_archive&quot;&gt;
    &lt;mt:If name=&quot;datebased_archive&quot;&gt;
        &lt;p class=&quot;first&quot;&gt;このページには、&lt;strong&gt;&lt;$mt:ArchiveDate format=&quot;%B %Y&quot;$&gt;&lt;/strong&gt;以降に書かれたブログ記事のうち&lt;strong&gt;&lt;$mt:CategoryLabel$&gt;&lt;/strong&gt;カテゴリに属しているものが含まれています。&lt;/p&gt;
        &lt;mt:ArchivePrevious&gt;
        &lt;p&gt;前のアーカイブは&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt;&lt;/a&gt;です。&lt;/p&gt;
        &lt;/mt:ArchivePrevious&gt;
        &lt;mt:ArchiveNext&gt;
        &lt;p&gt;次のアーカイブは&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt;&lt;/a&gt;です。&lt;/p&gt;
        &lt;/mt:ArchiveNext&gt;
    &lt;mt:Else&gt;
        &lt;p class=&quot;first&quot;&gt;このページには、過去に書かれたブログ記事のうち&lt;strong&gt;&lt;$mt:CategoryLabel$&gt;&lt;/strong&gt;カテゴリに属しているものが含まれています。&lt;/p&gt;
        &lt;mt:CategoryPrevious&gt;
        &lt;p&gt;前のカテゴリは&lt;a href=&quot;&lt;$mt:CategoryArchiveLink$&gt;&quot;&gt;&lt;$mt:CategoryLabel$&gt;&lt;/a&gt;です。&lt;/p&gt;
        &lt;/mt:CategoryPrevious&gt;
        &lt;mt:CategoryNext&gt;
        &lt;p&gt;次のカテゴリは&lt;a href=&quot;&lt;$mt:CategoryArchiveLink$&gt;&quot;&gt;&lt;$mt:CategoryLabel$&gt;&lt;/a&gt;です。&lt;/p&gt;
        &lt;/mt:CategoryNext&gt;
    &lt;/mt:If&gt;
&lt;/mt:If&gt;
&lt;mt:If name=&quot;author_archive&quot;&gt;
    &lt;mt:If name=&quot;datebased_archive&quot;&gt;
        &lt;p class=&quot;first&quot;&gt;このページには、&lt;strong&gt;&lt;$mt:AuthorDisplayName encode_html=&quot;1&quot;$&gt;&lt;/strong&gt;が&lt;strong&gt;&lt;$mt:ArchiveDate format=&quot;%B %Y&quot;$&gt;&lt;/strong&gt;に書いたブログ記事が含まれています。&lt;/p&gt;
        &lt;mt:ArchivePrevious&gt;
        &lt;p&gt;前のアーカイブは&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt;&lt;/a&gt;です。&lt;/p&gt;
        &lt;/mt:ArchivePrevious&gt;
        &lt;mt:ArchiveNext&gt;
        &lt;p&gt;次のアーカイブは&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt;&lt;/a&gt;です。&lt;/p&gt;
        &lt;/mt:ArchiveNext&gt;
    &lt;mt:Else&gt;
        &lt;p class=&quot;first&quot;&gt;このページには、&lt;strong&gt;&lt;$mt:AuthorDisplayName encode_html=&quot;1&quot;$&gt;&lt;/strong&gt;が最近書いたブログ記事が含まれています。&lt;/p&gt;
    &lt;/mt:If&gt;
&lt;/mt:If&gt;
&lt;mt:If name=&quot;datebased_only_archive&quot;&gt;
        &lt;p class=&quot;first&quot;&gt;このページには、&lt;strong&gt;&lt;$mt:ArchiveDate format=&quot;%B %Y&quot;$&gt;&lt;/strong&gt;に書かれたブログ記事が新しい順に公開されています。&lt;/p&gt;
    &lt;mt:ArchivePrevious&gt;
        &lt;p&gt;前のアーカイブは&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt;&lt;/a&gt;です。&lt;/p&gt;
    &lt;/mt:ArchivePrevious&gt;
    &lt;mt:ArchiveNext&gt;
        &lt;p&gt;次のアーカイブは&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt;&lt;/a&gt;です。&lt;/p&gt;
    &lt;/mt:ArchiveNext&gt;
&lt;/mt:If&gt;
&lt;mt:If name=&quot;archive_index&quot;&gt;
        &lt;p&gt;最近のコンテンツは&lt;a href=&quot;&lt;$mt:BlogURL$&gt;&quot;&gt;インデックスページ&lt;/a&gt;で見られます。&lt;/p&gt;
&lt;mt:Else&gt;
        &lt;p&gt;最近のコンテンツは&lt;a href=&quot;&lt;$mt:BlogURL$&gt;&quot;&gt;インデックスページ&lt;/a&gt;で見られます。過去に書かれたものは&lt;a href=&quot;&lt;$mt:Link template=&quot;archive_index&quot;$&gt;&quot;&gt;アーカイブのページ&lt;/a&gt;で見られます。&lt;/p&gt;
&lt;/mt:If&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/mt:unless&gt;
</text></template>
<template id='145' blog_id='5' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225428' identifier='signin' modified_on='20110606225428' name='サインイン' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfRegistrationAllowed&gt;
&lt;div class=&quot;widget-sign-in widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;サインイン&lt;/h3&gt;
    &lt;div id=&quot;signin-widget-content&quot; class=&quot;widget-content&quot;&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
/* &lt;![CDATA[ */
function mtUpdateSignInWidget(u) {
    var el = document.getElementById(&apos;signin-widget-content&apos;);
    var content = &apos;&apos;;
    if (!el) return;
    if (u) {
        if (u &amp;&amp; u.is_authenticated) {
            user = u;
            mtSaveUser();
        } else {
            // user really isn&apos;t logged in; so let&apos;s do this!
            return mtSignIn();
        }
    } else {
        u = mtGetUser();
    }
    if (u &amp;&amp; u.name) {
        var url;
        if (u.is_authenticated) {
            if (u.is_author) {
                url = &apos;&lt;$mt:CGIPath$&gt;&lt;$mt:CommentScript$&gt;?__mode=edit_profile&apos;;
                url += &apos;&amp;return_url=&apos; + encodeURIComponent( location.href );
            } else {
                url = u.url;
            }
        } else if (u.url) {
            url = u.url;
        } else {
            url = null;
        }
        var content = &apos;ユーザー名:&apos;;
        if (url)
            content += &apos;&lt;a href=&quot;&apos; + url + &apos;&quot;&gt;&apos; + u.name + &apos;&lt;/a&gt;&apos;;
        else
            content += u.name;
        content += &apos;.  (&lt;a href=&quot;javascript:void(0)&quot; onclick=&quot;return mtSignOutOnClick()&quot;&gt;サインアウト&lt;/a&gt;)&apos;;
    } else if (u &amp;&amp; u.is_banned) {
        content = &apos;このブログにサインインする権限がありません。&apos;;
    } else {
        content = &apos;&lt;a href=&quot;javascript:void(0)&quot; onclick=&quot;return mtSignInOnClick(\&apos;signin-widget-content\&apos;)&quot;&gt;サインイン&lt;/a&gt;&apos;;
    }
    el.innerHTML = content;
}
mtAttachEvent(&apos;usersignin&apos;, mtUpdateSignInWidget);
mtUpdateSignInWidget();
/* ]]&gt; */
&lt;/script&gt;
&lt;/mt:IfRegistrationAllowed&gt;
</text></template>
<template id='146' blog_id='5' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225428' identifier='openid' modified_on='20110606225428' name='OpenID対応' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfRegistrationAllowed type=&quot;OpenID&quot;&gt;
&lt;div class=&quot;widget-openid widget&quot;&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;em&gt;&lt;strong&gt;OpenID&lt;/strong&gt;対応しています&lt;/em&gt;
        &lt;a href=&quot;http://www.movabletype.jp/openid/&quot;&gt;OpenIDについて&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/mt:IfRegistrationAllowed&gt;
</text></template>
<template id='147' blog_id='5' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225428' identifier='creative_commons' modified_on='20110606225428' name='クリエイティブ・コモンズ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:BlogIfCCLicense&gt;
&lt;div class=&quot;widget-creative-commons widget&quot;&gt;
   &lt;div class=&quot;widget-content&quot;&gt;
      &lt;a href=&quot;&lt;$mt:BlogCCLicenseURL$&gt;&quot;&gt;&lt;img alt=&quot;Creative Commons License&quot; src=&quot;&lt;$mt:BlogCCLicenseImage$&gt;&quot; /&gt;&lt;/a&gt;&lt;br /&gt;
      このブログは&lt;a href=&quot;&lt;$mt:BlogCCLicenseURL$&gt;&quot;&gt;クリエイティブ・コモンズ&lt;/a&gt;でライセンスされています。
   &lt;/div&gt;
&lt;/div&gt;
&lt;/mt:BlogIfCCLicense&gt;
</text></template>
<template id='148' blog_id='5' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225428' identifier='template_409' modified_by='1' modified_on='20130122172030' name='外部ファイル読み込み' rebuild_me='0' type='custom' current_revision='7' cache_expire_type='0' include_with_ssi='0' revision='7'><text>&lt;link rel=&quot;alternate&quot; media=&quot;handheld&quot; type=&quot;text/html&quot; href=&quot;http://nichinare.com/m/&quot; /&gt;
&lt;!-- PC --&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/common/css/import.css&quot; media=&quot;only screen and (min-width: 911px)&quot; /&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/common/css/lightbox.css&quot; media=&quot;only screen and (min-width: 911px)&quot; /&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot;  href=&quot;/about/css/style.css&quot; media=&quot;only screen and (min-width: 911px)&quot; /&gt;

&lt;!-- スマホ --&gt;
&lt;link href=&quot;/common/css/sp_base.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; media=&quot;only screen and (min-width: 0px) and (max-width: 640px)&quot; &gt;
&lt;link href=&quot;/common/css/sp_layout.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; media=&quot;only screen and (min-width: 0px) and (max-width: 640px)&quot; &gt;
&lt;link href=&quot;/about/css/sp_style.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; media=&quot;only screen and (min-width: 0px) and (max-width: 640px)&quot; &gt;

&lt;!--[if IE ]&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/common/css/import.css&quot; media=&quot;all&quot; /&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/common/css/lightbox.css&quot; media=&quot;screen&quot; /&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot;  href=&quot;/about/css/style.css&quot; media=&quot;all&quot; /&gt;
&lt;![endif]--&gt;

&lt;script src=&quot;/common/js/prototype.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;/common/js/scriptaculous.js?load=effects,builder&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;/common/js/lightbox.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;/common/js/setQueryParamNew.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;/common/js/mjl.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;/common/js/run.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;/common/js/ga.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;/head&gt;</text></template>
<template id='149' blog_id='5' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225428' identifier='comment_response' modified_on='20110606225428' name='コメント完了' rebuild_me='1' type='comment_response' current_revision='0'><text>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;
    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; id=&quot;sixapart-standard&quot;&gt;
&lt;head&gt;


&lt;mt:If name=&quot;comment_confirmation&quot;&gt;
    &lt;mt:Ignore&gt;&lt;!-- Success message when comment has been submitted --&gt;&lt;/mt:Ignore&gt;
    &lt;$mt:Var name=&quot;page_title&quot; value=&quot;確認&quot;$&gt;
    &lt;$mt:Var name=&quot;message&quot; value=&quot;&lt;p&gt;コメントを投稿しました。&lt;/p&gt;&quot;$&gt;
&lt;mt:Else name=&quot;comment_pending&quot;&gt;
    &lt;mt:Ignore&gt;&lt;!-- Pending message when comment is being held for review --&gt;&lt;/mt:Ignore&gt;
    &lt;$mt:Var name=&quot;page_title&quot; value=&quot;コメントありがとうございます。&quot;$&gt;
    &lt;$mt:Var name=&quot;message&quot; value=&quot;&lt;p&gt;コメントは現在承認されるまで公開を保留されています。&lt;/p&gt;&quot;$&gt;
&lt;mt:Else name=&quot;comment_error&quot;&gt;
    &lt;mt:Ignore&gt;&lt;!-- Error message when comment submission fails --&gt;&lt;/mt:Ignore&gt;
    &lt;$mt:Var name=&quot;page_title&quot; value=&quot;コメント投稿エラー&quot;$&gt;
    &lt;mt:SetVarBlock name=&quot;message&quot;&gt;&lt;p&gt;コメントを投稿できませんでした。エラー: &lt;$mt:ErrorMessage$&gt;&lt;/p&gt;&lt;/mt:SetVarBlock&gt;
&lt;/mt:If&gt;


    &lt;$mt:Include module=&quot;HTMLヘッダー&quot;$&gt;
    &lt;title&gt;&lt;$mt:BlogName encode_html=&quot;1&quot;$&gt;: &lt;$mt:Var name=&quot;page_title&quot;$&gt;&lt;/title&gt;
&lt;/head&gt;
&lt;body id=&quot;&lt;$mt:BlogThemeID$&gt;&quot; class=&quot;&lt;$mt:Var name=&quot;body_class&quot;$&gt; &lt;$mt:Var name=&quot;page_layout&quot;$&gt;&quot;&gt;
    &lt;div id=&quot;container&quot;&gt;
        &lt;div id=&quot;container-inner&quot;&gt;


            &lt;$mt:Include module=&quot;バナーヘッダー&quot;$&gt;


            &lt;div id=&quot;content&quot;&gt;
                &lt;div id=&quot;content-inner&quot;&gt;


                    &lt;div id=&quot;alpha&quot;&gt;
                        &lt;div id=&quot;alpha-inner&quot;&gt;
                            &lt;h1 id=&quot;page-title&quot;&gt;&lt;$mt:Var name=&quot;page_title&quot;$&gt;&lt;/h1&gt;
                            &lt;$mt:Var name=&quot;message&quot;$&gt;
                            &lt;p&gt;&lt;a href=&quot;&lt;mt:If name=&quot;comment_error&quot;&gt;javascript:history.back()&lt;mt:Else&gt;&lt;$mt:EntryLink$&gt;&lt;/mt:If&gt;&quot;&gt;元の記事&lt;/a&gt;に戻る&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;


                    &lt;$mt:Include module=&quot;サイドバー&quot;$&gt;


                &lt;/div&gt;
            &lt;/div&gt;


            &lt;$mt:Include module=&quot;バナーフッター&quot;$&gt;


        &lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</text></template>
<template id='150' blog_id='5' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225428' identifier='archive_widgets_group' modified_on='20110606225428' name='アーカイブウィジェットグループ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:Ignore&gt;
    アーカイブの種類に応じて異なる内容を表示するように設定されたウィジェットです。詳細: http://www.movabletype.org/documentation/designer/widget-sets.html
&lt;/mt:Ignore&gt;
&lt;mt:If name=&quot;category_archive&quot;&gt;
    &lt;mt:IfArchiveTypeEnabled archive_type=&quot;Category-Monthly&quot;&gt;
        &lt;$mt:Include widget=&quot;カテゴリ月別アーカイブ&quot;$&gt;
    &lt;/mt:IfArchiveTypeEnabled&gt;
&lt;/mt:If&gt;
&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Category&quot;&gt;
    &lt;$mt:Include widget=&quot;カテゴリアーカイブ&quot;$&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Monthly&quot;&gt;
    &lt;$mt:Include widget=&quot;月別アーカイブ&quot;$&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
</text></template>
<template id='151' blog_id='5' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225428' identifier='syndication' modified_on='20110606225428' name='購読' rebuild_me='1' type='widget' current_revision='0'><text>&lt;div class=&quot;widget-syndication widget&quot;&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
            &lt;li&gt;&lt;img src=&quot;&lt;$mt:StaticWebPath$&gt;images/status_icons/feed.gif&quot; alt=&quot;購読する&quot; width=&quot;9&quot; height=&quot;9&quot; /&gt; &lt;a href=&quot;&lt;$mt:Link template=&quot;feed_recent&quot;$&gt;&quot;&gt;このブログを購読&lt;/a&gt;&lt;/li&gt;
&lt;mt:If name=&quot;search_results&quot;&gt;
    &lt;mt:If tag=&quot;SearchString&quot;&gt;
            &lt;li class=&quot;search-results-feed&quot;&gt;&lt;img src=&quot;&lt;$mt:StaticWebPath$&gt;images/status_icons/feed.gif&quot; alt=&quot;購読する&quot; width=&quot;9&quot; height=&quot;9&quot; /&gt; &lt;a href=&quot;&lt;$mt:CGIPath$&gt;&lt;$mt:SearchScript$&gt;?&lt;mt:IfTagSearch&gt;tag&lt;mt:else&gt;search&lt;/mt:IfTagSearch&gt;=&lt;$mt:SearchString encode_url=&quot;1&quot;$&gt;&amp;amp;Template=feed&amp;amp;IncludeBlogs=&lt;$mt:SearchIncludeBlogs$&gt;&amp;amp;limit=&lt;$mt:SearchMaxResults$&gt;&quot; title=&quot;&lt;mt:IfTagSearch&gt;「&lt;$mt:SearchString$&gt;」の検索結果を購読&lt;mt:Else&gt;タグ「&lt;$mt:SearchString$&gt;」を購読&lt;/mt:IfTagSearch&gt;&quot;&gt;&lt;mt:IfTagSearch&gt;タグ「&lt;$mt:SearchString$&gt;」のフィード&lt;mt:Else&gt;「&lt;$mt:SearchString$&gt;」を検索した結果のフィード&lt;/mt:IfTagSearch&gt;&lt;/a&gt;&lt;/li&gt;
    &lt;/mt:If&gt;
&lt;/mt:If&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
</text></template>
<template id='152' blog_id='5' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225428' identifier='dynamic_error' modified_on='20110606225428' name='ダイナミックパブリッシングエラー' rebuild_me='1' type='dynamic_error' current_revision='0'><text>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;
    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; id=&quot;sixapart-standard&quot;&gt;
&lt;head&gt;
    &lt;$mt:Include module=&quot;HTMLヘッダー&quot;$&gt;
    &lt;title&gt;&lt;$mt:BlogName encode_html=&quot;1&quot;$&gt;: ページが見つかりません。&lt;/title&gt;
&lt;/head&gt;
&lt;body id=&quot;&lt;$mt:BlogThemeID$&gt;&quot; class=&quot;mt-dynamic-error &lt;$mt:Var name=&quot;page_layout&quot;$&gt;&quot;&gt;
    &lt;div id=&quot;container&quot;&gt;
        &lt;div id=&quot;container-inner&quot;&gt;


            &lt;$mt:Include module=&quot;バナーヘッダー&quot;$&gt;


            &lt;div id=&quot;content&quot;&gt;
                &lt;div id=&quot;content-inner&quot;&gt;


                    &lt;div id=&quot;alpha&quot;&gt;
                        &lt;div id=&quot;alpha-inner&quot;&gt;
                            &lt;h1 id=&quot;page-title&quot;&gt;ページが見つかりません。&lt;/h1&gt;
                            &lt;blockquote&gt;
                                &lt;strong&gt;&lt;$mt:ErrorMessage$&gt;&lt;/strong&gt;
                            &lt;/blockquote&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;


                    &lt;$mt:Include module=&quot;サイドバー&quot;$&gt;


                &lt;/div&gt;
            &lt;/div&gt;


            &lt;$mt:Include module=&quot;バナーフッター&quot;$&gt;


        &lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</text></template>
<template id='153' blog_id='5' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225428' identifier='javascript' modified_on='20110606225428' name='JavaScript' outfile='mt.js' rebuild_me='1' type='index' current_revision='0'><text>&lt;mt:Ignore&gt;
/*  The following functions and variables are here to support legacy MT templates.
    If you have refreshed your JavaScript template but still use older MT comment
    templates, you may need to uncomment this block in order for those templates 
    to work properly. To use, simply remove the &apos;mt:Ignore&apos; tags wrapping this
    block of code.
*/
    function hideDocumentElement(id) { return mtHide(id) }
    function showDocumentElement(id) { return mtShow(id) }
    function individualArchivesOnLoad() { return mtEntryOnLoad() }
    function writeCommenterGreeting() { return mtShowGreeting() }
    function rememberMe(f) { return mtRememberMe(f) }
    function forgetMe(f) { return mtForgetMe(f) }
    var commenter_name;
    var commenter_id;
    var commenter_url;
    var commenter_blog_ids;
    var mtcmtmail;
    var mtcmtauth;
    var mtcmthome;
    var captcha_timer;
&lt;/mt:Ignore&gt;

// The cookie name to use for storing the blog-side comment session cookie.
var mtCookieName = &quot;&lt;$mt:UserSessionCookieName$&gt;&quot;;
var mtCookieDomain = &quot;&lt;$mt:UserSessionCookieDomain$&gt;&quot;;
var mtCookiePath = &quot;&lt;$mt:UserSessionCookiePath$&gt;&quot;;
var mtCookieTimeout = &lt;$mt:UserSessionCookieTimeout$&gt;;

&lt;mt:Ignore&gt;
/***
 * Simple routine for showing a DOM element (applying a CSS display
 * attribute of &apos;none&apos;).
 */
&lt;/mt:Ignore&gt;
function mtHide(id) {
    var el = (typeof id == &quot;string&quot;) ? document.getElementById(id) : id;
    if (el) el.style.display = &apos;none&apos;;
}

&lt;mt:Ignore&gt;
/***
 * Simple routine for showing a DOM element (applying a CSS display
 * attribute of &apos;block&apos;).
 */
&lt;/mt:Ignore&gt;
function mtShow(id) {
    var el = (typeof id == &quot;string&quot;) ? document.getElementById(id) : id;
    if (el) el.style.display = &apos;block&apos;;
}

&lt;mt:Ignore&gt;
/***
 * A utility function for assigning/adding handlers to window events.
 */
&lt;/mt:Ignore&gt;
function mtAttachEvent(eventName,func) {
    var onEventName = &apos;on&apos; + eventName;
    var old = window[onEventName];
    if( typeof old != &apos;function&apos; )
        window[onEventName] = func;
    else {
        window[onEventName] = function( evt ) {
            old( evt );
            return func( evt );
        };
    }
}

&lt;mt:Ignore&gt;
/***
 * Calls the event named, if there are handlers for it.
 */
&lt;/mt:Ignore&gt;
function mtFireEvent(eventName,param) {
    var fn = window[&apos;on&apos; + eventName];
    if (typeof fn == &apos;function&apos;) return fn(param);
    return;
}

if(!this.JSON){JSON={};}(function(){function f(n){return n&lt;10?&apos;0&apos;+n:n;}if(typeof Date.prototype.toJSON!==&apos;function&apos;){Date.prototype.toJSON=function(key){return this.getUTCFullYear()+&apos;-&apos;+f(this.getUTCMonth()+1)+&apos;-&apos;+f(this.getUTCDate())+&apos;T&apos;+f(this.getUTCHours())+&apos;:&apos;+f(this.getUTCMinutes())+&apos;:&apos;+f(this.getUTCSeconds())+&apos;Z&apos;;};String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(key){return this.valueOf();};}var cx=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,escapable=/[\\\&quot;\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta={&apos;\b&apos;:&apos;\\b&apos;,&apos;\t&apos;:&apos;\\t&apos;,&apos;\n&apos;:&apos;\\n&apos;,&apos;\f&apos;:&apos;\\f&apos;,&apos;\r&apos;:&apos;\\r&apos;,&apos;&quot;&apos;:&apos;\\&quot;&apos;,&apos;\\&apos;:&apos;\\\\&apos;},rep;function quote(string){escapable.lastIndex=0;return escapable.test(string)?&apos;&quot;&apos;+string.replace(escapable,function(a){var c=meta[a];return typeof c===&apos;string&apos;?c:&apos;\\u&apos;+(&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);})+&apos;&quot;&apos;:&apos;&quot;&apos;+string+&apos;&quot;&apos;;}function str(key,holder){var i,k,v,length,mind=gap,partial,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;&amp;&amp;typeof value.toJSON===&apos;function&apos;){value=value.toJSON(key);}if(typeof rep===&apos;function&apos;){value=rep.call(holder,key,value);}switch(typeof value){case&apos;string&apos;:return quote(value);case&apos;number&apos;:return isFinite(value)?String(value):&apos;null&apos;;case&apos;boolean&apos;:case&apos;null&apos;:return String(value);case&apos;object&apos;:if(!value){return&apos;null&apos;;}gap+=indent;partial=[];if(Object.prototype.toString.apply(value)===&apos;[object Array]&apos;){length=value.length;for(i=0;i&lt;length;i+=1){partial[i]=str(i,value)||&apos;null&apos;;}v=partial.length===0?&apos;[]&apos;:gap?&apos;[\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+mind+&apos;]&apos;:&apos;[&apos;+partial.join(&apos;,&apos;)+&apos;]&apos;;gap=mind;return v;}if(rep&amp;&amp;typeof rep===&apos;object&apos;){length=rep.length;for(i=0;i&lt;length;i+=1){k=rep[i];if(typeof k===&apos;string&apos;){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}}else{for(k in value){if(Object.hasOwnProperty.call(value,k)){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}}v=partial.length===0?&apos;{}&apos;:gap?&apos;{\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+mind+&apos;}&apos;:&apos;{&apos;+partial.join(&apos;,&apos;)+&apos;}&apos;;gap=mind;return v;}}if(typeof JSON.stringify!==&apos;function&apos;){JSON.stringify=function(value,replacer,space){var i;gap=&apos;&apos;;indent=&apos;&apos;;if(typeof space===&apos;number&apos;){for(i=0;i&lt;space;i+=1){indent+=&apos; &apos;;}}else if(typeof space===&apos;string&apos;){indent=space;}rep=replacer;if(replacer&amp;&amp;typeof replacer!==&apos;function&apos;&amp;&amp;(typeof replacer!==&apos;object&apos;||typeof replacer.length!==&apos;number&apos;)){throw new Error(&apos;JSON.stringify&apos;);}return str(&apos;&apos;,{&apos;&apos;:value});};}if(typeof JSON.parse!==&apos;function&apos;){JSON.parse=function(text,reviver){var j;function walk(holder,key){var k,v,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;){for(k in value){if(Object.hasOwnProperty.call(value,k)){v=walk(value,k);if(v!==undefined){value[k]=v;}else{delete value[k];}}}}return reviver.call(holder,key,value);}cx.lastIndex=0;if(cx.test(text)){text=text.replace(cx,function(a){return&apos;\\u&apos;+(&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);});}if(/^[\],:{}\s]*$/.test(text.replace(/\\(?:[&quot;\\\/bfnrt]|u[0-9a-fA-F]{4})/g,&apos;@&apos;).replace(/&quot;[^&quot;\\\n\r]*&quot;|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,&apos;]&apos;).replace(/(?:^|:|,)(?:\s*\[)+/g,&apos;&apos;))){j=eval(&apos;(&apos;+text+&apos;)&apos;);return typeof reviver===&apos;function&apos;?walk({&apos;&apos;:j},&apos;&apos;):j;}throw new SyntaxError(&apos;JSON.parse&apos;);};}}());

var MT = window.MT || {};

MT.cons = function () {
  return {
    LOG : &apos;log&apos;,
    WARN : &apos;warn&apos;,
    DEBUG : &apos;debug&apos;,
    INFO : &apos;info&apos;,
    ERR : &apos;error&apos;,
    JSON : &apos;json&apos;
  };
}();

&lt;mt:Ignore&gt;
/**
 * Used for base functionality related to MT
 * 
 * @package MT
 * @class core
 * @global
 * @param {Object} o optional configuration object
 * Options:
 */
&lt;/mt:Ignore&gt;
MT.core = function (o) {
  var _debug = false;
  
  return {
    &lt;mt:Ignore&gt;
    /**
     * Makes remote call and handles response
     * 
     * @param {String} url The URL endpoint
     * @param {String} respType The type of response expected
     * @param {Function} respHandler The function to handle the response
     * @return void
     */
    &lt;/mt:Ignore&gt;
    connect : function (url,respType,respHandler) {
      var xh = mtGetXmlHttp();
      if (!xh) return false;
      
      xh.onreadystatechange = function() {
        if ( xh.readyState == 4 ) {
          if ( xh.status &amp;&amp; ( xh.status != 200 ) ) {
            // error - ignore
          } else {
            switch (respType) {
              case &apos;json&apos;:
                respHandler(JSON.parse(xh.responseText));
                break;
                
              case &apos;xml&apos;:
                break;
                
              case &apos;text&apos;:
                break;
            }
          }
        }
      };
      
      xh.open(&apos;GET&apos;,url);
      xh.send(null);
    },
    
    getEl : function (el) {
      return MT.util.checkNodeType(el)===&apos;element&apos; ? id : (document.getElementById(el) || false);
    },
    
    addEvent : function (el,type,func,obj) {
      if(!obj &amp;&amp; document.addEventListener) {
        el.addEventListener(type,func,false);
      } else if(obj &amp;&amp; document.addEventListener) {
        el.addEventListener(type,function () {
          func.call(obj,event);
        },false);
      } else {
        if(obj) {
          el.attachEvent(&apos;on&apos; + type,function () {
            func.call(obj,event);
          });
        } else {
          el.attachEvent(&apos;on&apos; + type,function () {          
            func.call(el,event);
          });
        }
      }
    },
    
    &lt;mt:Ignore&gt;
    /**
     * Basic logging function
     * 
     * @param {String} level The log level (WARN|DEBUG|INFO|ERROR|LOG)
     * Specified by one of the MT constants
     * @param {String} msg The log message
     * @return void
     */
    &lt;/mt:Ignore&gt;
    log : function (level,msg) {
      if(_debug &amp;&amp; window.console) {
        switch(level) {
          case &apos;warn&apos;:
          case &apos;debug&apos;:
          case &apos;info&apos;:
          case &apos;error&apos;:
          case &apos;log&apos;:
            console[level](msg);
            break;
            
          default:
            return false; 
        }
      } else {
        return false;
      }
    }
  }
}();

&lt;mt:Ignore&gt;
/**
 * Utilities class
 * 
 * @package MT
 * @class util
 * @global
 * Options:
 */
&lt;/mt:Ignore&gt;
MT.util = function () {
  return {
    toggleVisibility : {
      show : function () {
        var i = arguments.length;
        
        while(i--) {
          if(MT.util.checkNodeType(arguments[i])===&apos;element&apos;) {
            arguments[i].style.visibility = &apos;visible&apos;;
          } else {
            MT.core.getEl(arguments[i]).style.visibility = &apos;visible&apos;;
          }
        }
      },
      
      hide : function () {
        var i = arguments.length;
        while(i--) {
          if(MT.util.checkNodeType(arguments[i])===&apos;element&apos;) {
            arguments[i].style.visibility = &apos;hidden&apos;;
          } else {
            MT.core.getEl(arguments[i]).style.visibility = &apos;hidden&apos;;
          }
        }
      }
    },
    
    toggleDisplay : {
      show : function () {
        var i = arguments.length;
        while(i--) {
          if(MT.util.checkNodeType(arguments[i])===&apos;element&apos;) {
            arguments[i].style.display = &apos;&apos;;
          } else {
            MT.core.getEl(arguments[i]).style.display = &apos;&apos;;
          }
        }
      },
      
      hide : function () {
        var i = arguments.length;
        while(i--) {
          if(MT.util.checkNodeType(arguments[i])===&apos;element&apos;) {
            arguments[i].style.display = &apos;none&apos;;
          } else {
            MT.core.getEl(arguments[i]).style.display = &apos;none&apos;;
          }
        }
      }
    },
    
    &lt;mt:Ignore&gt;
    /**
     * Finds the nearest defining (i.e. with an id) parent to the given element
     * 
     * @param {HTMLElement} origin the node from which to start the search
     * @return {HTMLElement|Boolean} The parent node with an id attribute or false
     */
    &lt;/mt:Ignore&gt;
    findDefiningParent : function (origin) {
      if(MT.util.checkNodeType(origin)===&apos;element&apos;) {
        for(var node=origin.parentNode;node.parentNode;node=node.parentNode) {
          if((node.hasAttribute &amp;&amp; node.hasAttribute(&apos;id&apos;)) || node.getAttribute(&apos;id&apos;)) {
            return node;
          }
        }
      }
      return false;
    },
    
    &lt;mt:Ignore&gt;
    /**
     * Tests objects to verify if they are DOM nodes
     * 
     * @param {Object} obj The object to be tested
     * @return {String} the values &apos;element&apos;|&apos;textnode&apos;|&apos;whitespace&apos;
     */
    &lt;/mt:Ignore&gt;
    checkNodeType : function (obj) {
      if (obj &amp;&amp; obj.nodeName){
        switch (obj.nodeType) {
          case 1: return &apos;element&apos;;
          case 3: return (/\S/).test(obj.nodeValue) ? &apos;textnode&apos; : &apos;whitespace&apos;;
        }
      }
    }
  }
}();

&lt;mt:Ignore&gt;
/**
 * mtPaginateComments takes the currently generated static page and either:
 *  - Attempts to find an individual comment link in the query string
 *  - If no link is found, the static page loads
 * In either case, the pagination event is set
 */
&lt;/mt:Ignore&gt;
(function () {
  var M = MT.core,
      c = MT.cons,
      u = MT.util,
      cache,
      isLoading,
      direction,
      currentComments,
      commentAnchor,
      commentArrId,
      commentsPerPage,
      commentsTotalPages,
      loadingIcon,
      pageNum,
      commentsOffset,
      totalComments,
      entryID,
      commentContentDiv,
      topNav,
      nav,
      currentCommentsSpan,
      topCurrentCommentsSpan;
            
  M.addEvent(window,&apos;load&apos;,_init);
  
  /**
   * Initializes the class
   * 
   * @return void
   */
  function _init () {
    if(!MT.entryCommentCount) {
      return;
    }
    
    _initializeVariables();
    _setCommentOffset(false);
    _checkForAnchor();
		_setCurrentComments();
    _toggleNavLinks();
    _initializeEvents();
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Initializes variables to their initial values
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _initializeVariables() {
    cache = {};
    isLoading = false;
    commentAnchor = &apos;&apos;;
    commentArrId = &apos;&apos;;
    commentsPerPage = MT.commentsPerPage || 50;
    currentComments = &apos;&apos;;
    direction = &apos;ascend&apos;;
    entryID = MT.entryID;
    totalComments = MT.entryCommentCount;
    commentsTotalPages = Math.ceil(totalComments / commentsPerPage);
    pageNum = 1;
    
    loadingIcon = &quot;&lt;img title=&apos;Loading...&apos; src=&apos;&lt;$MTStaticWebPath$&gt;images/indicator.white.gif&apos; alt=&apos;Loading&apos; /&gt;&quot;;
    
    commentContentDiv = M.getEl(&quot;comments-content&quot;);
    topNav = M.getEl(&quot;top-comment-nav&quot;);
    nav = M.getEl(&quot;comment-nav&quot;);
    
    currentCommentsSpan = M.getEl(&quot;current-comments&quot;);
    topCurrentCommentsSpan = M.getEl(&quot;top-current-comments&quot;);
  }
  
  function _initializeEvents() {
    if (commentsPerPage &lt; totalComments) {
      M.addEvent(nav,&apos;click&apos;,_handleEvents);
      M.addEvent(topNav,&apos;click&apos;,_handleEvents);
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Checks for an existing anchor tag in the query string
   * If found, it looks for it on the current page
   * If that fails, it tries to find it in comment list and loads
   * the desired page
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _checkForAnchor() {
    var found = String(window.location.hash).match( /comment-(\d{1,6})/ );
		
		if (found) {
		  M.log(c.DEBUG,found);
			if (!Object.prototype.hasOwnProperty.call(M.getEl(found[0]), &apos;className&apos;)) {
				if (_findIdMatch(found[1])) {
    			pageNum = Math.floor(commentArrId / commentsPerPage) + 1;
    			M.log(c.DEBUG,&apos;Comment Array Id: &apos; + commentArrId);
    			M.log(c.DEBUG,&apos;Comments Per Page: &apos; + commentsPerPage);
    			M.log(c.DEBUG,&apos;Page Number: &apos; + pageNum);
    			M.log(c.DEBUG,&apos;Comment Offset: &apos; + _getCommentOffset());
    			_updateComments();
    		}
			}
		}
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Sets commentsOffset (i.e. the offset number to the remote list)
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _setCommentOffset() {
    commentsOffset = commentsPerPage * (pageNum-1);
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Gets the commentsOffset (i.e. the offset number to the remote list)
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _getCommentOffset() {
    return commentsOffset;
  }
  
  &lt;mt:Ignore&gt;
  /**
   * General event handler
   * 
   * @param {Event} e The event object
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _handleEvents (e) {
    var origin = e.target || e.srcElement,
        parentId;
        
    // stupid IE
    origin = origin.id &amp;&amp; M.getEl(origin.id) || false;

    if(origin) {
      parentId = u.checkNodeType(origin.parentNode)===&apos;element&apos; &amp;&amp; origin.parentNode.getAttribute(&apos;id&apos;) &amp;&amp; origin.parentNode.id;
    } else {
      return false;
    }
    
    switch(origin.nodeName) {
      case &apos;A&apos;:
        switch (parentId) {
          case &apos;prev-comments&apos;:
          case &apos;top-prev-comments&apos;:
            if(e.preventDefault) {
              e.preventDefault();
            } else {
              e.returnValue =	false;
            }
            if(!isLoading) {
              _previousPage();
            }
            break;
          case &apos;next-comments&apos;:
          case &apos;top-next-comments&apos;:
            if(e.preventDefault) {
              e.preventDefault();
            } else {
              e.returnValue =	false;
            }
            if(!isLoading) {
              _nextPage();
            }
            break;
        }
        break;
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Toggles the visibility of the navigation links
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _toggleNavLinks () {
    M.log(c.DEBUG,M.getEl(&apos;top-prev-comments&apos;));
    if(pageNum &lt;= commentsTotalPages &amp;&amp; pageNum !== 1) {
      u.toggleVisibility.show(&apos;prev-comments&apos;);
      u.toggleVisibility.show(&apos;top-prev-comments&apos;);
    }
    
    if(pageNum &gt;= 1 &amp;&amp; pageNum !== commentsTotalPages) {
      u.toggleVisibility.show(&apos;next-comments&apos;);
      u.toggleVisibility.show(&apos;top-next-comments&apos;);
    }
    
    if(pageNum===1 || nav.style.visibility===&apos;hidden&apos;) {
      u.toggleVisibility.hide(&apos;prev-comments&apos;);
      u.toggleVisibility.hide(&apos;top-prev-comments&apos;);
    }
    
    if(pageNum===commentsTotalPages || nav.style.visibility===&apos;hidden&apos;) {
      u.toggleVisibility.hide(&apos;next-comments&apos;);
      u.toggleVisibility.hide(&apos;top-next-comments&apos;);
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Determines appropriate action based on the id of the parent
   * clicked link. Decrements pageNum based on id.
   * 
   * @param {String} id the id of the parent of the clicked link
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _nextPage () {
    if(pageNum &lt; commentsTotalPages) {
      pageNum++;
      _updateComments();
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Determines appropriate action based on the id of the parent
   * clicked link. Increments/decrements pageNum based on id.
   * 
   * @param {String} id the id of the parent of the clicked link
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _previousPage() {
    if(pageNum &gt; 1) {
      pageNum--;
      _updateComments();
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Searches for a particular comment in the list of ids
   * 
   * @param {String} id The id for which to search
   * @return {Boolean} true, if found, false otherwise
   */
  &lt;/mt:Ignore&gt;
  function _findIdMatch (id) {
    var len = MT.commentIds.length;
    
  	while (len--) {
  		if (MT.commentIds[len] == id) {
  			commentAnchor = &quot;comment-&quot; + id;
  			commentArrId = len;
  			return true;
  		}
  	}
  	
  	return false;
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Sets the current comment counts on the page
   *
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _setCurrentComments() {
    var commentsOnPage = pageNum != commentsTotalPages ? commentsOffset + commentsPerPage : totalComments;
    
    _setCurrentCommentsContent([commentsOffset+1,&quot; - &quot;,commentsOnPage].join(&apos;&apos;));
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Sets the &quot;current-comments&quot; element with the HTML value
   * 
   * @param {String|Element} currentCommentsHTML The content to be set
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _setCurrentCommentsContent(currentCommentsHTML) {
    currentCommentsSpan.innerHTML = currentCommentsHTML;
    topCurrentCommentsSpan.innerHTML = currentCommentsHTML;
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Sets the content of the comment list
   * 
   * @param {String|Element} commentHTML The content to be set 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _setCommentContent(commentHTML) {
    commentContentDiv.innerHTML = commentHTML;
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Builds the appropriate URL to make a remote call to get the
   * next set of comments
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _updateComments() {
    var comments, jsonUrl;
    isLoading = true;
    _setCurrentCommentsContent(loadingIcon);
    _setCommentOffset();
    
    jsonUrl = [
        &quot;&lt;$mt:CGIPath$&gt;&lt;$mt:CommentScript$&gt;?__mode=comment_listing&amp;direction=&quot;,
        direction,
        &quot;&amp;entry_id=&quot;,
        entryID,
        &quot;&amp;limit=&quot;,
        commentsPerPage,
        &quot;&amp;offset=&quot;,
        _getCommentOffset()
      ].join(&apos;&apos;);
  	
  	if (!commentAnchor) {
      commentAnchor = &quot;comments-content&quot;;
    }
    
    if(cache.hasOwnProperty(jsonUrl)) {
      _refreshComments(cache[jsonUrl]);
      isLoading = false;
    } else {
      M.connect(jsonUrl,c.JSON,function (json) {
        cache[jsonUrl] = json.comments;
    	  _refreshComments(json.comments);
    	  isLoading = false;
      });
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Refreshes the comment data with the current
   * 
   * @param {String} commentData The data used to replace current comments
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _refreshComments(commentData) {
    _setCommentContent(commentData);
    _setCurrentComments();
    window.location.hash = &apos;reset&apos;;
    window.location.hash = commentAnchor;
    _toggleNavLinks();
  }
})();

&lt;mt:Ignore&gt;
/***
 * Displays a relative date.
 * &apos;ts&apos; is a Date object, &apos;fds&apos; is a string of the date which
 * will be displayed if the given date is older than 1 week.
 */
&lt;/mt:Ignore&gt;
function mtRelativeDate(ts, fds) {
    var now = new Date();
    var ref = ts;
    var delta = Math.floor((now.getTime() - ref.getTime()) / 1000);

    var str;
    if (delta &lt; 60) {
        str = &apos;直前&apos;;
    } else if (delta &lt;= 86400) {
        // less than 1 day
        var hours = Math.floor(delta / 3600);
        var min = Math.floor((delta % 3600) / 60);
        if (hours == 1)
            str = &apos;1 時間前&apos;;
        else if (hours &gt; 1)
            str = &apos;2 時間前&apos;.replace(/2/, hours);
        else if (min == 1)
            str = &apos;1 分前&apos;;
        else
            str = &apos;2 分前&apos;.replace(/2/, min);
    } else if (delta &lt;= 604800) {
        // less than 1 week
        var days = Math.floor(delta / 86400);
        var hours = Math.floor((delta % 86400) / 3600);
        if (days == 1)
            str = &apos;1 日前&apos;;
        else if (days &gt; 1)
            str = &apos;2 日前&apos;.replace(/2/, days);
        else if (hours == 1)
            str = &apos;1 時間前&apos;;
        else
            str = &apos;2 時間前&apos;.replace(/2/, hours);
    }
    return str ? str : fds;
}

&lt;mt:Ignore&gt;
/***
 * Used to display an edit link for the given entry.
 */
&lt;/mt:Ignore&gt;
function mtEditLink(entry_id, author_id) {
    var u = mtGetUser();
    if (! u) return;
    if (! entry_id) return;
    if (! author_id) return;
    if (u.id != author_id) return;
    var link = &apos;&lt;a href=&quot;&lt;$mt:AdminScript$&gt;?__mode=view&amp;amp;_type=entry&amp;amp;id=&apos; + entry_id + &apos;&quot;&gt;編集&lt;/a&gt;&apos;;
    document.write(link);
}

&lt;mt:Ignore&gt;
/***
 * Called when an input field on the comment form receives focus.
 */
&lt;/mt:Ignore&gt;
function mtCommentFormOnFocus() {
    // if CAPTCHA is enabled, this causes the captcha image to be
    // displayed if it hasn&apos;t been already.
    mtShowCaptcha();
}

&lt;mt:Ignore&gt;
/***
 * Displays a captcha field for anonymous commenters.
 */
&lt;/mt:Ignore&gt;
var mtCaptchaVisible = false;
function mtShowCaptcha() {
    var u = mtGetUser();
    if ( u &amp;&amp; u.is_authenticated ) return;
    if (mtCaptchaVisible) return;
    var div = document.getElementById(&apos;comments-open-captcha&apos;);
    if (div) {
        div.innerHTML = &apos;&lt;$mt:CaptchaFields$&gt;&apos;;
        mtCaptchaVisible = true;
    }
}

&lt;mt:Ignore&gt;
/* user object
    -- saved in user cookie --
    u.name (display name)
    u.url (link to home page)
    u.email (for anonymous only)
    u.userpic (url for commenter/author)
    u.profile (link to profile)
    u.is_trusted (boolean)
    u.is_author (user has posting rights)
    u.is_banned (banned status; neither post/comment perms)
    u.can_post (has permission to post)
    u.can_comment (has permission to comment)

    -- status fields --
    u.is_authenticated (boolean)
    u.is_anonymous (user is anonymous)
*/
&lt;/mt:Ignore&gt;

var is_preview;
var user;
&lt;mt:Ignore&gt;
/***
 * Assigns a user object as the actively logged in user; also saves the
 * user information in a browser cookie.
 */
&lt;/mt:Ignore&gt;
function mtSetUser(u) {
    if (u) {
        // persist this
        user = u;
        mtSaveUser();
        // sync up user greeting
        mtFireEvent(&apos;usersignin&apos;);
    }
}

&lt;mt:Ignore&gt;
/***
 * Simple function that escapes single quote characters for storing
 * in a cookie.
 */
&lt;/mt:Ignore&gt;
function mtEscapeJS(s) {
    s = s.replace(/&apos;/g, &quot;&amp;apos;&quot;);
    return s;
}

&lt;mt:Ignore&gt;
/***
 * Simple function that unescapes single quote characters that were
 * stored in a cookie.
 */
&lt;/mt:Ignore&gt;
function mtUnescapeJS(s) {
    s = s.replace(/&amp;apos;/g, &quot;&apos;&quot;);
    return s;
}

&lt;mt:Ignore&gt;
/***
 * Serializes a user object into a string, suitable for storing as a cookie.
 */
&lt;/mt:Ignore&gt;
function mtBakeUserCookie(u) {
    var str = &quot;&quot;;
    if (u.name) str += &quot;name:&apos;&quot; + mtEscapeJS(u.name) + &quot;&apos;;&quot;;
    if (u.url) str += &quot;url:&apos;&quot; + mtEscapeJS(u.url) + &quot;&apos;;&quot;;
    if (u.email) str += &quot;email:&apos;&quot; + mtEscapeJS(u.email) + &quot;&apos;;&quot;;
    if (u.is_authenticated) str += &quot;is_authenticated:&apos;1&apos;;&quot;;
    if (u.profile) str += &quot;profile:&apos;&quot; + mtEscapeJS(u.profile) + &quot;&apos;;&quot;;
    if (u.userpic) str += &quot;userpic:&apos;&quot; + mtEscapeJS(u.userpic) + &quot;&apos;;&quot;;
    if (u.sid) str += &quot;sid:&apos;&quot; + mtEscapeJS(u.sid) + &quot;&apos;;&quot;;
    str += &quot;is_trusted:&apos;&quot; + (u.is_trusted ? &quot;1&quot; : &quot;0&quot;) + &quot;&apos;;&quot;;
    str += &quot;is_author:&apos;&quot; + (u.is_author ? &quot;1&quot; : &quot;0&quot;) + &quot;&apos;;&quot;;
    str += &quot;is_banned:&apos;&quot; + (u.is_banned ? &quot;1&quot; : &quot;0&quot;) + &quot;&apos;;&quot;;
    str += &quot;can_post:&apos;&quot; + (u.can_post ? &quot;1&quot; : &quot;0&quot;) + &quot;&apos;;&quot;;
    str += &quot;can_comment:&apos;&quot; + (u.can_comment ? &quot;1&quot; : &quot;0&quot;) + &quot;&apos;;&quot;;
    str = str.replace(/;$/, &apos;&apos;);
    return str;
}

&lt;mt:Ignore&gt;
/***
 * Unserializes a user cookie and returns a user object with the restored
 * state.
 */
&lt;/mt:Ignore&gt;
function mtUnbakeUserCookie(s) {
    if (!s) return;

    var u = {};
    var m;
    while (m = s.match(/^((name|url|email|is_authenticated|profile|userpic|sid|is_trusted|is_author|is_banned|can_post|can_comment):&apos;([^&apos;]+?)&apos;;?)/)) {
        s = s.substring(m[1].length);
        if (m[2].match(/^(is|can)_/)) // boolean fields
            u[m[2]] = m[3] == &apos;1&apos; ? true : false;
        else
            u[m[2]] = mtUnescapeJS(m[3]);
    }
    if (u.is_authenticated) {
        u.is_anonymous = false;
    } else {
        u.is_anonymous = true;
        u.can_post = false;
        u.is_author = false;
        u.is_banned = false;
        u.is_trusted = false;
    }
    return u;
}

&lt;mt:Ignore&gt;
/***
 * Retrieves an object of the currently logged in user&apos;s state.
 * If no user is logged in or cookied, this will return null.
 */
&lt;/mt:Ignore&gt;
function mtGetUser() {
    if (!user) {
        var cookie = mtGetCookie(mtCookieName);
        if (!cookie) return;
        user = mtUnbakeUserCookie(cookie);
        if (! user) {
            user = {};
            user.is_anonymous = true;
            user.can_post = false;
            user.is_author = false;
            user.is_banned = false;
            user.is_trusted = false;
        }
    }
    return user;
}

&lt;mt:Ignore&gt;
/***
 * Issues a request to the MT comment script to retrieve the currently
 * logged-in user (if any).
 */
&lt;/mt:Ignore&gt;
var mtFetchedUser = false;
&lt;mt:IfBlog&gt;
function mtFetchUser(cb) {
    if (!cb) cb = &apos;mtSetUser&apos;;
    if ( ( cb == &apos;mtSetUser&apos; ) &amp;&amp; mtGetUser() ) {
        var url = document.URL;
        url = url.replace(/#.+$/, &apos;&apos;);
        url += &apos;#comments-open&apos;;
        location.href = url;
    } else {
        // we aren&apos;t using AJAX for this, since we may have to request
        // from a different domain. JSONP to the rescue.
        mtFetchedUser = true;
        var script = document.createElement(&apos;script&apos;);
        var ts = new Date().getTime();
        script.src = &apos;&lt;$mt:CGIPath$&gt;&lt;$mt:CommentScript$&gt;?__mode=session_js&amp;blog_id=&lt;$mt:BlogID$&gt;&amp;jsonp=&apos; + cb + &apos;&amp;ts=&apos; + ts;
        (document.getElementsByTagName(&apos;head&apos;))[0].appendChild(script);
    }
}
&lt;/mt:IfBlog&gt;

&lt;mt:Ignore&gt;
/***
 * Called when the &apos;Remember me&apos; checkbox is changed. If the checkbox
 * is cleared, the cached user cookie is immediately cleared.
 */
&lt;/mt:Ignore&gt;
function mtRememberMeOnClick(b) {
    if (!b.checked)
        mtClearUser(b.form);
    return true;
}

&lt;mt:Ignore&gt;
/***
 * Called when comment form is sent.
 * Required parameter: Form DOM object of comment form.
 * If form has a &apos;bakecookie&apos; member, it will be used to signal
 * storing the anonymous commenter information to a cookie.
 * If form has a &apos;armor&apos; member, it will be used to store
 * a token that is checked by the comment script.
 */
&lt;/mt:Ignore&gt;
&lt;mt:IfBlog&gt;
var mtRequestSubmitted = false;
function mtCommentOnSubmit(f) {
    if (!mtRequestSubmitted) {
        mtRequestSubmitted = true;

        if (f.armor)
            f.armor.value = &apos;&lt;$mt:BlogSitePath encode_sha1=&quot;1&quot;$&gt;&apos;;
        if (f.bakecookie &amp;&amp; f.bakecookie.checked)
            mtSaveUser(f);

        // disable submit buttons
        if (f.preview_button) f.preview_button.disabled = true;
        if (f.post) f.post.disabled = true;

        var u = mtGetUser();
        if ( !is_preview &amp;&amp; ( u &amp;&amp; u.is_authenticated ) ) {
            // validate session; then submit
            mtFetchedUser = false;
            mtFetchUser(&apos;mtCommentSessionVerify&apos;);
            return false;
        }

        return true;
    }
    return false;
}

function mtCommentSessionVerify(app_user) {
    var u = mtGetUser();
    var f = document[&apos;comments_form&apos;];
    if ( u &amp;&amp; app_user &amp;&amp; app_user.sid &amp;&amp; ( u.sid == app_user.sid ) ) {
        f.submit();
    } else {
        alert(&apos;セッションの有効期限が切れています。再度サインインしてください。&apos;);
        mtClearUser();
        mtFireEvent(&apos;usersignin&apos;);
&lt;mt:IfRegistrationRequired&gt;
        mtShow(&apos;comments-form&apos;);
        mtHide(&apos;comments-open-footer&apos;);
&lt;/mt:IfRegistrationRequired&gt;
    }
}

function mtUserOnLoad() {
    var u = mtGetUser();

    // if the user is authenticated, hide the &apos;anonymous&apos; fields
    // and any captcha input if already shown
    if ( document.getElementById(&apos;comments-form&apos;)) {
        if ( u &amp;&amp; u.is_authenticated ) {
            mtShow(&apos;comments-form&apos;);
            mtHide(&apos;comments-open-data&apos;);
            if (mtCaptchaVisible)
                mtHide(&apos;comments-open-captcha&apos;);
        } else {
&lt;mt:IfRegistrationRequired&gt;
            mtHide(&apos;comments-form&apos;);
&lt;/mt:IfRegistrationRequired&gt;
        }
        if ( u &amp;&amp; u.is_banned )
            mtHide(&apos;comments-form&apos;);

        // if we&apos;re previewing a comment, make sure the captcha
        // field is visible
        if (is_preview)
            mtShowCaptcha();
        else
            mtShowGreeting();

        // populate anonymous comment fields if user is cookied as anonymous
        var cf = document[&apos;comments_form&apos;];
        if (cf) {
            if (u &amp;&amp; u.is_anonymous) {
                if (u.email) cf.email.value = u.email;
                if (u.name) cf.author.value = u.name;
                if (u.url) cf.url.value = u.url;
                if (cf.bakecookie)
                    cf.bakecookie.checked = u.name || u.email;
            } else {
                if (u &amp;&amp; u.sid &amp;&amp; cf.sid)
                    cf.sid.value = u.sid;
            }
            if (cf.post &amp;&amp; cf.post.disabled)
                cf.post.disabled = false;
            if (cf.preview_button &amp;&amp; cf.preview_button.disabled)
                cf.preview_button.disabled = false;
            mtRequestSubmitted = false;
        }
    }
}
&lt;/mt:IfBlog&gt;

&lt;mt:Ignore&gt;
/***
 * Called when an entry archive page is loaded.
 * This routine controls which elements of the comment form are shown
 * or hidden, depending on commenter type and blog configuration.
 */
&lt;/mt:Ignore&gt;
&lt;mt:IfBlog&gt;
function mtEntryOnLoad() {
    var cf = document[&apos;comments_form&apos;];
    if (cf &amp;&amp; cf.preview) cf.preview.value = &apos;&apos;;
    &lt;mt:Unless tag=&quot;IfPingsAccepted&quot;&gt;mtHide(&apos;trackbacks-info&apos;);&lt;/mt:Unless&gt;
    &lt;mt:Unless tag=&quot;IfCommentsAccepted&quot;&gt;mtHide(&apos;comments-open&apos;);&lt;/mt:Unless&gt;
    mtFireEvent(&apos;usersignin&apos;);
}

function mtEntryOnUnload() {
    if (mtRequestSubmitted) {
        var cf = document[&apos;comments_form&apos;];
        if (cf) {
            if (cf.post &amp;&amp; cf.post.disabled)
                cf.post.disabled = false;
            if (cf.preview_button &amp;&amp; cf.preview_button.disabled)
                cf.preview_button.disabled = false;
        }
        mtRequestSubmitted = false;
    }
    return true;
}

mtAttachEvent(&apos;usersignin&apos;, mtUserOnLoad);
&lt;/mt:IfBlog&gt;

&lt;mt:Ignore&gt;
/***
 * Handles the action of the &quot;Sign in&quot; link. First clears any existing
 * user cookie, then directs to the MT comment script to sign the user in.
 */
&lt;/mt:Ignore&gt;
function mtSignIn() {
    var doc_url = document.URL;
    doc_url = doc_url.replace(/#.+/, &apos;&apos;);
    var url = &apos;&lt;$mt:SignInLink$&gt;&apos;;
    if (is_preview) {
        if ( document[&apos;comments_form&apos;] ) {
            var entry_id = document[&apos;comments_form&apos;].entry_id.value;
            url += &apos;&amp;entry_id=&apos; + entry_id;
        } else {
            url += &apos;&amp;return_url=&lt;$mt:BlogURL encode_url=&quot;1&quot;$&gt;&apos;;
        }
    } else {
        url += &apos;&amp;return_url=&apos; + encodeURIComponent(doc_url);
    }
    mtClearUser();
    location.href = url;
}

function mtSignInOnClick(sign_in_element) {
    var el;
    if (sign_in_element) {
        // display throbber
        el = document.getElementById(sign_in_element);
        if (!el)  // legacy MT 4.x element id
            el = document.getElementById(&apos;comment-form-external-auth&apos;);
    }
    if (el)
        el.innerHTML = &apos;サインインします... &lt;span class=&quot;status-indicator&quot;&gt;&amp;nbsp;&lt;/span&gt;&apos;;

    mtClearUser(); // clear any &apos;anonymous&apos; user cookie to allow sign in
    mtFetchUser(&apos;mtSetUserOrLogin&apos;);
    return false;
}

function mtSetUserOrLogin(u) {
    if (u &amp;&amp; u.is_authenticated) {
        mtSetUser(u);
    } else {
        // user really isn&apos;t logged in; so let&apos;s do this!
        mtSignIn();
    }
}

&lt;mt:Ignore&gt;
/***
 * Handles sign out from the web site.
 * First clears any existing user cookie, then direts to the MT comment
 * script to sign the user out.
 */
&lt;/mt:Ignore&gt;
function mtSignOut(entry_id) {
    mtClearUser();
    var doc_url = document.URL;
    doc_url = doc_url.replace(/#.+/, &apos;&apos;);
    var url = &apos;&lt;$mt:SignOutLink$&gt;&apos;;
    if (is_preview) {
        if ( document[&apos;comments_form&apos;] ) {
            var entry_id = document[&apos;comments_form&apos;].entry_id.value;
            url += &apos;&amp;entry_id=&apos; + entry_id;
        } else {
            url += &apos;&amp;return_url=&lt;$mt:BlogURL encode_url=&quot;1&quot;$&gt;&apos;;
        }
    } else {
        url += &apos;&amp;return_url=&apos; + encodeURIComponent(doc_url);
    }
    location.href = url;
}

&lt;mt:Ignore&gt;
/***
 * Handles the action of the &quot;Sign out&quot; link.
 */
&lt;/mt:Ignore&gt;
function mtSignOutOnClick() {
    mtSignOut();
    return false;
}

&lt;mt:Ignore&gt;
/***
 * Handles the display of the greeting message, depending on what kind of
 * user is logged in and blog comment policy.
 */
&lt;/mt:Ignore&gt;
&lt;mt:IfBlog&gt;
function mtShowGreeting() {
&lt;mt:IfRegistrationAllowed&gt;
    var reg_reqd = &lt;mt:IfRegistrationRequired&gt;true&lt;mt:Else&gt;false&lt;/mt:IfRegistrationRequired&gt;;

    var cf = document[&apos;comments_form&apos;];
    if (!cf) return;

    var el = document.getElementById(&apos;comment-greeting&apos;);
    if (!el)  // legacy MT 4.x element id
        el = document.getElementById(&apos;comment-form-external-auth&apos;);
    if (!el) return;

    var eid = cf.entry_id;
    var entry_id;
    if (eid) entry_id = eid.value;

    var phrase;
    var u = mtGetUser();

    if ( u &amp;&amp; u.is_authenticated ) {
        if ( u.is_banned ) {
            phrase = &apos;このブログにコメントする権限を持っていません。(\&lt;a href=\&quot;javas\cript:void(0);\&quot; onclick=\&quot;return mtSignOutOnClick();\&quot;\&gt;サインアウトする\&lt;\/a\&gt;)&apos;;
        } else {
            var user_link;
            if ( u.is_author ) {
                user_link = &apos;&lt;a href=&quot;&lt;$mt:CGIPath$&gt;&lt;$mt:CommentScript$&gt;?__mode=edit_profile&amp;return_url=&apos; + encodeURIComponent( location.href );
                user_link += &apos;&quot;&gt;&apos; + u.name + &apos;&lt;/a&gt;&apos;;
            } else {
                // registered user, but not a user with posting rights
                if (u.url)
                    user_link = &apos;&lt;a href=&quot;&apos; + u.url + &apos;&quot;&gt;&apos; + u.name + &apos;&lt;/a&gt;&apos;;
                else
                    user_link = u.name;
            }
            // TBD: supplement phrase with userpic if one is available.
            phrase = &apos;__NAME__としてサインインしています。(\&lt;a href=\&quot;javas\cript:void(0)\&quot; onclick=\&quot;return mtSignOutOnClick();\&quot;\&gt;サインアウト\&lt;\/a\&gt;)&apos;;
            phrase = phrase.replace(/__NAME__/, user_link);
        }
    } else {
        if (reg_reqd) {
            phrase = &apos;コメントするにはまず\&lt;a href=\&quot;javas\cript:void(0)\&quot; onclick=\&quot;return mtSignInOnClick(\&apos;comment-greeting\&apos;)\&quot;\&gt;サインイン\&lt;\/a\&gt;してください。&apos;;
        } else {
            phrase = &apos;コメントする前に\&lt;a href=\&quot;javas\cript:void(0)\&quot; onclick=\&quot;return mtSignInOnClick(\&apos;comment-greeting\&apos;)\&quot;\&gt;サインイン\&lt;\/a\&gt;することもできます。&apos;;
        }
    }
    el.innerHTML = phrase;
&lt;mt:Else&gt;
    mtShowCaptcha();
&lt;/mt:IfRegistrationAllowed&gt;
}
&lt;/mt:IfBlog&gt;

&lt;mt:Ignore&gt;
/***
 * Handles the action of the &apos;Reply&apos; links.
 */
&lt;/mt:Ignore&gt;
function mtReplyCommentOnClick(parent_id, author) {
    mtShow(&apos;comment-form-reply&apos;);

    var checkbox = document.getElementById(&apos;comment-reply&apos;);
    var label = document.getElementById(&apos;comment-reply-label&apos;);
    var text = document.getElementById(&apos;comment-text&apos;);

    // Populate label with new values
    var reply_text = &apos;\&lt;a href=\&quot;#comment-__PARENT__\&quot; onclick=\&quot;location.href=this.href; return false\&quot;\&gt;__AUTHOR__からのコメント\&lt;\/a\&gt;に返信&apos;;
    reply_text = reply_text.replace(/__PARENT__/, parent_id);
    reply_text = reply_text.replace(/__AUTHOR__/, author);
    label.innerHTML = reply_text;

    checkbox.value = parent_id; 
    checkbox.checked = true;
    try {
        // text field may be hidden
        text.focus();
    } catch(e) {
    }

    mtSetCommentParentID();
}

&lt;mt:Ignore&gt;
/***
 * Sets the parent comment ID when replying to a comment.
 */
&lt;/mt:Ignore&gt;
function mtSetCommentParentID() {
    var checkbox = document.getElementById(&apos;comment-reply&apos;);
    var parent_id_field = document.getElementById(&apos;comment-parent-id&apos;);
    if (!checkbox || !parent_id_field) return;

    var pid = 0;
    if (checkbox.checked == true)
        pid = checkbox.value;
    parent_id_field.value = pid;
}

&lt;mt:Ignore&gt;
/***
 * Persists a copy of the current user cookie into the browser cookie stash.
 */
&lt;/mt:Ignore&gt;
function mtSaveUser(f) {
    // We can&apos;t reliably store the user cookie during a preview.
    if (is_preview) return;

    var u = mtGetUser();

    if (f &amp;&amp; (!u || u.is_anonymous)) {
        if ( !u ) {
            u = {};
            u.is_authenticated = false;
            u.can_comment = true;
            u.is_author = false;
            u.is_banned = false;
            u.is_anonymous = true;
            u.is_trusted = false;
        }
        if (f.author != undefined) u.name = f.author.value;
        if (f.email != undefined) u.email = f.email.value;
        if (f.url != undefined) u.url = f.url.value;
    }

    if (!u) return;

    var cache_period = mtCookieTimeout * 1000;

    // cache anonymous user info for a long period if the
    // user has requested to be remembered
    if (u.is_anonymous &amp;&amp; f &amp;&amp; f.bakecookie &amp;&amp; f.bakecookie.checked)
        cache_period = 365 * 24 * 60 * 60 * 1000;

    var now = new Date();
    mtFixDate(now);
    now.setTime(now.getTime() + cache_period);

    var cmtcookie = mtBakeUserCookie(u);
    mtSetCookie(mtCookieName, cmtcookie, now, mtCookiePath, mtCookieDomain,
        location.protocol == &apos;https:&apos;);
}

&lt;mt:Ignore&gt;
/***
 * Clears the blog-side user cookie.
 */
&lt;/mt:Ignore&gt;
function mtClearUser() {
    user = null;
    mtDeleteCookie(mtCookieName, mtCookiePath, mtCookieDomain,
        location.protocol == &apos;https:&apos;);
}

&lt;mt:Ignore&gt;
/***
 * Sets a browser cookie.
 */
&lt;/mt:Ignore&gt;
function mtSetCookie(name, value, expires, path, domain, secure) {
    if (domain &amp;&amp; domain.match(/^\.?localhost$/))
        domain = null;
    var curCookie = name + &quot;=&quot; + escape(value) +
        (expires ? &quot;; expires=&quot; + expires.toGMTString() : &quot;&quot;) +
        (path ? &quot;; path=&quot; + path : &quot;&quot;) +
        (domain ? &quot;; domain=&quot; + domain : &quot;&quot;) +
        (secure ? &quot;; secure&quot; : &quot;&quot;);
    document.cookie = curCookie;
}

&lt;mt:Ignore&gt;
/***
 * Retrieves a browser cookie.
 */
&lt;/mt:Ignore&gt;
function mtGetCookie(name) {
    var prefix = name + &apos;=&apos;;
    var c = document.cookie;
    var cookieStartIndex = c.indexOf(prefix);
    if (cookieStartIndex == -1)
        return &apos;&apos;;
    var cookieEndIndex = c.indexOf(&quot;;&quot;, cookieStartIndex + prefix.length);
    if (cookieEndIndex == -1)
        cookieEndIndex = c.length;
    return unescape(c.substring(cookieStartIndex + prefix.length, cookieEndIndex));
}

&lt;mt:Ignore&gt;
/***
 * Deletes a browser cookie.
 */
&lt;/mt:Ignore&gt;
function mtDeleteCookie(name, path, domain, secure) {
    if (mtGetCookie(name)) {
        if (domain &amp;&amp; domain.match(/^\.?localhost$/))
            domain = null;
        document.cookie = name + &quot;=&quot; +
            (path ? &quot;; path=&quot; + path : &quot;&quot;) +
            (domain ? &quot;; domain=&quot; + domain : &quot;&quot;) +
            (secure ? &quot;; secure&quot; : &quot;&quot;) +
            &quot;; expires=Thu, 01-Jan-70 00:00:01 GMT&quot;;
    }
}

function mtFixDate(date) {
    var skew = (new Date(0)).getTime();
    if (skew &gt; 0)
        date.setTime(date.getTime() - skew);
}

&lt;mt:Ignore&gt;
/***
 * Returns a XMLHttpRequest object (for Ajax operations).
 */
&lt;/mt:Ignore&gt;
function mtGetXmlHttp() {
    if ( !window.XMLHttpRequest ) {
        window.XMLHttpRequest = function() {
            var types = [
                &quot;Microsoft.XMLHTTP&quot;,
                &quot;MSXML2.XMLHTTP.5.0&quot;,
                &quot;MSXML2.XMLHTTP.4.0&quot;,
                &quot;MSXML2.XMLHTTP.3.0&quot;,
                &quot;MSXML2.XMLHTTP&quot;
            ];

            for ( var i = 0; i &lt; types.length; i++ ) {
                try {
                    return new ActiveXObject( types[ i ] );
                } catch( e ) {}
            }

            return undefined;
        };
    }
    if ( window.XMLHttpRequest )
        return new XMLHttpRequest();
}

// BEGIN: fast browser onload init
// Modifications by David Davis, DWD
// Dean Edwards/Matthias Miller/John Resig
// http://dean.edwards.name/weblog/2006/06/again/?full#comment5338

function mtInit() {
    // quit if this function has already been called
    if (arguments.callee.done) return;

    // flag this function so we don&apos;t do the same thing twice
    arguments.callee.done = true;

    // kill the timer
    // DWD - check against window
    if ( window._timer ) clearInterval(window._timer);

    // DWD - fire the window onload now, and replace it
    if ( window.onload &amp;&amp; ( window.onload !== window.mtInit ) ) {
        window.onload();
        window.onload = function() {};
    }
}

/* for Mozilla/Opera9 */
if (document.addEventListener) {
    document.addEventListener(&quot;DOMContentLoaded&quot;, mtInit, false);
}

/* for Internet Explorer */
/*@cc_on @*/
/*@if (@_win32)
document.write(&quot;&lt;script id=__ie_onload defer src=javascript:void(0)&gt;&lt;\/script&gt;&quot;);
var script = document.getElementById(&quot;__ie_onload&quot;);
script.onreadystatechange = function() {
    if (this.readyState == &quot;complete&quot;) {
        mtInit(); // call the onload handler
    }
};
/*@end @*/

/* for Safari */
if (/WebKit/i.test(navigator.userAgent)) { // sniff
    _timer = setInterval(function() {
        if (/loaded|complete/.test(document.readyState)) {
            mtInit(); // call the onload handler
        }
    }, 10);
}

/* for other browsers */
window.onload = mtInit;

// END: fast browser onload init

&lt;mt:IfBlog&gt;
&lt;mt:IfRegistrationAllowed&gt;
/***
 * If request contains a &apos;#_login&apos; or &apos;#_logout&apos; hash, use this to
 * also delete the blog-side user cookie, since we&apos;re coming back from
 * a login, logout or edit profile operation.
 */
var clearCookie = ( window.location.hash &amp;&amp; window.location.hash.match( /^#_log(in|out)/ ) ) ? true : false;
if (clearCookie) {
    // clear any logged in state
    mtClearUser();
    if (RegExp.$1 == &apos;in&apos;)
        mtFetchUser();
} else {
    &lt;mt:Ignore&gt;
    /***
     * Uncondition this call to fetch the current user state (if available)
     * from MT upon page load if no user cookie is already present.
     * This is okay if you have a private install, such as an Intranet;
     * not recommended for public web sites!
     */
    &lt;/mt:Ignore&gt;
    if ( is_preview &amp;&amp; !user )
        mtFetchUser();
}
&lt;/mt:IfRegistrationAllowed&gt;
&lt;/mt:IfBlog&gt;
</text></template>
<template id='154' blog_id='5' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225428' identifier='calendar' modified_on='20110606225428' name='カレンダー' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Individual&quot;&gt;
&lt;div class=&quot;widget-calendar widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;&lt;$mt:Date format=&quot;%B %Y&quot;$&gt;&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;table summary=&quot;リンク付きのカレンダー&quot;&gt;
            &lt;tr&gt;
                &lt;th abbr=&quot;日曜日&quot;&gt;日&lt;/th&gt;
                &lt;th abbr=&quot;月曜日&quot;&gt;月&lt;/th&gt;
                &lt;th abbr=&quot;火曜日&quot;&gt;火&lt;/th&gt;
                &lt;th abbr=&quot;水曜日&quot;&gt;水&lt;/th&gt;
                &lt;th abbr=&quot;木曜日&quot;&gt;木&lt;/th&gt;
                &lt;th abbr=&quot;金曜日&quot;&gt;金&lt;/th&gt;
                &lt;th abbr=&quot;土曜日&quot;&gt;土&lt;/th&gt;
            &lt;/tr&gt;
    &lt;mt:Calendar&gt;
        &lt;mt:CalendarWeekHeader&gt;
            &lt;tr&gt;
        &lt;/mt:CalendarWeekHeader&gt;
                &lt;td&gt;
        &lt;mt:CalendarIfEntries&gt;
            &lt;mt:Entries lastn=&quot;1&quot;&gt;
                    &lt;a href=&quot;&lt;$mt:EntryPermalink$&gt;&quot;&gt;&lt;$mt:CalendarDay$&gt;&lt;/a&gt;
            &lt;/mt:Entries&gt;
        &lt;/mt:CalendarIfEntries&gt;
        &lt;mt:CalendarIfNoEntries&gt;
                    &lt;$mt:CalendarDay$&gt;
        &lt;/mt:CalendarIfNoEntries&gt;
        &lt;mt:CalendarIfBlank&gt;&amp;nbsp;&lt;/mt:CalendarIfBlank&gt;
                &lt;/td&gt;
        &lt;mt:CalendarWeekFooter&gt;
            &lt;/tr&gt;
        &lt;/mt:CalendarWeekFooter&gt;
    &lt;/mt:Calendar&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
</text></template>
<template id='155' blog_id='5' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225428' identifier='comment_listing' modified_on='20110606225428' name='コメント一覧' rebuild_me='1' type='comment_listing' current_revision='0'><text>{
    &quot;direction&quot;: &quot;&lt;mt:Var name=&quot;commentDirection&quot;&gt;&quot;,
    &quot;comments&quot;: &quot;&lt;mt:Comments sort_order=&quot;$commentDirection&quot;&gt;&lt;$mt:Include module=&quot;コメント詳細&quot; replace=&quot;\&quot;,&quot;\\&quot; replace=&apos;&quot;&apos;,&apos;\&quot;&apos; strip_linefeeds=&quot;1&quot;$&gt;&lt;/mt:Comments&gt;&quot;
}</text></template>
<template id='156' blog_id='5' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225428' identifier='date_based_category_archives' modified_on='20110606225428' name='日付ベースのカテゴリアーカイブ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Category-Yearly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Category-Yearly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-category-yearly widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;年別カテゴリアーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;

&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Category-Monthly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Category-Monthly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-category-monthly widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;月別カテゴリアーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;

&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Category-Weekly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Category-Weekly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-category-weekly widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;週別カテゴリアーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;

&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Category-Daily&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Category-Daily&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-category-daily widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;日別カテゴリアーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;

</text></template>
<template id='157' blog_id='5' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225428' identifier='main_index_widgets_group' modified_on='20110606225428' name='ホームページウィジェットグループ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:Ignore&gt;
    main_indexのテンプレートだけに表示されるように設定されているウィジェットのセットです。詳細: http://www.movabletype.org/documentation/designer/widget-sets.html
&lt;/mt:Ignore&gt;
&lt;mt:If name=&quot;main_index&quot;&gt;
    &lt;$mt:Include widget=&quot;最近のコメント&quot;$&gt;
    &lt;$mt:Include widget=&quot;最近のブログ記事&quot;$&gt;
    &lt;$mt:Include widget=&quot;アイテム&quot;$&gt;
    &lt;$mt:Include widget=&quot;タグクラウド&quot;$&gt;
&lt;/mt:If&gt;
</text></template>
<template id='158' blog_id='5' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225428' identifier='search' modified_on='20110606225428' name='検索' rebuild_me='1' type='widget' current_revision='0'><text>&lt;div class=&quot;widget-search widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;検索&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;form method=&quot;get&quot; action=&quot;&lt;$mt:CGIPath$&gt;&lt;$mt:SearchScript$&gt;&quot;&gt;
            &lt;input type=&quot;text&quot; id=&quot;search&quot; class=&quot;ti&quot; name=&quot;search&quot; value=&quot;&lt;$mt:SearchString$&gt;&quot; /&gt;
&lt;mt:If name=&quot;search_results&quot;&gt;
            &lt;input type=&quot;hidden&quot; name=&quot;IncludeBlogs&quot; value=&quot;&lt;$mt:SearchIncludeBlogs$&gt;&quot; /&gt;
            &lt;mt:Ignore&gt;
            &lt;!-- use these options only with MT::App::Search::Legacy --&gt;
            &lt;ul class=&quot;search-options&quot;&gt;
                &lt;li&gt;&lt;input type=&quot;checkbox&quot; name=&quot;CaseSearch&quot; /&gt; 大文字/小文字を区別する&lt;/li&gt;
                &lt;li&gt;&lt;input type=&quot;checkbox&quot; name=&quot;RegexSearch&quot; /&gt; 正規表現&lt;/li&gt;
            &lt;/ul&gt;
            &lt;/mt:Ignore&gt;
&lt;mt:Else&gt;
            &lt;input type=&quot;hidden&quot; name=&quot;IncludeBlogs&quot; value=&quot;&lt;$mt:BlogID$&gt;&quot; /&gt;
&lt;/mt:If&gt;
            &lt;input type=&quot;hidden&quot; name=&quot;limit&quot; value=&quot;&lt;$mt:SearchMaxResults$&gt;&quot; /&gt;
            &lt;input type=&quot;submit&quot; accesskey=&quot;4&quot; value=&quot;検索&quot; /&gt;
        &lt;/form&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;mt:If name=&quot;search_results&quot;&gt;
    &lt;mt:IfTagSearch&gt;
&lt;div class=&quot;widget-tags widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;タグ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;mt:Tags&gt;
            &lt;li&gt;&lt;a href=&quot;javascript:void(0)&quot; onclick=&quot;location.href=&apos;&lt;$mt:TagSearchLink encode_js=&quot;1&quot;$&gt;&apos;;return false;&quot;&gt;&lt;$mt:TagName$&gt; (&lt;$mt:TagCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;/mt:Tags&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
    &lt;/mt:IfTagSearch&gt;
&lt;/mt:If&gt;
</text></template>
<template id='159' blog_id='5' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225428' identifier='recent_comments' modified_on='20110606225428' name='最近のコメント' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:If tag=&quot;BlogCommentCount&quot;&gt;
    &lt;mt:Comments lastn=&quot;10&quot; sort_order=&quot;descend&quot;&gt;
        &lt;mt:CommentsHeader&gt;
&lt;div class=&quot;widget-recent-comments widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;最近のコメント&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:CommentsHeader&gt;
            &lt;li&gt;&lt;strong&gt;&lt;$mt:CommentAuthor$&gt;:&lt;/strong&gt; &lt;$mt:CommentBody remove_html=&quot;1&quot; words=&quot;10&quot;$&gt; &lt;a href=&quot;&lt;$mt:CommentLink$&gt;&quot; title=&quot;&lt;mt:CommentEntry&gt;&lt;$mt:EntryTitle$&gt;&lt;/mt:CommentEntry&gt;へのコメント&quot;&gt;続きを読む&lt;/a&gt;&lt;/li&gt;
        &lt;mt:CommentsFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:CommentsFooter&gt;
    &lt;/mt:Comments&gt;
&lt;/mt:If&gt;
</text></template>
<template id='160' blog_id='5' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225428' identifier='current_author_monthly_archive_list' modified_on='20110606225428' name='ユーザー月別アーカイブ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Author-Monthly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Author-Monthly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-current-author-monthly widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;&lt;$mt:AuthorDisplayName encode_html=&quot;1&quot;$&gt;: 月別アーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
</text></template>
<template id='161' blog_id='6' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225806' identifier='comment_preview' modified_on='20110606225806' name='コメントプレビュー' rebuild_me='1' type='comment_preview' current_revision='0'><text>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;
    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; id=&quot;sixapart-standard&quot;&gt;
&lt;head&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
    /* &lt;![CDATA[ */
    var user = &lt;$mt:UserSessionState$&gt;;
    var is_preview = true;
    /* ]]&gt; */
    &lt;/script&gt;
    &lt;$mt:Include module=&quot;HTMLヘッダー&quot;$&gt;
    &lt;title&gt;&lt;$mt:BlogName encode_html=&quot;1&quot;$&gt;: コメントのプレビュー&lt;/title&gt;
&lt;/head&gt;
&lt;body id=&quot;&lt;$mt:BlogThemeID$&gt;&quot; class=&quot;mt-comment-preview &lt;$mt:Var name=&quot;page_layout&quot;$&gt;&quot; onload=&quot;mtEntryOnLoad()&quot; onunload=&quot;mtEntryOnUnload()&quot;&gt;
    &lt;div id=&quot;container&quot;&gt;
        &lt;div id=&quot;container-inner&quot;&gt;


            &lt;$mt:Include module=&quot;バナーヘッダー&quot;$&gt;


            &lt;div id=&quot;content&quot;&gt;
                &lt;div id=&quot;content-inner&quot;&gt;


                    &lt;div id=&quot;alpha&quot;&gt;
                        &lt;div id=&quot;alpha-inner&quot;&gt;


                            &lt;h1 id=&quot;page-title&quot;&gt;&lt;$mt:Var name=&quot;page_title&quot;$&gt;&lt;/h1&gt;


&lt;mt:Ignore&gt;&lt;!-- Comment Preview --&gt;&lt;/mt:Ignore&gt;
                            &lt;div class=&quot;comment&quot; id=&quot;comment-&lt;$mt:CommentID$&gt;&quot;&gt;
                                &lt;div class=&quot;inner&quot;&gt;
                                    &lt;div class=&quot;comment-header&quot;&gt;
                                        &lt;div class=&quot;asset-meta&quot;&gt;
                                            &lt;span class=&quot;byline&quot;&gt;
                                                &lt;$mt:CommentAuthorIdentity$&gt;
    &lt;mt:IfCommentParent&gt;
                                                &lt;span class=&quot;vcard author&quot;&gt;&lt;$mt:CommentAuthorLink$&gt;&lt;/span&gt;から&lt;a href=&quot;&lt;mt:CommentParent&gt;&lt;$mt:CommentLink$&gt;&lt;/mt:CommentParent&gt;&quot;&gt;&lt;mt:CommentParent&gt;&lt;$mt:CommentAuthor$&gt;&lt;/mt:CommentParent&gt;&lt;/a&gt;への返信
    &lt;mt:Else&gt;
                                                &lt;span class=&quot;vcard author&quot;&gt;&lt;$mt:CommentAuthorLink$&gt;&lt;/span&gt;
    &lt;/mt:IfCommentParent&gt;
                                                | &lt;a href=&quot;&lt;$mt:CommentLink$&gt;&quot;&gt;&lt;abbr class=&quot;published&quot; title=&quot;&lt;$mt:CommentDate format_name=&quot;iso8601&quot;$&gt;&quot;&gt;&lt;$mt:CommentDate$&gt;&lt;/abbr&gt;&lt;/a&gt;
                                            &lt;/span&gt;
                                        &lt;/div&gt;
                                    &lt;/div&gt;
                                    &lt;div class=&quot;comment-content&quot;&gt;
                                        &lt;$mt:CommentBody$&gt;
                                    &lt;/div&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;


&lt;mt:Ignore&gt;&lt;!-- Comment Form --&gt;&lt;/mt:Ignore&gt;
                            &lt;div class=&quot;comments-open&quot; id=&quot;comments-open&quot;&gt;
                                &lt;h2 class=&quot;comments-open-header&quot;&gt;コメントする&lt;/h2&gt;
                                &lt;div class=&quot;comments-open-content&quot;&gt;
                                    &lt;div id=&quot;comment-greeting&quot;&gt;&lt;/div&gt;
                                    &lt;form method=&quot;post&quot; action=&quot;&lt;$mt:CGIPath$&gt;&lt;$mt:CommentScript$&gt;&quot; name=&quot;comments_form&quot; id=&quot;comments-form&quot; onsubmit=&quot;return mtCommentOnSubmit(this)&quot;&gt;
                                        &lt;input type=&quot;hidden&quot; name=&quot;static&quot; value=&quot;1&quot; /&gt;
                                        &lt;input type=&quot;hidden&quot; name=&quot;armor&quot; value=&quot;1&quot; /&gt;
                                        &lt;input type=&quot;hidden&quot; name=&quot;preview&quot; value=&quot;&quot; /&gt;
                                        &lt;input type=&quot;hidden&quot; name=&quot;entry_id&quot; value=&quot;&lt;$mt:EntryID$&gt;&quot; /&gt;
                                        &lt;input type=&quot;hidden&quot; name=&quot;__lang&quot; value=&quot;&lt;$mt:BlogLanguage$&gt;&quot; /&gt;
&lt;mt:IfCommentParent&gt;
                                            &lt;input type=&quot;hidden&quot; name=&quot;parent_id&quot; value=&quot;&lt;$mt:CommentParentID escape=&quot;html&quot;$&gt;&quot; id=&quot;comment-parent-id&quot;&gt;
&lt;/mt:IfCommentParent&gt;
                                        &lt;div id=&quot;comments-open-data&quot;&gt;
                                            &lt;div id=&quot;comment-form-name&quot;&gt;
                                                &lt;label for=&quot;comment-author&quot;&gt;名前&lt;/label&gt;
                                                &lt;input id=&quot;comment-author&quot; name=&quot;author&quot; size=&quot;30&quot; value=&quot;&lt;$mt:CommentAuthor encode_html=&quot;1&quot;$&gt;&quot; onfocus=&quot;mtShowCaptcha()&quot; /&gt;
                                            &lt;/div&gt;
                                            &lt;div id=&quot;comment-form-email&quot;&gt;
                                                &lt;label for=&quot;comment-email&quot;&gt;電子メール&lt;/label&gt;
                                                &lt;input id=&quot;comment-email&quot; name=&quot;email&quot; size=&quot;30&quot; value=&quot;&lt;$mt:CommentEmail encode_html=&quot;1&quot;$&gt;&quot; onfocus=&quot;mtShowCaptcha()&quot; /&gt;
                                            &lt;/div&gt;
                                            &lt;div id=&quot;comment-form-url&quot;&gt;
                                                &lt;label for=&quot;comment-url&quot;&gt;URL&lt;/label&gt;
                                                &lt;input id=&quot;comment-url&quot; name=&quot;url&quot; size=&quot;30&quot; value=&quot;&lt;$mt:CommentURL encode_html=&quot;1&quot;$&gt;&quot; onfocus=&quot;mtShowCaptcha()&quot; /&gt;
                                            &lt;/div&gt;
                                        &lt;/div&gt;
&lt;mt:IfCommentParent&gt;
                                        &lt;div id=&quot;comment-form-reply&quot;&gt;
                                            &lt;input type=&quot;checkbox&quot; id=&quot;comment-reply&quot; name=&quot;comment_reply&quot; value=&quot;&lt;$mt:CommentParentID escape=&quot;html&quot;$&gt;&quot; checked=&quot;checked&quot; onclick=&quot;mtSetCommentParentID()&quot; /&gt;
                                            &lt;label for=&quot;comment-reply&quot; id=&quot;comment-reply-label&quot;&gt;&lt;mt:CommentParent&gt;&lt;$mt:CommentAuthor$&gt;&lt;/mt:CommentParent&gt;からのコメントに返信&lt;/label&gt;
                                        &lt;/div&gt;
&lt;/mt:IfCommentParent&gt;
                                        &lt;div id=&quot;comments-open-text&quot;&gt;
                                            &lt;label for=&quot;comment-text&quot;&gt;コメント &lt;mt:IfAllowCommentHTML&gt;(スタイル用のHTMLタグを使えます)&lt;/mt:IfAllowCommentHTML&gt;&lt;/label&gt;
                                            &lt;textarea id=&quot;comment-text&quot; name=&quot;text&quot; rows=&quot;15&quot; cols=&quot;50&quot; onfocus=&quot;mtShowCaptcha()&quot;&gt;&lt;$mt:CommentBody autolink=&quot;0&quot; sanitize=&quot;0&quot; convert_breaks=&quot;0&quot; encode_html=&quot;1&quot;$&gt;&lt;/textarea&gt;
                                        &lt;/div&gt;
                                        &lt;div id=&quot;comments-open-captcha&quot;&gt;&lt;/div&gt;
                                        &lt;div id=&quot;comments-open-footer&quot;&gt;
                                            &lt;input type=&quot;submit&quot; accesskey=&quot;v&quot; name=&quot;preview_button&quot; id=&quot;comment-preview&quot; value=&quot;プレビュー&quot; onclick=&quot;this.form.preview.value=&apos;1&apos;;&quot; /&gt;
                                            &lt;input type=&quot;submit&quot; accesskey=&quot;s&quot; name=&quot;post&quot; id=&quot;comment-submit&quot; value=&quot;投稿&quot; /&gt;
                                            &lt;input type=&quot;button&quot; name=&quot;cancel&quot; id=&quot;comment-cancel&quot; value=&quot;キャンセル&quot; onclick=&quot;window.location=&apos;&lt;$mt:EntryPermalink$&gt;&apos;&quot; /&gt;
                                        &lt;/div&gt;
                                    &lt;/form&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;


                    &lt;$mt:Include module=&quot;サイドバー&quot;$&gt;


                &lt;/div&gt;
            &lt;/div&gt;


            &lt;$mt:Include module=&quot;バナーフッター&quot;$&gt;


        &lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</text></template>
<template id='162' blog_id='6' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225806' identifier='search_results' modified_on='20110606225806' name='検索結果' rebuild_me='1' type='search_results' current_revision='0'><text>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;
    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; id=&quot;sixapart-standard&quot;&gt;
&lt;head&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
    /* &lt;![CDATA[ */
    var user = &lt;$mt:UserSessionState$&gt;;
    /* ]]&gt; */
    &lt;/script&gt;
    &lt;$mt:Include module=&quot;HTMLヘッダー&quot;$&gt;
    &lt;title&gt;&lt;$mt:BlogName encode_html=&quot;1&quot;$&gt;: 検索結果&lt;/title&gt;
    &lt;mt:Ignore&gt;Below Javascript adds ajax search capability&lt;/mt:Ignore&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
    /* &lt;![CDATA[ */
    &lt;mt:IfMoreResults&gt;
    function getResults(page) {
        page = parseInt(page);
        if (timer) window.clearTimeout(timer);
        var xh = mtGetXmlHttp();
        if (!xh) return false;
        var res = results[page];
        if (!res) return;
        var url = res[&apos;next_url&apos;];
        if (!url) return;

        xh.open(&apos;GET&apos;, url + &apos;&amp;format=js&apos;, true);
        xh.onreadystatechange = function() {
            if ( xh.readyState == 4 ) {
                if ( xh.status &amp;&amp; ( xh.status != 200 ) ) {
                    // error - ignore
                } else {
                    try {
                        var page_results = eval(&quot;(&quot; + xh.responseText + &quot;)&quot;);
                        if ( page_results[&apos;error&apos;] == null )
                            results[page + 1] = page_results[&apos;result&apos;];
                    } catch (e) {
                    }
                }
            }
        };
        xh.send(null);
    }

    function swapContent(direction) {
        if ( direction == undefined ) direction = 1;
        var page_span = document.getElementById(&apos;current-page&apos;);
        if (!page_span) return true;
        var next_page = direction + parseInt(page_span.innerHTML);
        var res = results[next_page];
        if (!res) return true;
        var content = res[&apos;content&apos;];
        if (!content) return true;
        var div = document.getElementById(&apos;search-results&apos;);
        if (!div) return true;
        div.innerHTML = content;
        timer = window.setTimeout(&quot;getResults(&quot; + next_page + &quot;)&quot;, 1*1000);
        window.scroll(0, 0);
        return false;
    }
    &lt;mt:Else&gt;&lt;mt:IfPreviousResults&gt;
    function swapContent(direction) {
        return true;
    }&lt;/mt:IfPreviousResults&gt;
    &lt;/mt:IfMoreResults&gt;
    /* ]]&gt; */
    &lt;/script&gt;
&lt;/head&gt;
&lt;body id=&quot;&lt;$mt:BlogThemeID$&gt;&quot; class=&quot;mt-search-results &lt;$mt:Var name=&quot;page_layout&quot;$&gt;&quot;&gt;
    &lt;div id=&quot;container&quot;&gt;
        &lt;div id=&quot;container-inner&quot;&gt;


            &lt;$mt:Include module=&quot;バナーヘッダー&quot;$&gt;


            &lt;div id=&quot;content&quot;&gt;
                &lt;div id=&quot;content-inner&quot;&gt;


                    &lt;div id=&quot;alpha&quot;&gt;
                        &lt;div id=&quot;alpha-inner&quot;&gt;

&lt;mt:Ignore&gt;&lt;!--
    Below is the block to show search results.
    This makes an independent block to support
    Ajax-based background retrieval of the next search results.
--&gt;&lt;/mt:Ignore&gt;
&lt;mt:SetVarTemplate id=&quot;search_results&quot; name=&quot;search_results&quot;&gt;  
&lt;mt:SearchResults&gt;
    &lt;mt:SearchResultsHeader&gt;
                            &lt;div id=&quot;search-results&quot;&gt;
                                &lt;span id=&quot;current-page&quot; class=&quot;hidden&quot;&gt;&lt;$mt:CurrentPage$&gt;&lt;/span&gt;
                                &lt;h1 id=&quot;page-title&quot; class=&quot;search-results-header&quot;&gt;
        &lt;mt:IfStraightSearch&gt;
                                    「&lt;$mt:SearchString$&gt;」と一致するもの
        &lt;/mt:IfStraightSearch&gt;
        &lt;mt:IfTagSearch&gt;
                                    タグ「&lt;$mt:SearchString$&gt;」が付けられているもの
        &lt;/mt:IfTagSearch&gt;
                                &lt;/h1&gt;
                                &lt;div class=&quot;search-results-container autopagerize_page_element&quot;&gt;
    &lt;/mt:SearchResultsHeader&gt;
                                    &lt;$mt:Include module=&quot;ブログ記事の概要&quot; hide_counts=&quot;1&quot;$&gt;
    &lt;mt:SearchResultsFooter&gt;
                                &lt;/div&gt;&lt;div class=&quot;autopagerize_insert_before&quot;&gt;&lt;/div&gt;

    &lt;mt:Ignore&gt;&lt;!-- Used with the ajax search capability of the new search class --&gt;&lt;/mt:Ignore&gt;
                                &lt;div class=&quot;content-nav&quot;&gt;
                                    &lt;mt:IfPreviousResults&gt;&lt;a href=&quot;&lt;$mt:PreviousLink$&gt;&quot; rel=&quot;prev&quot; onclick=&quot;return swapContent(-1);&quot;&gt;&amp;lt; 前&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;/mt:IfPreviousResults&gt;&lt;mt:PagerBlock&gt;&lt;mt:IfCurrentPage&gt;&lt;$mt:Var name=&quot;__value__&quot;$&gt;&lt;mt:Else&gt;&lt;a href=&quot;&lt;$mt:PagerLink$&gt;&quot;&gt;&lt;$mt:Var name=&quot;__value__&quot;$&gt;&lt;/a&gt;&lt;/mt:IfCurrentPage&gt;&lt;mt:Unless name=&quot;__last__&quot;&gt;&amp;nbsp;&lt;/mt:Unless&gt;&lt;/mt:PagerBlock&gt;&lt;mt:IfMoreResults&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;&lt;$mt:NextLink$&gt;&quot; rel=&quot;next&quot; onclick=&quot;return swapContent();&quot;&gt;次 &amp;gt;&lt;/a&gt;&lt;/mt:IfMoreResults&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;
    &lt;/mt:SearchResultsFooter&gt;
&lt;/mt:SearchResults&gt;
&lt;/mt:SetVarTemplate&gt;
&lt;mt:Ignore&gt;&lt;!-- Display search results constructed in the block above --&gt;&lt;/mt:Ignore&gt;
&lt;$mt:Var name=&quot;search_results&quot;$&gt;


&lt;mt:Ignore&gt;&lt;!-- Display no results message --&gt;&lt;/mt:Ignore&gt;
&lt;mt:NoSearchResults&gt;
                            &lt;h1 id=&quot;page-title&quot; class=&quot;search-results-header&quot;&gt;
    &lt;mt:IfStraightSearch&gt;
                                「&lt;$mt:SearchString$&gt;」と一致するもの
    &lt;/mt:IfStraightSearch&gt;
    &lt;mt:IfTagSearch&gt;
                                タグ「&lt;$mt:SearchString$&gt;」が付けられているもの
    &lt;/mt:IfTagSearch&gt;
                            &lt;/h1&gt;
                            &lt;p&gt;「&lt;$mt:SearchString$&gt;」と一致する結果は見つかりませんでした。&lt;/p&gt;
&lt;/mt:NoSearchResults&gt;


&lt;mt:Ignore&gt;&lt;!-- Display instructions for searching if search script was accessed without a query --&gt;&lt;/mt:Ignore&gt;
&lt;mt:NoSearch&gt;
                            &lt;h1 id=&quot;page-title&quot; class=&quot;search-results-header&quot;&gt;例&lt;/h1&gt;
                            &lt;p&gt;すべての単語が順序に関係なく検索されます。フレーズで検索したいときは引用符で囲んでください。&lt;/p&gt;
                            &lt;blockquote&gt;
                                &lt;p&gt;&lt;code&gt;&quot;movable type&quot;&lt;/code&gt;&lt;/p&gt;
                            &lt;/blockquote&gt;
                            &lt;p&gt;AND、OR、NOTを入れることで論理検索を行うこともできます。&lt;/p&gt;
                            &lt;blockquote&gt;
                                &lt;p&gt;&lt;code&gt;個人 OR 出版&lt;/code&gt;&lt;/p&gt;
                                &lt;p&gt;&lt;code&gt;個人 NOT 出版&lt;/code&gt;&lt;/p&gt;
                            &lt;/blockquote&gt;
&lt;/mt:NoSearch&gt;

&lt;mt:Ignore&gt;&lt;!-- Used with the ajax search capability of the new search class --&gt;&lt;/mt:Ignore&gt;
&lt;mt:IfMoreResults&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
&lt;!--
var div = document.getElementById(&apos;search-results&apos;);
var results = {
    &apos;&lt;$mt:CurrentPage$&gt;&apos;: {
        &apos;content&apos;: div.innerHTML,
        &apos;next_url&apos;: &apos;&lt;$mt:NextLink$&gt;&apos;
    }
};
var timer = window.setTimeout(&quot;getResults(&quot; + &lt;$mt:CurrentPage$&gt; + &quot;)&quot;, 1*1000);
//--&gt;
&lt;/script&gt;
&lt;/mt:IfMoreResults&gt;


                        &lt;/div&gt;
                    &lt;/div&gt;

                    &lt;$mt:Include module=&quot;サイドバー&quot;$&gt;


                &lt;/div&gt;
            &lt;/div&gt;


            &lt;$mt:Include module=&quot;バナーフッター&quot;$&gt;


        &lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</text></template>
<template id='163' blog_id='6' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225806' identifier='recent_assets' modified_on='20110606225806' name='アイテム' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:If tag=&quot;AssetCount&quot;&gt;
    &lt;mt:Assets type=&quot;image&quot; lastn=&quot;10&quot;&gt;
        &lt;mt:AssetsHeader&gt;
&lt;div class=&quot;widget-recent-assets widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;アイテム&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:AssetsHeader&gt;
        &lt;li class=&quot;item&quot;&gt;&lt;a class=&quot;asset-image&quot; href=&quot;&lt;$mt:AssetURL$&gt;&quot;&gt;&lt;img src=&quot;&lt;$mt:AssetThumbnailURL height=&quot;70&quot;$&gt;&quot; class=&quot;asset-img-thumb&quot; alt=&quot;&lt;$mt:AssetLabel$&gt;&quot; title=&quot;&lt;$mt:AssetLabel$&gt;&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
        &lt;mt:AssetsFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:AssetsFooter&gt;
    &lt;/mt:Assets&gt;
&lt;/mt:If&gt;
</text></template>
<template id='164' blog_id='6' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225806' identifier='monthly_archive_dropdown' modified_on='20110606225806' name='月別アーカイブ(ドロップダウン)' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Monthly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Monthly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-monthly-dropdown widget-archive widget&quot;&gt;
   &lt;h3 class=&quot;widget-header&quot;&gt;&lt;a href=&quot;&lt;$mt:BlogURL$&gt;archives.html&quot;&gt;アーカイブ&lt;/a&gt;&lt;/h3&gt;
   &lt;div class=&quot;widget-content&quot;&gt;
      &lt;select onchange=&quot;nav(this)&quot;&gt;
         &lt;option&gt;月を選択...&lt;/option&gt;
         &lt;/mt:ArchiveListHeader&gt;
         &lt;option value=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt;&lt;/option&gt;
         &lt;mt:ArchiveListFooter&gt;
      &lt;/select&gt;
   &lt;/div&gt;
&lt;/div&gt;
&lt;script type=&quot;text/javascript&quot; charset=&quot;utf-8&quot;&gt;
/* &lt;![CDATA[ */
function nav(sel) {
   if (sel.selectedIndex == -1) return;
   var opt = sel.options[sel.selectedIndex];
   if (opt &amp;&amp; opt.value)
      location.href = opt.value;
}
/* ]]&gt; */
&lt;/script&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
</text></template>
<template id='165' blog_id='6' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225806' identifier='template_461' modified_by='1' modified_on='20130122172533' name='外部ファイル読み込み' rebuild_me='0' type='custom' current_revision='5' cache_expire_type='0' include_with_ssi='0' revision='5'><text>&lt;link rel=&quot;alternate&quot; media=&quot;handheld&quot; type=&quot;text/html&quot; href=&quot;http://nichinare.com/m/&quot; /&gt;
&lt;!-- PC --&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/common/css/import.css&quot; media=&quot;only screen and (min-width: 911px)&quot; /&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/common/css/lightbox.css&quot; media=&quot;only screen and (min-width: 911px)&quot; /&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot;  href=&quot;/application/css/style.css&quot; media=&quot;only screen and (min-width: 911px)&quot; /&gt;

&lt;!-- スマホ --&gt;
&lt;link href=&quot;/common/css/sp_base.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; media=&quot;only screen and (min-width: 0px) and (max-width: 640px)&quot; &gt;
&lt;link href=&quot;/common/css/sp_layout.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; media=&quot;only screen and (min-width: 0px) and (max-width: 640px)&quot; &gt;
&lt;link href=&quot;/application/css/sp_style.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; media=&quot;only screen and (min-width: 0px) and (max-width: 640px)&quot; &gt;

&lt;!--[if IE ]&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/common/css/import.css&quot; media=&quot;all&quot; /&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/common/css/lightbox.css&quot; media=&quot;screen&quot; /&gt;
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot;  href=&quot;/application/css/style.css&quot; media=&quot;all&quot; /&gt;
&lt;![endif]--&gt;

&lt;script src=&quot;/common/js/prototype.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;/common/js/scriptaculous.js?load=effects,builder&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;/common/js/lightbox.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;/common/js/setQueryParamNew.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;/common/js/mjl.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;/common/js/run.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;/common/js/ga.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;/head&gt;</text></template>
<template id='166' blog_id='6' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225806' identifier='category_archive_list' modified_on='20110606225806' name='カテゴリアーカイブ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Category&quot;&gt;
&lt;div class=&quot;widget-archive widget-archive-category widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;カテゴリ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
    &lt;mt:TopLevelCategories&gt;
        &lt;mt:SubCatIsFirst&gt;
        &lt;ul&gt;
        &lt;/mt:SubCatIsFirst&gt;
        &lt;mt:If tag=&quot;CategoryCount&quot;&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:CategoryArchiveLink$&gt;&quot;&lt;mt:If tag=&quot;CategoryDescription&quot;&gt; title=&quot;&lt;$mt:CategoryDescription remove_html=&quot;1&quot; encode_html=&quot;1&quot;$&gt;&quot;&lt;/mt:If&gt;&gt;&lt;$mt:CategoryLabel$&gt; (&lt;$mt:CategoryCount$&gt;)&lt;/a&gt;
        &lt;mt:Else&gt;
            &lt;li&gt;&lt;$mt:CategoryLabel$&gt;
        &lt;/mt:If&gt;
        &lt;$mt:SubCatsRecurse$&gt;
            &lt;/li&gt;
        &lt;mt:SubCatIsLast&gt;
        &lt;/ul&gt;
        &lt;/mt:SubCatIsLast&gt;
    &lt;/mt:TopLevelCategories&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
</text></template>
<template id='167' blog_id='6' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225806' identifier='monthly_archive_list' modified_on='20110606225806' name='月別アーカイブ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Monthly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Monthly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-monthly widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;&lt;$mt:ArchiveTypeLabel$&gt; &lt;a href=&quot;&lt;$mt:Link template=&quot;archive_index&quot;$&gt;&quot;&gt;アーカイブ&lt;/a&gt;&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
</text></template>
<template id='168' blog_id='6' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225806' identifier='popup_image' modified_on='20110606225806' name='ポップアップ画像' rebuild_me='1' type='popup_image' current_revision='0'><text>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; id=&quot;sixapart-standard&quot;&gt;
&lt;head&gt;&lt;title&gt;&lt;$mt:ImageURL$&gt;&lt;/title&gt;&lt;/head&gt;
&lt;body id=&quot;uploaded-image-popup&quot; class=&quot;popup&quot; style=&quot;margin: 0;padding: 0;&quot;&gt;
    &lt;img src=&quot;&lt;$mt:ImageURL$&gt;&quot; width=&quot;&lt;$mt:ImageWidth$&gt;&quot; height=&quot;&lt;$mt:ImageHeight$&gt;&quot; alt=&quot;&lt;$mt:ImageURL$&gt;&quot; style=&quot;margin: 0;padding: 0;border: 0;&quot; /&gt;
&lt;/body&gt;
&lt;/html&gt;
</text></template>
<template id='169' blog_id='6' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225806' identifier='tag_cloud' modified_on='20110606225806' name='タグクラウド' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:Tags top=&quot;20&quot;&gt;
&lt;mt:If name=&quot;__first__&quot;&gt;
&lt;div class=&quot;widget-tag-cloud widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;タグクラウド&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
&lt;/mt:If&gt;
            &lt;li class=&quot;rank-&lt;$mt:TagRank max=&quot;10&quot;$&gt;&quot;&gt;&lt;a href=&quot;javascript:void(0)&quot; onclick=&quot;location.href=&apos;&lt;$mt:TagSearchLink encode_js=&quot;1&quot;$&gt;&apos;;return false;&quot; rel=&quot;tag&quot;&gt;&lt;$mt:TagName$&gt;&lt;/a&gt;&lt;/li&gt;
&lt;mt:If name=&quot;__last__&quot;&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/mt:If&gt;
&lt;/mt:Tags&gt;
</text></template>
<template id='170' blog_id='6' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225806' identifier='technorati_search' modified_on='20110606225806' name='Technorati Search' rebuild_me='1' type='widget' current_revision='0'><text>&lt;div class=&quot;widget-technorati widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;Techonrati&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;div id=&quot;technorati&quot;&gt;
            &lt;form id=&quot;ts_s&quot; method=&quot;post&quot; action=&quot;http://technorati.com/search.php&quot;&gt;
                &lt;fieldset&gt;
                    &lt;legend&gt;&lt;a href=&apos;http://www.technorati.com/&apos;&gt;Technorati&lt;/a&gt; search&lt;/legend&gt;
                    &lt;input type=&quot;hidden&quot; name=&quot;sub&quot; value=&quot;searchlet&quot; /&gt;
                    &lt;input type=&quot;text&quot; id=&quot;ts_search&quot; name=&quot;s&quot; size=&quot;12&quot; maxlength=&quot;255&quot; value=&quot;&quot; /&gt;&lt;br /&gt;
                    &lt;input type=&quot;radio&quot; checked=&quot;checked&quot; name=&quot;from&quot; id=&quot;ts_yb&quot; value=&quot;&lt;$mt:BlogURL$&gt;&quot; /&gt;
                    &lt;label for=&quot;ts_yb&quot; title=&quot;&lt;$mt:BlogName$&gt;&quot;&gt;このブログ&lt;/label&gt;
                    &lt;input type=&quot;radio&quot; name=&quot;from&quot; id=&quot;ts_www&quot; value=&quot;&quot; /&gt; &lt;label for=&quot;ts_www&quot;&gt;すべてのブログ&lt;/label&gt;
                    &lt;input type=&quot;submit&quot; class=&quot;btn&quot; value=&quot;検索&quot; /&gt;
                &lt;/fieldset&gt;
            &lt;/form&gt;
            &lt;p id=&quot;ts_l&quot; class=&quot;ts_l&quot;&gt;&lt;a href=&quot;http://technorati.com/search/&lt;$mt:BlogURL$&gt;&quot; id=&quot;ts_lh&quot;&gt;&#187; リンクしているブログ&lt;/a&gt;&lt;/p&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
</text></template>
<template id='171' blog_id='6' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225806' identifier='recent_entries' modified_on='20110606225806' name='最近のブログ記事' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:If tag=&quot;BlogEntryCount&quot;&gt;
    &lt;mt:Entries lastn=&quot;10&quot;&gt;
        &lt;mt:EntriesHeader&gt;
&lt;div class=&quot;widget-recent-entries widget-archives widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;最近のブログ記事&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:EntriesHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:EntryPermalink$&gt;&quot;&gt;&lt;$mt:EntryTitle$&gt;&lt;/a&gt;&lt;/li&gt;
        &lt;mt:EntriesFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:EntriesFooter&gt;
    &lt;/mt:Entries&gt;
&lt;/mt:If&gt;
</text></template>
<template id='172' blog_id='6' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225806' identifier='author_archive_list' modified_on='20110606225806' name='ユーザーアーカイブ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Author&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Author&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive widget-archive-author widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;ユーザー&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
</text></template>
<template id='173' blog_id='6' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225806' identifier='powered_by' modified_on='20110606225806' name='Powered By' rebuild_me='1' type='widget' current_revision='0'><text>&lt;div class=&quot;widget-powered widget&quot;&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;a href=&quot;http://www.sixapart.jp/movabletype/&quot;&gt;&lt;img src=&quot;&lt;$mt:StaticWebPath$&gt;images/bug-pbmt-white.png&quot; alt=&quot;Powered by Movable Type &lt;$mt:Version$&gt;&quot; width=&quot;120&quot; height=&quot;75&quot; /&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;
</text></template>
<template id='174' blog_id='6' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225806' identifier='date_based_author_archives' modified_on='20110606225806' name='日付ベースのユーザーアーカイブ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Author-Yearly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Author-Yearly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-author-yearly widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;年別ユーザーアーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;

&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Author-Monthly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Author-Monthly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-author-monthly widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;月別ユーザーアーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;

&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Author-Weekly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Author-Weekly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-author-weekly widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;週別ユーザーアーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;

&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Author-Daily&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Author-Daily&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-author-daily widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;日別ユーザーアーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;

</text></template>
<template id='175' blog_id='6' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225807' identifier='pages_list' modified_on='20110606225807' name='ページ一覧' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Page&quot;&gt;
&lt;div class=&quot;widget-pages widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;ウェブページ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
    &lt;mt:Pages no_folder=&quot;1&quot; sort_by=&quot;title&quot; sort_order=&quot;ascend&quot;&gt;
            &lt;li class=&quot;page page-&lt;$mt:PageID$&gt;&quot;&gt;&lt;a href=&quot;&lt;$mt:PagePermalink$&gt;&quot;&gt;&lt;$mt:PageTitle$&gt;&lt;/a&gt;&lt;/li&gt;
    &lt;/mt:Pages&gt;
    &lt;mt:TopLevelFolders&gt;
            &lt;li class=&quot;folder folder-&lt;$mt:FolderID$&gt;&quot;&gt;&lt;strong&gt;&lt;$mt:FolderLabel$&gt;&lt;/strong&gt;
        &lt;mt:Pages sort_by=&quot;title&quot; sort_order=&quot;ascend&quot;&gt;
            &lt;mt:PagesHeader&gt;
                &lt;ul&gt;
            &lt;/mt:PagesHeader&gt;
                    &lt;li class=&quot;page page-&lt;$mt:PageID$&gt;&quot;&gt;&lt;a href=&quot;&lt;$mt:PagePermalink$&gt;&quot;&gt;&lt;$mt:PageTitle$&gt;&lt;/a&gt;&lt;/li&gt;
            &lt;mt:PagesFooter&gt;
                &lt;/ul&gt;
            &lt;/mt:PagesFooter&gt;
        &lt;/mt:Pages&gt;
            &lt;/li&gt;
        &lt;$mt:SubFolderRecurse$&gt;
    &lt;/mt:TopLevelFolders&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
</text></template>
<template id='176' blog_id='6' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225807' identifier='page' modified_by='1' modified_on='20130423185643' name='ウェブページ' rebuild_me='0' type='page' current_revision='9' cache_expire_type='0' include_with_ssi='0' revision='9'><text>&lt;$mt:Include module=&quot;DOCTYPE&quot;$&gt;
&lt;title&gt;&lt;$MTEntryTitle$&gt;｜入所方法／面接日程｜声優・ナレーターなら　日本ナレーション演技研究所&lt;/title&gt;
&lt;link rel=&quot;canonical&quot; href=&quot;http://nichinare.com/&quot; /&gt;
&lt;$mt:Include module=&quot;外部ファイル読み込み&quot;$&gt;

&lt;body id=&quot;application&quot; onload=&quot;addLinkURL(&apos;code&apos;);return false;&quot;&gt;
&lt;a name=&quot;pagetop&quot; id=&quot;pagetop&quot;&gt;&lt;/a&gt;
&lt;div id=&quot;wrapper&quot;&gt;
&lt;$mt:Include module=&quot;ヘッダー&quot;$&gt;
&lt;p class=&quot;pankuzu normal&quot;&gt;&lt;a href=&quot;../index.html&quot;&gt;日ナレトップ&lt;/a&gt;  ＞  &lt;a href=&quot;index.html&quot;&gt;入所方法／面接日程&lt;/a&gt;  ＞  &lt;$MTEntryTitle$&gt;&lt;/p&gt;
&lt;!-- Container --&gt;
&lt;div id=&quot;container&quot;&gt;
&lt;div id=&quot;contents&quot;&gt;
&lt;div class=&quot;right_contents&quot;&gt;
&lt;h2 class=&quot;&lt;$mt:ArchiveFile extension=&apos;0&apos;$&gt;_ttl&quot;&gt;&lt;MTTitleImgAsset&gt;&lt;img src=&quot;&lt;$MTAssetURL$&gt;&quot; alt=&quot;&lt;$MTEntryTitle$&gt;&quot; /&gt;&lt;/MTTitleImgAsset&gt;&lt;/h2&gt;
&lt;!-- Sec Contents --&gt;
&lt;div class=&quot;sec_main&quot;&gt;
&lt;$MTEntryBody$&gt;
&lt;p class=&quot;sp_btback&quot;&gt;&lt;a href=&quot;javascript:history.back()&quot;&gt;戻る&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;!-- Sec Contents End --&gt;
&lt;/div&gt;
&lt;div class=&quot;left_contents&quot; id=&quot;&lt;$mt:ArchiveFile extension=&quot;0&quot;$&gt;&quot;&gt;
&lt;h4&gt;入所方法／面接日程&lt;/h4&gt;
&lt;ul class=&quot;local_menu&quot;&gt;
&lt;li class=&quot;menu01&quot;&gt;&lt;a href=&quot;index.html&quot;&gt;週1回クラス&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;menu02&quot;&gt;&lt;a href=&quot;index.html&quot;&gt;週3回クラス&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;menu03&quot;&gt;&lt;a href=&quot;index.html&quot;&gt;ナレーターセミナー&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;menu05&quot;&gt;&lt;a href=&quot;jr.html&quot;&gt;ジュニア声優クラス&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;menu04&quot;&gt;&lt;a href=&quot;starting.html&quot;&gt;声優スターティングセミナー&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;menu06&quot;&gt;&lt;a href=&quot;tuition.html&quot;&gt;入所金・受講料等一覧&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;$mt:Include module=&quot;下層左パーツ&quot;$&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;ul class=&quot;sub_nav&quot;&gt;
&lt;li class=&quot;hd_menu01&quot;&gt;&lt;a href=&quot;/faq/index.html&quot;&gt;よくあるご質問&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;hd_menu02&quot;&gt;&lt;a href=&quot;/contact/index.html&quot;&gt;お問い合わせ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;!-- Container End --&gt;
&lt;$mt:Include module=&quot;フッター&quot;$&gt;
&lt;/div&gt;

&lt;$mt:Include module=&quot;測定タグ&quot;$&gt;
&lt;/body&gt;
&lt;/html&gt;</text></template>
<template id='177' blog_id='6' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225807' identifier='current_category_monthly_archive_list' modified_on='20110606225807' name='カテゴリ月別アーカイブ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Category-Monthly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Category-Monthly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-current-category-monthly widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;&lt;$mt:CategoryLabel$&gt;: 月別アーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt;&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
</text></template>
<template id='178' blog_id='6' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225807' identifier='about_this_page' modified_on='20110606225807' name='About' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:unless name=&quot;main_index&quot;&gt;
&lt;div class=&quot;widget-about-this-page widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;
&lt;mt:If name=&quot;entry_template&quot;&gt;
        このブログ記事について
&lt;mt:Else&gt;
    &lt;mt:If name=&quot;archive_template&quot;&gt;
        このアーカイブについて
    &lt;/mt:If&gt;
&lt;/mt:If&gt;
&lt;mt:If name=&quot;archive_index&quot;&gt;
        このページについて
&lt;/mt:If&gt;
    &lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
&lt;mt:If name=&quot;archive_index&quot;&gt;
        &lt;p&gt;このページには過去に書かれたすべてのコンテンツが含まれています。&lt;/p&gt;
&lt;/mt:If&gt;
&lt;mt:If name=&quot;entry_template&quot;&gt;
        &lt;p class=&quot;first&quot;&gt;このページは、&lt;$mt:EntryAuthorLink$&gt;が&lt;$mt:EntryDate format=&quot;%x %X&quot;$&gt;に書いたブログ記事です。&lt;/p&gt;
    &lt;mt:EntryPrevious&gt;
        &lt;p&gt;ひとつ前のブログ記事は「&lt;a href=&quot;&lt;$mt:EntryPermalink$&gt;&quot;&gt;&lt;$mt:EntryTitle remove_html=&quot;1&quot;$&gt;&lt;/a&gt;」です。&lt;/p&gt;
    &lt;/mt:EntryPrevious&gt;
    &lt;mt:EntryNext&gt;
        &lt;p&gt;次のブログ記事は「&lt;a href=&quot;&lt;$mt:EntryPermalink$&gt;&quot;&gt;&lt;$mt:EntryTitle remove_html=&quot;1&quot;$&gt;&lt;/a&gt;」です。&lt;/p&gt;
    &lt;/mt:EntryNext&gt;
&lt;/mt:If&gt;
&lt;mt:If name=&quot;category_archive&quot;&gt;
    &lt;mt:If name=&quot;datebased_archive&quot;&gt;
        &lt;p class=&quot;first&quot;&gt;このページには、&lt;strong&gt;&lt;$mt:ArchiveDate format=&quot;%B %Y&quot;$&gt;&lt;/strong&gt;以降に書かれたブログ記事のうち&lt;strong&gt;&lt;$mt:CategoryLabel$&gt;&lt;/strong&gt;カテゴリに属しているものが含まれています。&lt;/p&gt;
        &lt;mt:ArchivePrevious&gt;
        &lt;p&gt;前のアーカイブは&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt;&lt;/a&gt;です。&lt;/p&gt;
        &lt;/mt:ArchivePrevious&gt;
        &lt;mt:ArchiveNext&gt;
        &lt;p&gt;次のアーカイブは&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt;&lt;/a&gt;です。&lt;/p&gt;
        &lt;/mt:ArchiveNext&gt;
    &lt;mt:Else&gt;
        &lt;p class=&quot;first&quot;&gt;このページには、過去に書かれたブログ記事のうち&lt;strong&gt;&lt;$mt:CategoryLabel$&gt;&lt;/strong&gt;カテゴリに属しているものが含まれています。&lt;/p&gt;
        &lt;mt:CategoryPrevious&gt;
        &lt;p&gt;前のカテゴリは&lt;a href=&quot;&lt;$mt:CategoryArchiveLink$&gt;&quot;&gt;&lt;$mt:CategoryLabel$&gt;&lt;/a&gt;です。&lt;/p&gt;
        &lt;/mt:CategoryPrevious&gt;
        &lt;mt:CategoryNext&gt;
        &lt;p&gt;次のカテゴリは&lt;a href=&quot;&lt;$mt:CategoryArchiveLink$&gt;&quot;&gt;&lt;$mt:CategoryLabel$&gt;&lt;/a&gt;です。&lt;/p&gt;
        &lt;/mt:CategoryNext&gt;
    &lt;/mt:If&gt;
&lt;/mt:If&gt;
&lt;mt:If name=&quot;author_archive&quot;&gt;
    &lt;mt:If name=&quot;datebased_archive&quot;&gt;
        &lt;p class=&quot;first&quot;&gt;このページには、&lt;strong&gt;&lt;$mt:AuthorDisplayName encode_html=&quot;1&quot;$&gt;&lt;/strong&gt;が&lt;strong&gt;&lt;$mt:ArchiveDate format=&quot;%B %Y&quot;$&gt;&lt;/strong&gt;に書いたブログ記事が含まれています。&lt;/p&gt;
        &lt;mt:ArchivePrevious&gt;
        &lt;p&gt;前のアーカイブは&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt;&lt;/a&gt;です。&lt;/p&gt;
        &lt;/mt:ArchivePrevious&gt;
        &lt;mt:ArchiveNext&gt;
        &lt;p&gt;次のアーカイブは&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt;&lt;/a&gt;です。&lt;/p&gt;
        &lt;/mt:ArchiveNext&gt;
    &lt;mt:Else&gt;
        &lt;p class=&quot;first&quot;&gt;このページには、&lt;strong&gt;&lt;$mt:AuthorDisplayName encode_html=&quot;1&quot;$&gt;&lt;/strong&gt;が最近書いたブログ記事が含まれています。&lt;/p&gt;
    &lt;/mt:If&gt;
&lt;/mt:If&gt;
&lt;mt:If name=&quot;datebased_only_archive&quot;&gt;
        &lt;p class=&quot;first&quot;&gt;このページには、&lt;strong&gt;&lt;$mt:ArchiveDate format=&quot;%B %Y&quot;$&gt;&lt;/strong&gt;に書かれたブログ記事が新しい順に公開されています。&lt;/p&gt;
    &lt;mt:ArchivePrevious&gt;
        &lt;p&gt;前のアーカイブは&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt;&lt;/a&gt;です。&lt;/p&gt;
    &lt;/mt:ArchivePrevious&gt;
    &lt;mt:ArchiveNext&gt;
        &lt;p&gt;次のアーカイブは&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt;&lt;/a&gt;です。&lt;/p&gt;
    &lt;/mt:ArchiveNext&gt;
&lt;/mt:If&gt;
&lt;mt:If name=&quot;archive_index&quot;&gt;
        &lt;p&gt;最近のコンテンツは&lt;a href=&quot;&lt;$mt:BlogURL$&gt;&quot;&gt;インデックスページ&lt;/a&gt;で見られます。&lt;/p&gt;
&lt;mt:Else&gt;
        &lt;p&gt;最近のコンテンツは&lt;a href=&quot;&lt;$mt:BlogURL$&gt;&quot;&gt;インデックスページ&lt;/a&gt;で見られます。過去に書かれたものは&lt;a href=&quot;&lt;$mt:Link template=&quot;archive_index&quot;$&gt;&quot;&gt;アーカイブのページ&lt;/a&gt;で見られます。&lt;/p&gt;
&lt;/mt:If&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/mt:unless&gt;
</text></template>
<template id='179' blog_id='6' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225807' identifier='signin' modified_on='20110606225807' name='サインイン' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfRegistrationAllowed&gt;
&lt;div class=&quot;widget-sign-in widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;サインイン&lt;/h3&gt;
    &lt;div id=&quot;signin-widget-content&quot; class=&quot;widget-content&quot;&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
/* &lt;![CDATA[ */
function mtUpdateSignInWidget(u) {
    var el = document.getElementById(&apos;signin-widget-content&apos;);
    var content = &apos;&apos;;
    if (!el) return;
    if (u) {
        if (u &amp;&amp; u.is_authenticated) {
            user = u;
            mtSaveUser();
        } else {
            // user really isn&apos;t logged in; so let&apos;s do this!
            return mtSignIn();
        }
    } else {
        u = mtGetUser();
    }
    if (u &amp;&amp; u.name) {
        var url;
        if (u.is_authenticated) {
            if (u.is_author) {
                url = &apos;&lt;$mt:CGIPath$&gt;&lt;$mt:CommentScript$&gt;?__mode=edit_profile&apos;;
                url += &apos;&amp;return_url=&apos; + encodeURIComponent( location.href );
            } else {
                url = u.url;
            }
        } else if (u.url) {
            url = u.url;
        } else {
            url = null;
        }
        var content = &apos;ユーザー名:&apos;;
        if (url)
            content += &apos;&lt;a href=&quot;&apos; + url + &apos;&quot;&gt;&apos; + u.name + &apos;&lt;/a&gt;&apos;;
        else
            content += u.name;
        content += &apos;.  (&lt;a href=&quot;javascript:void(0)&quot; onclick=&quot;return mtSignOutOnClick()&quot;&gt;サインアウト&lt;/a&gt;)&apos;;
    } else if (u &amp;&amp; u.is_banned) {
        content = &apos;このブログにサインインする権限がありません。&apos;;
    } else {
        content = &apos;&lt;a href=&quot;javascript:void(0)&quot; onclick=&quot;return mtSignInOnClick(\&apos;signin-widget-content\&apos;)&quot;&gt;サインイン&lt;/a&gt;&apos;;
    }
    el.innerHTML = content;
}
mtAttachEvent(&apos;usersignin&apos;, mtUpdateSignInWidget);
mtUpdateSignInWidget();
/* ]]&gt; */
&lt;/script&gt;
&lt;/mt:IfRegistrationAllowed&gt;
</text></template>
<template id='180' blog_id='6' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225807' identifier='openid' modified_on='20110606225807' name='OpenID対応' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfRegistrationAllowed type=&quot;OpenID&quot;&gt;
&lt;div class=&quot;widget-openid widget&quot;&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;em&gt;&lt;strong&gt;OpenID&lt;/strong&gt;対応しています&lt;/em&gt;
        &lt;a href=&quot;http://www.movabletype.jp/openid/&quot;&gt;OpenIDについて&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/mt:IfRegistrationAllowed&gt;
</text></template>
<template id='181' blog_id='6' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225807' identifier='creative_commons' modified_on='20110606225807' name='クリエイティブ・コモンズ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:BlogIfCCLicense&gt;
&lt;div class=&quot;widget-creative-commons widget&quot;&gt;
   &lt;div class=&quot;widget-content&quot;&gt;
      &lt;a href=&quot;&lt;$mt:BlogCCLicenseURL$&gt;&quot;&gt;&lt;img alt=&quot;Creative Commons License&quot; src=&quot;&lt;$mt:BlogCCLicenseImage$&gt;&quot; /&gt;&lt;/a&gt;&lt;br /&gt;
      このブログは&lt;a href=&quot;&lt;$mt:BlogCCLicenseURL$&gt;&quot;&gt;クリエイティブ・コモンズ&lt;/a&gt;でライセンスされています。
   &lt;/div&gt;
&lt;/div&gt;
&lt;/mt:BlogIfCCLicense&gt;
</text></template>
<template id='182' blog_id='6' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225807' identifier='comment_response' modified_on='20110606225807' name='コメント完了' rebuild_me='1' type='comment_response' current_revision='0'><text>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;
    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; id=&quot;sixapart-standard&quot;&gt;
&lt;head&gt;


&lt;mt:If name=&quot;comment_confirmation&quot;&gt;
    &lt;mt:Ignore&gt;&lt;!-- Success message when comment has been submitted --&gt;&lt;/mt:Ignore&gt;
    &lt;$mt:Var name=&quot;page_title&quot; value=&quot;確認&quot;$&gt;
    &lt;$mt:Var name=&quot;message&quot; value=&quot;&lt;p&gt;コメントを投稿しました。&lt;/p&gt;&quot;$&gt;
&lt;mt:Else name=&quot;comment_pending&quot;&gt;
    &lt;mt:Ignore&gt;&lt;!-- Pending message when comment is being held for review --&gt;&lt;/mt:Ignore&gt;
    &lt;$mt:Var name=&quot;page_title&quot; value=&quot;コメントありがとうございます。&quot;$&gt;
    &lt;$mt:Var name=&quot;message&quot; value=&quot;&lt;p&gt;コメントは現在承認されるまで公開を保留されています。&lt;/p&gt;&quot;$&gt;
&lt;mt:Else name=&quot;comment_error&quot;&gt;
    &lt;mt:Ignore&gt;&lt;!-- Error message when comment submission fails --&gt;&lt;/mt:Ignore&gt;
    &lt;$mt:Var name=&quot;page_title&quot; value=&quot;コメント投稿エラー&quot;$&gt;
    &lt;mt:SetVarBlock name=&quot;message&quot;&gt;&lt;p&gt;コメントを投稿できませんでした。エラー: &lt;$mt:ErrorMessage$&gt;&lt;/p&gt;&lt;/mt:SetVarBlock&gt;
&lt;/mt:If&gt;


    &lt;$mt:Include module=&quot;HTMLヘッダー&quot;$&gt;
    &lt;title&gt;&lt;$mt:BlogName encode_html=&quot;1&quot;$&gt;: &lt;$mt:Var name=&quot;page_title&quot;$&gt;&lt;/title&gt;
&lt;/head&gt;
&lt;body id=&quot;&lt;$mt:BlogThemeID$&gt;&quot; class=&quot;&lt;$mt:Var name=&quot;body_class&quot;$&gt; &lt;$mt:Var name=&quot;page_layout&quot;$&gt;&quot;&gt;
    &lt;div id=&quot;container&quot;&gt;
        &lt;div id=&quot;container-inner&quot;&gt;


            &lt;$mt:Include module=&quot;バナーヘッダー&quot;$&gt;


            &lt;div id=&quot;content&quot;&gt;
                &lt;div id=&quot;content-inner&quot;&gt;


                    &lt;div id=&quot;alpha&quot;&gt;
                        &lt;div id=&quot;alpha-inner&quot;&gt;
                            &lt;h1 id=&quot;page-title&quot;&gt;&lt;$mt:Var name=&quot;page_title&quot;$&gt;&lt;/h1&gt;
                            &lt;$mt:Var name=&quot;message&quot;$&gt;
                            &lt;p&gt;&lt;a href=&quot;&lt;mt:If name=&quot;comment_error&quot;&gt;javascript:history.back()&lt;mt:Else&gt;&lt;$mt:EntryLink$&gt;&lt;/mt:If&gt;&quot;&gt;元の記事&lt;/a&gt;に戻る&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;


                    &lt;$mt:Include module=&quot;サイドバー&quot;$&gt;


                &lt;/div&gt;
            &lt;/div&gt;


            &lt;$mt:Include module=&quot;バナーフッター&quot;$&gt;


        &lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</text></template>
<template id='183' blog_id='6' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225807' identifier='archive_widgets_group' modified_on='20110606225807' name='アーカイブウィジェットグループ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:Ignore&gt;
    アーカイブの種類に応じて異なる内容を表示するように設定されたウィジェットです。詳細: http://www.movabletype.org/documentation/designer/widget-sets.html
&lt;/mt:Ignore&gt;
&lt;mt:If name=&quot;category_archive&quot;&gt;
    &lt;mt:IfArchiveTypeEnabled archive_type=&quot;Category-Monthly&quot;&gt;
        &lt;$mt:Include widget=&quot;カテゴリ月別アーカイブ&quot;$&gt;
    &lt;/mt:IfArchiveTypeEnabled&gt;
&lt;/mt:If&gt;
&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Category&quot;&gt;
    &lt;$mt:Include widget=&quot;カテゴリアーカイブ&quot;$&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Monthly&quot;&gt;
    &lt;$mt:Include widget=&quot;月別アーカイブ&quot;$&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
</text></template>
<template id='184' blog_id='6' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225807' identifier='syndication' modified_on='20110606225807' name='購読' rebuild_me='1' type='widget' current_revision='0'><text>&lt;div class=&quot;widget-syndication widget&quot;&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
            &lt;li&gt;&lt;img src=&quot;&lt;$mt:StaticWebPath$&gt;images/status_icons/feed.gif&quot; alt=&quot;購読する&quot; width=&quot;9&quot; height=&quot;9&quot; /&gt; &lt;a href=&quot;&lt;$mt:Link template=&quot;feed_recent&quot;$&gt;&quot;&gt;このブログを購読&lt;/a&gt;&lt;/li&gt;
&lt;mt:If name=&quot;search_results&quot;&gt;
    &lt;mt:If tag=&quot;SearchString&quot;&gt;
            &lt;li class=&quot;search-results-feed&quot;&gt;&lt;img src=&quot;&lt;$mt:StaticWebPath$&gt;images/status_icons/feed.gif&quot; alt=&quot;購読する&quot; width=&quot;9&quot; height=&quot;9&quot; /&gt; &lt;a href=&quot;&lt;$mt:CGIPath$&gt;&lt;$mt:SearchScript$&gt;?&lt;mt:IfTagSearch&gt;tag&lt;mt:else&gt;search&lt;/mt:IfTagSearch&gt;=&lt;$mt:SearchString encode_url=&quot;1&quot;$&gt;&amp;amp;Template=feed&amp;amp;IncludeBlogs=&lt;$mt:SearchIncludeBlogs$&gt;&amp;amp;limit=&lt;$mt:SearchMaxResults$&gt;&quot; title=&quot;&lt;mt:IfTagSearch&gt;「&lt;$mt:SearchString$&gt;」の検索結果を購読&lt;mt:Else&gt;タグ「&lt;$mt:SearchString$&gt;」を購読&lt;/mt:IfTagSearch&gt;&quot;&gt;&lt;mt:IfTagSearch&gt;タグ「&lt;$mt:SearchString$&gt;」のフィード&lt;mt:Else&gt;「&lt;$mt:SearchString$&gt;」を検索した結果のフィード&lt;/mt:IfTagSearch&gt;&lt;/a&gt;&lt;/li&gt;
    &lt;/mt:If&gt;
&lt;/mt:If&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
</text></template>
<template id='185' blog_id='6' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225807' identifier='dynamic_error' modified_on='20110606225807' name='ダイナミックパブリッシングエラー' rebuild_me='1' type='dynamic_error' current_revision='0'><text>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;
    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; id=&quot;sixapart-standard&quot;&gt;
&lt;head&gt;
    &lt;$mt:Include module=&quot;HTMLヘッダー&quot;$&gt;
    &lt;title&gt;&lt;$mt:BlogName encode_html=&quot;1&quot;$&gt;: ページが見つかりません。&lt;/title&gt;
&lt;/head&gt;
&lt;body id=&quot;&lt;$mt:BlogThemeID$&gt;&quot; class=&quot;mt-dynamic-error &lt;$mt:Var name=&quot;page_layout&quot;$&gt;&quot;&gt;
    &lt;div id=&quot;container&quot;&gt;
        &lt;div id=&quot;container-inner&quot;&gt;


            &lt;$mt:Include module=&quot;バナーヘッダー&quot;$&gt;


            &lt;div id=&quot;content&quot;&gt;
                &lt;div id=&quot;content-inner&quot;&gt;


                    &lt;div id=&quot;alpha&quot;&gt;
                        &lt;div id=&quot;alpha-inner&quot;&gt;
                            &lt;h1 id=&quot;page-title&quot;&gt;ページが見つかりません。&lt;/h1&gt;
                            &lt;blockquote&gt;
                                &lt;strong&gt;&lt;$mt:ErrorMessage$&gt;&lt;/strong&gt;
                            &lt;/blockquote&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;


                    &lt;$mt:Include module=&quot;サイドバー&quot;$&gt;


                &lt;/div&gt;
            &lt;/div&gt;


            &lt;$mt:Include module=&quot;バナーフッター&quot;$&gt;


        &lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</text></template>
<template id='186' blog_id='6' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225807' identifier='javascript' modified_on='20110606225807' name='JavaScript' outfile='mt.js' rebuild_me='1' type='index' current_revision='0'><text>&lt;mt:Ignore&gt;
/*  The following functions and variables are here to support legacy MT templates.
    If you have refreshed your JavaScript template but still use older MT comment
    templates, you may need to uncomment this block in order for those templates 
    to work properly. To use, simply remove the &apos;mt:Ignore&apos; tags wrapping this
    block of code.
*/
    function hideDocumentElement(id) { return mtHide(id) }
    function showDocumentElement(id) { return mtShow(id) }
    function individualArchivesOnLoad() { return mtEntryOnLoad() }
    function writeCommenterGreeting() { return mtShowGreeting() }
    function rememberMe(f) { return mtRememberMe(f) }
    function forgetMe(f) { return mtForgetMe(f) }
    var commenter_name;
    var commenter_id;
    var commenter_url;
    var commenter_blog_ids;
    var mtcmtmail;
    var mtcmtauth;
    var mtcmthome;
    var captcha_timer;
&lt;/mt:Ignore&gt;

// The cookie name to use for storing the blog-side comment session cookie.
var mtCookieName = &quot;&lt;$mt:UserSessionCookieName$&gt;&quot;;
var mtCookieDomain = &quot;&lt;$mt:UserSessionCookieDomain$&gt;&quot;;
var mtCookiePath = &quot;&lt;$mt:UserSessionCookiePath$&gt;&quot;;
var mtCookieTimeout = &lt;$mt:UserSessionCookieTimeout$&gt;;

&lt;mt:Ignore&gt;
/***
 * Simple routine for showing a DOM element (applying a CSS display
 * attribute of &apos;none&apos;).
 */
&lt;/mt:Ignore&gt;
function mtHide(id) {
    var el = (typeof id == &quot;string&quot;) ? document.getElementById(id) : id;
    if (el) el.style.display = &apos;none&apos;;
}

&lt;mt:Ignore&gt;
/***
 * Simple routine for showing a DOM element (applying a CSS display
 * attribute of &apos;block&apos;).
 */
&lt;/mt:Ignore&gt;
function mtShow(id) {
    var el = (typeof id == &quot;string&quot;) ? document.getElementById(id) : id;
    if (el) el.style.display = &apos;block&apos;;
}

&lt;mt:Ignore&gt;
/***
 * A utility function for assigning/adding handlers to window events.
 */
&lt;/mt:Ignore&gt;
function mtAttachEvent(eventName,func) {
    var onEventName = &apos;on&apos; + eventName;
    var old = window[onEventName];
    if( typeof old != &apos;function&apos; )
        window[onEventName] = func;
    else {
        window[onEventName] = function( evt ) {
            old( evt );
            return func( evt );
        };
    }
}

&lt;mt:Ignore&gt;
/***
 * Calls the event named, if there are handlers for it.
 */
&lt;/mt:Ignore&gt;
function mtFireEvent(eventName,param) {
    var fn = window[&apos;on&apos; + eventName];
    if (typeof fn == &apos;function&apos;) return fn(param);
    return;
}

if(!this.JSON){JSON={};}(function(){function f(n){return n&lt;10?&apos;0&apos;+n:n;}if(typeof Date.prototype.toJSON!==&apos;function&apos;){Date.prototype.toJSON=function(key){return this.getUTCFullYear()+&apos;-&apos;+f(this.getUTCMonth()+1)+&apos;-&apos;+f(this.getUTCDate())+&apos;T&apos;+f(this.getUTCHours())+&apos;:&apos;+f(this.getUTCMinutes())+&apos;:&apos;+f(this.getUTCSeconds())+&apos;Z&apos;;};String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(key){return this.valueOf();};}var cx=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,escapable=/[\\\&quot;\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta={&apos;\b&apos;:&apos;\\b&apos;,&apos;\t&apos;:&apos;\\t&apos;,&apos;\n&apos;:&apos;\\n&apos;,&apos;\f&apos;:&apos;\\f&apos;,&apos;\r&apos;:&apos;\\r&apos;,&apos;&quot;&apos;:&apos;\\&quot;&apos;,&apos;\\&apos;:&apos;\\\\&apos;},rep;function quote(string){escapable.lastIndex=0;return escapable.test(string)?&apos;&quot;&apos;+string.replace(escapable,function(a){var c=meta[a];return typeof c===&apos;string&apos;?c:&apos;\\u&apos;+(&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);})+&apos;&quot;&apos;:&apos;&quot;&apos;+string+&apos;&quot;&apos;;}function str(key,holder){var i,k,v,length,mind=gap,partial,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;&amp;&amp;typeof value.toJSON===&apos;function&apos;){value=value.toJSON(key);}if(typeof rep===&apos;function&apos;){value=rep.call(holder,key,value);}switch(typeof value){case&apos;string&apos;:return quote(value);case&apos;number&apos;:return isFinite(value)?String(value):&apos;null&apos;;case&apos;boolean&apos;:case&apos;null&apos;:return String(value);case&apos;object&apos;:if(!value){return&apos;null&apos;;}gap+=indent;partial=[];if(Object.prototype.toString.apply(value)===&apos;[object Array]&apos;){length=value.length;for(i=0;i&lt;length;i+=1){partial[i]=str(i,value)||&apos;null&apos;;}v=partial.length===0?&apos;[]&apos;:gap?&apos;[\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+mind+&apos;]&apos;:&apos;[&apos;+partial.join(&apos;,&apos;)+&apos;]&apos;;gap=mind;return v;}if(rep&amp;&amp;typeof rep===&apos;object&apos;){length=rep.length;for(i=0;i&lt;length;i+=1){k=rep[i];if(typeof k===&apos;string&apos;){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}}else{for(k in value){if(Object.hasOwnProperty.call(value,k)){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}}v=partial.length===0?&apos;{}&apos;:gap?&apos;{\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+mind+&apos;}&apos;:&apos;{&apos;+partial.join(&apos;,&apos;)+&apos;}&apos;;gap=mind;return v;}}if(typeof JSON.stringify!==&apos;function&apos;){JSON.stringify=function(value,replacer,space){var i;gap=&apos;&apos;;indent=&apos;&apos;;if(typeof space===&apos;number&apos;){for(i=0;i&lt;space;i+=1){indent+=&apos; &apos;;}}else if(typeof space===&apos;string&apos;){indent=space;}rep=replacer;if(replacer&amp;&amp;typeof replacer!==&apos;function&apos;&amp;&amp;(typeof replacer!==&apos;object&apos;||typeof replacer.length!==&apos;number&apos;)){throw new Error(&apos;JSON.stringify&apos;);}return str(&apos;&apos;,{&apos;&apos;:value});};}if(typeof JSON.parse!==&apos;function&apos;){JSON.parse=function(text,reviver){var j;function walk(holder,key){var k,v,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;){for(k in value){if(Object.hasOwnProperty.call(value,k)){v=walk(value,k);if(v!==undefined){value[k]=v;}else{delete value[k];}}}}return reviver.call(holder,key,value);}cx.lastIndex=0;if(cx.test(text)){text=text.replace(cx,function(a){return&apos;\\u&apos;+(&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);});}if(/^[\],:{}\s]*$/.test(text.replace(/\\(?:[&quot;\\\/bfnrt]|u[0-9a-fA-F]{4})/g,&apos;@&apos;).replace(/&quot;[^&quot;\\\n\r]*&quot;|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,&apos;]&apos;).replace(/(?:^|:|,)(?:\s*\[)+/g,&apos;&apos;))){j=eval(&apos;(&apos;+text+&apos;)&apos;);return typeof reviver===&apos;function&apos;?walk({&apos;&apos;:j},&apos;&apos;):j;}throw new SyntaxError(&apos;JSON.parse&apos;);};}}());

var MT = window.MT || {};

MT.cons = function () {
  return {
    LOG : &apos;log&apos;,
    WARN : &apos;warn&apos;,
    DEBUG : &apos;debug&apos;,
    INFO : &apos;info&apos;,
    ERR : &apos;error&apos;,
    JSON : &apos;json&apos;
  };
}();

&lt;mt:Ignore&gt;
/**
 * Used for base functionality related to MT
 * 
 * @package MT
 * @class core
 * @global
 * @param {Object} o optional configuration object
 * Options:
 */
&lt;/mt:Ignore&gt;
MT.core = function (o) {
  var _debug = false;
  
  return {
    &lt;mt:Ignore&gt;
    /**
     * Makes remote call and handles response
     * 
     * @param {String} url The URL endpoint
     * @param {String} respType The type of response expected
     * @param {Function} respHandler The function to handle the response
     * @return void
     */
    &lt;/mt:Ignore&gt;
    connect : function (url,respType,respHandler) {
      var xh = mtGetXmlHttp();
      if (!xh) return false;
      
      xh.onreadystatechange = function() {
        if ( xh.readyState == 4 ) {
          if ( xh.status &amp;&amp; ( xh.status != 200 ) ) {
            // error - ignore
          } else {
            switch (respType) {
              case &apos;json&apos;:
                respHandler(JSON.parse(xh.responseText));
                break;
                
              case &apos;xml&apos;:
                break;
                
              case &apos;text&apos;:
                break;
            }
          }
        }
      };
      
      xh.open(&apos;GET&apos;,url);
      xh.send(null);
    },
    
    getEl : function (el) {
      return MT.util.checkNodeType(el)===&apos;element&apos; ? id : (document.getElementById(el) || false);
    },
    
    addEvent : function (el,type,func,obj) {
      if(!obj &amp;&amp; document.addEventListener) {
        el.addEventListener(type,func,false);
      } else if(obj &amp;&amp; document.addEventListener) {
        el.addEventListener(type,function () {
          func.call(obj,event);
        },false);
      } else {
        if(obj) {
          el.attachEvent(&apos;on&apos; + type,function () {
            func.call(obj,event);
          });
        } else {
          el.attachEvent(&apos;on&apos; + type,function () {          
            func.call(el,event);
          });
        }
      }
    },
    
    &lt;mt:Ignore&gt;
    /**
     * Basic logging function
     * 
     * @param {String} level The log level (WARN|DEBUG|INFO|ERROR|LOG)
     * Specified by one of the MT constants
     * @param {String} msg The log message
     * @return void
     */
    &lt;/mt:Ignore&gt;
    log : function (level,msg) {
      if(_debug &amp;&amp; window.console) {
        switch(level) {
          case &apos;warn&apos;:
          case &apos;debug&apos;:
          case &apos;info&apos;:
          case &apos;error&apos;:
          case &apos;log&apos;:
            console[level](msg);
            break;
            
          default:
            return false; 
        }
      } else {
        return false;
      }
    }
  }
}();

&lt;mt:Ignore&gt;
/**
 * Utilities class
 * 
 * @package MT
 * @class util
 * @global
 * Options:
 */
&lt;/mt:Ignore&gt;
MT.util = function () {
  return {
    toggleVisibility : {
      show : function () {
        var i = arguments.length;
        
        while(i--) {
          if(MT.util.checkNodeType(arguments[i])===&apos;element&apos;) {
            arguments[i].style.visibility = &apos;visible&apos;;
          } else {
            MT.core.getEl(arguments[i]).style.visibility = &apos;visible&apos;;
          }
        }
      },
      
      hide : function () {
        var i = arguments.length;
        while(i--) {
          if(MT.util.checkNodeType(arguments[i])===&apos;element&apos;) {
            arguments[i].style.visibility = &apos;hidden&apos;;
          } else {
            MT.core.getEl(arguments[i]).style.visibility = &apos;hidden&apos;;
          }
        }
      }
    },
    
    toggleDisplay : {
      show : function () {
        var i = arguments.length;
        while(i--) {
          if(MT.util.checkNodeType(arguments[i])===&apos;element&apos;) {
            arguments[i].style.display = &apos;&apos;;
          } else {
            MT.core.getEl(arguments[i]).style.display = &apos;&apos;;
          }
        }
      },
      
      hide : function () {
        var i = arguments.length;
        while(i--) {
          if(MT.util.checkNodeType(arguments[i])===&apos;element&apos;) {
            arguments[i].style.display = &apos;none&apos;;
          } else {
            MT.core.getEl(arguments[i]).style.display = &apos;none&apos;;
          }
        }
      }
    },
    
    &lt;mt:Ignore&gt;
    /**
     * Finds the nearest defining (i.e. with an id) parent to the given element
     * 
     * @param {HTMLElement} origin the node from which to start the search
     * @return {HTMLElement|Boolean} The parent node with an id attribute or false
     */
    &lt;/mt:Ignore&gt;
    findDefiningParent : function (origin) {
      if(MT.util.checkNodeType(origin)===&apos;element&apos;) {
        for(var node=origin.parentNode;node.parentNode;node=node.parentNode) {
          if((node.hasAttribute &amp;&amp; node.hasAttribute(&apos;id&apos;)) || node.getAttribute(&apos;id&apos;)) {
            return node;
          }
        }
      }
      return false;
    },
    
    &lt;mt:Ignore&gt;
    /**
     * Tests objects to verify if they are DOM nodes
     * 
     * @param {Object} obj The object to be tested
     * @return {String} the values &apos;element&apos;|&apos;textnode&apos;|&apos;whitespace&apos;
     */
    &lt;/mt:Ignore&gt;
    checkNodeType : function (obj) {
      if (obj &amp;&amp; obj.nodeName){
        switch (obj.nodeType) {
          case 1: return &apos;element&apos;;
          case 3: return (/\S/).test(obj.nodeValue) ? &apos;textnode&apos; : &apos;whitespace&apos;;
        }
      }
    }
  }
}();

&lt;mt:Ignore&gt;
/**
 * mtPaginateComments takes the currently generated static page and either:
 *  - Attempts to find an individual comment link in the query string
 *  - If no link is found, the static page loads
 * In either case, the pagination event is set
 */
&lt;/mt:Ignore&gt;
(function () {
  var M = MT.core,
      c = MT.cons,
      u = MT.util,
      cache,
      isLoading,
      direction,
      currentComments,
      commentAnchor,
      commentArrId,
      commentsPerPage,
      commentsTotalPages,
      loadingIcon,
      pageNum,
      commentsOffset,
      totalComments,
      entryID,
      commentContentDiv,
      topNav,
      nav,
      currentCommentsSpan,
      topCurrentCommentsSpan;
            
  M.addEvent(window,&apos;load&apos;,_init);
  
  /**
   * Initializes the class
   * 
   * @return void
   */
  function _init () {
    if(!MT.entryCommentCount) {
      return;
    }
    
    _initializeVariables();
    _setCommentOffset(false);
    _checkForAnchor();
		_setCurrentComments();
    _toggleNavLinks();
    _initializeEvents();
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Initializes variables to their initial values
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _initializeVariables() {
    cache = {};
    isLoading = false;
    commentAnchor = &apos;&apos;;
    commentArrId = &apos;&apos;;
    commentsPerPage = MT.commentsPerPage || 50;
    currentComments = &apos;&apos;;
    direction = &apos;ascend&apos;;
    entryID = MT.entryID;
    totalComments = MT.entryCommentCount;
    commentsTotalPages = Math.ceil(totalComments / commentsPerPage);
    pageNum = 1;
    
    loadingIcon = &quot;&lt;img title=&apos;Loading...&apos; src=&apos;&lt;$MTStaticWebPath$&gt;images/indicator.white.gif&apos; alt=&apos;Loading&apos; /&gt;&quot;;
    
    commentContentDiv = M.getEl(&quot;comments-content&quot;);
    topNav = M.getEl(&quot;top-comment-nav&quot;);
    nav = M.getEl(&quot;comment-nav&quot;);
    
    currentCommentsSpan = M.getEl(&quot;current-comments&quot;);
    topCurrentCommentsSpan = M.getEl(&quot;top-current-comments&quot;);
  }
  
  function _initializeEvents() {
    if (commentsPerPage &lt; totalComments) {
      M.addEvent(nav,&apos;click&apos;,_handleEvents);
      M.addEvent(topNav,&apos;click&apos;,_handleEvents);
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Checks for an existing anchor tag in the query string
   * If found, it looks for it on the current page
   * If that fails, it tries to find it in comment list and loads
   * the desired page
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _checkForAnchor() {
    var found = String(window.location.hash).match( /comment-(\d{1,6})/ );
		
		if (found) {
		  M.log(c.DEBUG,found);
			if (!Object.prototype.hasOwnProperty.call(M.getEl(found[0]), &apos;className&apos;)) {
				if (_findIdMatch(found[1])) {
    			pageNum = Math.floor(commentArrId / commentsPerPage) + 1;
    			M.log(c.DEBUG,&apos;Comment Array Id: &apos; + commentArrId);
    			M.log(c.DEBUG,&apos;Comments Per Page: &apos; + commentsPerPage);
    			M.log(c.DEBUG,&apos;Page Number: &apos; + pageNum);
    			M.log(c.DEBUG,&apos;Comment Offset: &apos; + _getCommentOffset());
    			_updateComments();
    		}
			}
		}
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Sets commentsOffset (i.e. the offset number to the remote list)
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _setCommentOffset() {
    commentsOffset = commentsPerPage * (pageNum-1);
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Gets the commentsOffset (i.e. the offset number to the remote list)
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _getCommentOffset() {
    return commentsOffset;
  }
  
  &lt;mt:Ignore&gt;
  /**
   * General event handler
   * 
   * @param {Event} e The event object
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _handleEvents (e) {
    var origin = e.target || e.srcElement,
        parentId;
        
    // stupid IE
    origin = origin.id &amp;&amp; M.getEl(origin.id) || false;

    if(origin) {
      parentId = u.checkNodeType(origin.parentNode)===&apos;element&apos; &amp;&amp; origin.parentNode.getAttribute(&apos;id&apos;) &amp;&amp; origin.parentNode.id;
    } else {
      return false;
    }
    
    switch(origin.nodeName) {
      case &apos;A&apos;:
        switch (parentId) {
          case &apos;prev-comments&apos;:
          case &apos;top-prev-comments&apos;:
            if(e.preventDefault) {
              e.preventDefault();
            } else {
              e.returnValue =	false;
            }
            if(!isLoading) {
              _previousPage();
            }
            break;
          case &apos;next-comments&apos;:
          case &apos;top-next-comments&apos;:
            if(e.preventDefault) {
              e.preventDefault();
            } else {
              e.returnValue =	false;
            }
            if(!isLoading) {
              _nextPage();
            }
            break;
        }
        break;
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Toggles the visibility of the navigation links
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _toggleNavLinks () {
    M.log(c.DEBUG,M.getEl(&apos;top-prev-comments&apos;));
    if(pageNum &lt;= commentsTotalPages &amp;&amp; pageNum !== 1) {
      u.toggleVisibility.show(&apos;prev-comments&apos;);
      u.toggleVisibility.show(&apos;top-prev-comments&apos;);
    }
    
    if(pageNum &gt;= 1 &amp;&amp; pageNum !== commentsTotalPages) {
      u.toggleVisibility.show(&apos;next-comments&apos;);
      u.toggleVisibility.show(&apos;top-next-comments&apos;);
    }
    
    if(pageNum===1 || nav.style.visibility===&apos;hidden&apos;) {
      u.toggleVisibility.hide(&apos;prev-comments&apos;);
      u.toggleVisibility.hide(&apos;top-prev-comments&apos;);
    }
    
    if(pageNum===commentsTotalPages || nav.style.visibility===&apos;hidden&apos;) {
      u.toggleVisibility.hide(&apos;next-comments&apos;);
      u.toggleVisibility.hide(&apos;top-next-comments&apos;);
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Determines appropriate action based on the id of the parent
   * clicked link. Decrements pageNum based on id.
   * 
   * @param {String} id the id of the parent of the clicked link
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _nextPage () {
    if(pageNum &lt; commentsTotalPages) {
      pageNum++;
      _updateComments();
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Determines appropriate action based on the id of the parent
   * clicked link. Increments/decrements pageNum based on id.
   * 
   * @param {String} id the id of the parent of the clicked link
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _previousPage() {
    if(pageNum &gt; 1) {
      pageNum--;
      _updateComments();
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Searches for a particular comment in the list of ids
   * 
   * @param {String} id The id for which to search
   * @return {Boolean} true, if found, false otherwise
   */
  &lt;/mt:Ignore&gt;
  function _findIdMatch (id) {
    var len = MT.commentIds.length;
    
  	while (len--) {
  		if (MT.commentIds[len] == id) {
  			commentAnchor = &quot;comment-&quot; + id;
  			commentArrId = len;
  			return true;
  		}
  	}
  	
  	return false;
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Sets the current comment counts on the page
   *
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _setCurrentComments() {
    var commentsOnPage = pageNum != commentsTotalPages ? commentsOffset + commentsPerPage : totalComments;
    
    _setCurrentCommentsContent([commentsOffset+1,&quot; - &quot;,commentsOnPage].join(&apos;&apos;));
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Sets the &quot;current-comments&quot; element with the HTML value
   * 
   * @param {String|Element} currentCommentsHTML The content to be set
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _setCurrentCommentsContent(currentCommentsHTML) {
    currentCommentsSpan.innerHTML = currentCommentsHTML;
    topCurrentCommentsSpan.innerHTML = currentCommentsHTML;
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Sets the content of the comment list
   * 
   * @param {String|Element} commentHTML The content to be set 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _setCommentContent(commentHTML) {
    commentContentDiv.innerHTML = commentHTML;
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Builds the appropriate URL to make a remote call to get the
   * next set of comments
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _updateComments() {
    var comments, jsonUrl;
    isLoading = true;
    _setCurrentCommentsContent(loadingIcon);
    _setCommentOffset();
    
    jsonUrl = [
        &quot;&lt;$mt:CGIPath$&gt;&lt;$mt:CommentScript$&gt;?__mode=comment_listing&amp;direction=&quot;,
        direction,
        &quot;&amp;entry_id=&quot;,
        entryID,
        &quot;&amp;limit=&quot;,
        commentsPerPage,
        &quot;&amp;offset=&quot;,
        _getCommentOffset()
      ].join(&apos;&apos;);
  	
  	if (!commentAnchor) {
      commentAnchor = &quot;comments-content&quot;;
    }
    
    if(cache.hasOwnProperty(jsonUrl)) {
      _refreshComments(cache[jsonUrl]);
      isLoading = false;
    } else {
      M.connect(jsonUrl,c.JSON,function (json) {
        cache[jsonUrl] = json.comments;
    	  _refreshComments(json.comments);
    	  isLoading = false;
      });
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Refreshes the comment data with the current
   * 
   * @param {String} commentData The data used to replace current comments
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _refreshComments(commentData) {
    _setCommentContent(commentData);
    _setCurrentComments();
    window.location.hash = &apos;reset&apos;;
    window.location.hash = commentAnchor;
    _toggleNavLinks();
  }
})();

&lt;mt:Ignore&gt;
/***
 * Displays a relative date.
 * &apos;ts&apos; is a Date object, &apos;fds&apos; is a string of the date which
 * will be displayed if the given date is older than 1 week.
 */
&lt;/mt:Ignore&gt;
function mtRelativeDate(ts, fds) {
    var now = new Date();
    var ref = ts;
    var delta = Math.floor((now.getTime() - ref.getTime()) / 1000);

    var str;
    if (delta &lt; 60) {
        str = &apos;直前&apos;;
    } else if (delta &lt;= 86400) {
        // less than 1 day
        var hours = Math.floor(delta / 3600);
        var min = Math.floor((delta % 3600) / 60);
        if (hours == 1)
            str = &apos;1 時間前&apos;;
        else if (hours &gt; 1)
            str = &apos;2 時間前&apos;.replace(/2/, hours);
        else if (min == 1)
            str = &apos;1 分前&apos;;
        else
            str = &apos;2 分前&apos;.replace(/2/, min);
    } else if (delta &lt;= 604800) {
        // less than 1 week
        var days = Math.floor(delta / 86400);
        var hours = Math.floor((delta % 86400) / 3600);
        if (days == 1)
            str = &apos;1 日前&apos;;
        else if (days &gt; 1)
            str = &apos;2 日前&apos;.replace(/2/, days);
        else if (hours == 1)
            str = &apos;1 時間前&apos;;
        else
            str = &apos;2 時間前&apos;.replace(/2/, hours);
    }
    return str ? str : fds;
}

&lt;mt:Ignore&gt;
/***
 * Used to display an edit link for the given entry.
 */
&lt;/mt:Ignore&gt;
function mtEditLink(entry_id, author_id) {
    var u = mtGetUser();
    if (! u) return;
    if (! entry_id) return;
    if (! author_id) return;
    if (u.id != author_id) return;
    var link = &apos;&lt;a href=&quot;&lt;$mt:AdminScript$&gt;?__mode=view&amp;amp;_type=entry&amp;amp;id=&apos; + entry_id + &apos;&quot;&gt;編集&lt;/a&gt;&apos;;
    document.write(link);
}

&lt;mt:Ignore&gt;
/***
 * Called when an input field on the comment form receives focus.
 */
&lt;/mt:Ignore&gt;
function mtCommentFormOnFocus() {
    // if CAPTCHA is enabled, this causes the captcha image to be
    // displayed if it hasn&apos;t been already.
    mtShowCaptcha();
}

&lt;mt:Ignore&gt;
/***
 * Displays a captcha field for anonymous commenters.
 */
&lt;/mt:Ignore&gt;
var mtCaptchaVisible = false;
function mtShowCaptcha() {
    var u = mtGetUser();
    if ( u &amp;&amp; u.is_authenticated ) return;
    if (mtCaptchaVisible) return;
    var div = document.getElementById(&apos;comments-open-captcha&apos;);
    if (div) {
        div.innerHTML = &apos;&lt;$mt:CaptchaFields$&gt;&apos;;
        mtCaptchaVisible = true;
    }
}

&lt;mt:Ignore&gt;
/* user object
    -- saved in user cookie --
    u.name (display name)
    u.url (link to home page)
    u.email (for anonymous only)
    u.userpic (url for commenter/author)
    u.profile (link to profile)
    u.is_trusted (boolean)
    u.is_author (user has posting rights)
    u.is_banned (banned status; neither post/comment perms)
    u.can_post (has permission to post)
    u.can_comment (has permission to comment)

    -- status fields --
    u.is_authenticated (boolean)
    u.is_anonymous (user is anonymous)
*/
&lt;/mt:Ignore&gt;

var is_preview;
var user;
&lt;mt:Ignore&gt;
/***
 * Assigns a user object as the actively logged in user; also saves the
 * user information in a browser cookie.
 */
&lt;/mt:Ignore&gt;
function mtSetUser(u) {
    if (u) {
        // persist this
        user = u;
        mtSaveUser();
        // sync up user greeting
        mtFireEvent(&apos;usersignin&apos;);
    }
}

&lt;mt:Ignore&gt;
/***
 * Simple function that escapes single quote characters for storing
 * in a cookie.
 */
&lt;/mt:Ignore&gt;
function mtEscapeJS(s) {
    s = s.replace(/&apos;/g, &quot;&amp;apos;&quot;);
    return s;
}

&lt;mt:Ignore&gt;
/***
 * Simple function that unescapes single quote characters that were
 * stored in a cookie.
 */
&lt;/mt:Ignore&gt;
function mtUnescapeJS(s) {
    s = s.replace(/&amp;apos;/g, &quot;&apos;&quot;);
    return s;
}

&lt;mt:Ignore&gt;
/***
 * Serializes a user object into a string, suitable for storing as a cookie.
 */
&lt;/mt:Ignore&gt;
function mtBakeUserCookie(u) {
    var str = &quot;&quot;;
    if (u.name) str += &quot;name:&apos;&quot; + mtEscapeJS(u.name) + &quot;&apos;;&quot;;
    if (u.url) str += &quot;url:&apos;&quot; + mtEscapeJS(u.url) + &quot;&apos;;&quot;;
    if (u.email) str += &quot;email:&apos;&quot; + mtEscapeJS(u.email) + &quot;&apos;;&quot;;
    if (u.is_authenticated) str += &quot;is_authenticated:&apos;1&apos;;&quot;;
    if (u.profile) str += &quot;profile:&apos;&quot; + mtEscapeJS(u.profile) + &quot;&apos;;&quot;;
    if (u.userpic) str += &quot;userpic:&apos;&quot; + mtEscapeJS(u.userpic) + &quot;&apos;;&quot;;
    if (u.sid) str += &quot;sid:&apos;&quot; + mtEscapeJS(u.sid) + &quot;&apos;;&quot;;
    str += &quot;is_trusted:&apos;&quot; + (u.is_trusted ? &quot;1&quot; : &quot;0&quot;) + &quot;&apos;;&quot;;
    str += &quot;is_author:&apos;&quot; + (u.is_author ? &quot;1&quot; : &quot;0&quot;) + &quot;&apos;;&quot;;
    str += &quot;is_banned:&apos;&quot; + (u.is_banned ? &quot;1&quot; : &quot;0&quot;) + &quot;&apos;;&quot;;
    str += &quot;can_post:&apos;&quot; + (u.can_post ? &quot;1&quot; : &quot;0&quot;) + &quot;&apos;;&quot;;
    str += &quot;can_comment:&apos;&quot; + (u.can_comment ? &quot;1&quot; : &quot;0&quot;) + &quot;&apos;;&quot;;
    str = str.replace(/;$/, &apos;&apos;);
    return str;
}

&lt;mt:Ignore&gt;
/***
 * Unserializes a user cookie and returns a user object with the restored
 * state.
 */
&lt;/mt:Ignore&gt;
function mtUnbakeUserCookie(s) {
    if (!s) return;

    var u = {};
    var m;
    while (m = s.match(/^((name|url|email|is_authenticated|profile|userpic|sid|is_trusted|is_author|is_banned|can_post|can_comment):&apos;([^&apos;]+?)&apos;;?)/)) {
        s = s.substring(m[1].length);
        if (m[2].match(/^(is|can)_/)) // boolean fields
            u[m[2]] = m[3] == &apos;1&apos; ? true : false;
        else
            u[m[2]] = mtUnescapeJS(m[3]);
    }
    if (u.is_authenticated) {
        u.is_anonymous = false;
    } else {
        u.is_anonymous = true;
        u.can_post = false;
        u.is_author = false;
        u.is_banned = false;
        u.is_trusted = false;
    }
    return u;
}

&lt;mt:Ignore&gt;
/***
 * Retrieves an object of the currently logged in user&apos;s state.
 * If no user is logged in or cookied, this will return null.
 */
&lt;/mt:Ignore&gt;
function mtGetUser() {
    if (!user) {
        var cookie = mtGetCookie(mtCookieName);
        if (!cookie) return;
        user = mtUnbakeUserCookie(cookie);
        if (! user) {
            user = {};
            user.is_anonymous = true;
            user.can_post = false;
            user.is_author = false;
            user.is_banned = false;
            user.is_trusted = false;
        }
    }
    return user;
}

&lt;mt:Ignore&gt;
/***
 * Issues a request to the MT comment script to retrieve the currently
 * logged-in user (if any).
 */
&lt;/mt:Ignore&gt;
var mtFetchedUser = false;
&lt;mt:IfBlog&gt;
function mtFetchUser(cb) {
    if (!cb) cb = &apos;mtSetUser&apos;;
    if ( ( cb == &apos;mtSetUser&apos; ) &amp;&amp; mtGetUser() ) {
        var url = document.URL;
        url = url.replace(/#.+$/, &apos;&apos;);
        url += &apos;#comments-open&apos;;
        location.href = url;
    } else {
        // we aren&apos;t using AJAX for this, since we may have to request
        // from a different domain. JSONP to the rescue.
        mtFetchedUser = true;
        var script = document.createElement(&apos;script&apos;);
        var ts = new Date().getTime();
        script.src = &apos;&lt;$mt:CGIPath$&gt;&lt;$mt:CommentScript$&gt;?__mode=session_js&amp;blog_id=&lt;$mt:BlogID$&gt;&amp;jsonp=&apos; + cb + &apos;&amp;ts=&apos; + ts;
        (document.getElementsByTagName(&apos;head&apos;))[0].appendChild(script);
    }
}
&lt;/mt:IfBlog&gt;

&lt;mt:Ignore&gt;
/***
 * Called when the &apos;Remember me&apos; checkbox is changed. If the checkbox
 * is cleared, the cached user cookie is immediately cleared.
 */
&lt;/mt:Ignore&gt;
function mtRememberMeOnClick(b) {
    if (!b.checked)
        mtClearUser(b.form);
    return true;
}

&lt;mt:Ignore&gt;
/***
 * Called when comment form is sent.
 * Required parameter: Form DOM object of comment form.
 * If form has a &apos;bakecookie&apos; member, it will be used to signal
 * storing the anonymous commenter information to a cookie.
 * If form has a &apos;armor&apos; member, it will be used to store
 * a token that is checked by the comment script.
 */
&lt;/mt:Ignore&gt;
&lt;mt:IfBlog&gt;
var mtRequestSubmitted = false;
function mtCommentOnSubmit(f) {
    if (!mtRequestSubmitted) {
        mtRequestSubmitted = true;

        if (f.armor)
            f.armor.value = &apos;&lt;$mt:BlogSitePath encode_sha1=&quot;1&quot;$&gt;&apos;;
        if (f.bakecookie &amp;&amp; f.bakecookie.checked)
            mtSaveUser(f);

        // disable submit buttons
        if (f.preview_button) f.preview_button.disabled = true;
        if (f.post) f.post.disabled = true;

        var u = mtGetUser();
        if ( !is_preview &amp;&amp; ( u &amp;&amp; u.is_authenticated ) ) {
            // validate session; then submit
            mtFetchedUser = false;
            mtFetchUser(&apos;mtCommentSessionVerify&apos;);
            return false;
        }

        return true;
    }
    return false;
}

function mtCommentSessionVerify(app_user) {
    var u = mtGetUser();
    var f = document[&apos;comments_form&apos;];
    if ( u &amp;&amp; app_user &amp;&amp; app_user.sid &amp;&amp; ( u.sid == app_user.sid ) ) {
        f.submit();
    } else {
        alert(&apos;セッションの有効期限が切れています。再度サインインしてください。&apos;);
        mtClearUser();
        mtFireEvent(&apos;usersignin&apos;);
&lt;mt:IfRegistrationRequired&gt;
        mtShow(&apos;comments-form&apos;);
        mtHide(&apos;comments-open-footer&apos;);
&lt;/mt:IfRegistrationRequired&gt;
    }
}

function mtUserOnLoad() {
    var u = mtGetUser();

    // if the user is authenticated, hide the &apos;anonymous&apos; fields
    // and any captcha input if already shown
    if ( document.getElementById(&apos;comments-form&apos;)) {
        if ( u &amp;&amp; u.is_authenticated ) {
            mtShow(&apos;comments-form&apos;);
            mtHide(&apos;comments-open-data&apos;);
            if (mtCaptchaVisible)
                mtHide(&apos;comments-open-captcha&apos;);
        } else {
&lt;mt:IfRegistrationRequired&gt;
            mtHide(&apos;comments-form&apos;);
&lt;/mt:IfRegistrationRequired&gt;
        }
        if ( u &amp;&amp; u.is_banned )
            mtHide(&apos;comments-form&apos;);

        // if we&apos;re previewing a comment, make sure the captcha
        // field is visible
        if (is_preview)
            mtShowCaptcha();
        else
            mtShowGreeting();

        // populate anonymous comment fields if user is cookied as anonymous
        var cf = document[&apos;comments_form&apos;];
        if (cf) {
            if (u &amp;&amp; u.is_anonymous) {
                if (u.email) cf.email.value = u.email;
                if (u.name) cf.author.value = u.name;
                if (u.url) cf.url.value = u.url;
                if (cf.bakecookie)
                    cf.bakecookie.checked = u.name || u.email;
            } else {
                if (u &amp;&amp; u.sid &amp;&amp; cf.sid)
                    cf.sid.value = u.sid;
            }
            if (cf.post &amp;&amp; cf.post.disabled)
                cf.post.disabled = false;
            if (cf.preview_button &amp;&amp; cf.preview_button.disabled)
                cf.preview_button.disabled = false;
            mtRequestSubmitted = false;
        }
    }
}
&lt;/mt:IfBlog&gt;

&lt;mt:Ignore&gt;
/***
 * Called when an entry archive page is loaded.
 * This routine controls which elements of the comment form are shown
 * or hidden, depending on commenter type and blog configuration.
 */
&lt;/mt:Ignore&gt;
&lt;mt:IfBlog&gt;
function mtEntryOnLoad() {
    var cf = document[&apos;comments_form&apos;];
    if (cf &amp;&amp; cf.preview) cf.preview.value = &apos;&apos;;
    &lt;mt:Unless tag=&quot;IfPingsAccepted&quot;&gt;mtHide(&apos;trackbacks-info&apos;);&lt;/mt:Unless&gt;
    &lt;mt:Unless tag=&quot;IfCommentsAccepted&quot;&gt;mtHide(&apos;comments-open&apos;);&lt;/mt:Unless&gt;
    mtFireEvent(&apos;usersignin&apos;);
}

function mtEntryOnUnload() {
    if (mtRequestSubmitted) {
        var cf = document[&apos;comments_form&apos;];
        if (cf) {
            if (cf.post &amp;&amp; cf.post.disabled)
                cf.post.disabled = false;
            if (cf.preview_button &amp;&amp; cf.preview_button.disabled)
                cf.preview_button.disabled = false;
        }
        mtRequestSubmitted = false;
    }
    return true;
}

mtAttachEvent(&apos;usersignin&apos;, mtUserOnLoad);
&lt;/mt:IfBlog&gt;

&lt;mt:Ignore&gt;
/***
 * Handles the action of the &quot;Sign in&quot; link. First clears any existing
 * user cookie, then directs to the MT comment script to sign the user in.
 */
&lt;/mt:Ignore&gt;
function mtSignIn() {
    var doc_url = document.URL;
    doc_url = doc_url.replace(/#.+/, &apos;&apos;);
    var url = &apos;&lt;$mt:SignInLink$&gt;&apos;;
    if (is_preview) {
        if ( document[&apos;comments_form&apos;] ) {
            var entry_id = document[&apos;comments_form&apos;].entry_id.value;
            url += &apos;&amp;entry_id=&apos; + entry_id;
        } else {
            url += &apos;&amp;return_url=&lt;$mt:BlogURL encode_url=&quot;1&quot;$&gt;&apos;;
        }
    } else {
        url += &apos;&amp;return_url=&apos; + encodeURIComponent(doc_url);
    }
    mtClearUser();
    location.href = url;
}

function mtSignInOnClick(sign_in_element) {
    var el;
    if (sign_in_element) {
        // display throbber
        el = document.getElementById(sign_in_element);
        if (!el)  // legacy MT 4.x element id
            el = document.getElementById(&apos;comment-form-external-auth&apos;);
    }
    if (el)
        el.innerHTML = &apos;サインインします... &lt;span class=&quot;status-indicator&quot;&gt;&amp;nbsp;&lt;/span&gt;&apos;;

    mtClearUser(); // clear any &apos;anonymous&apos; user cookie to allow sign in
    mtFetchUser(&apos;mtSetUserOrLogin&apos;);
    return false;
}

function mtSetUserOrLogin(u) {
    if (u &amp;&amp; u.is_authenticated) {
        mtSetUser(u);
    } else {
        // user really isn&apos;t logged in; so let&apos;s do this!
        mtSignIn();
    }
}

&lt;mt:Ignore&gt;
/***
 * Handles sign out from the web site.
 * First clears any existing user cookie, then direts to the MT comment
 * script to sign the user out.
 */
&lt;/mt:Ignore&gt;
function mtSignOut(entry_id) {
    mtClearUser();
    var doc_url = document.URL;
    doc_url = doc_url.replace(/#.+/, &apos;&apos;);
    var url = &apos;&lt;$mt:SignOutLink$&gt;&apos;;
    if (is_preview) {
        if ( document[&apos;comments_form&apos;] ) {
            var entry_id = document[&apos;comments_form&apos;].entry_id.value;
            url += &apos;&amp;entry_id=&apos; + entry_id;
        } else {
            url += &apos;&amp;return_url=&lt;$mt:BlogURL encode_url=&quot;1&quot;$&gt;&apos;;
        }
    } else {
        url += &apos;&amp;return_url=&apos; + encodeURIComponent(doc_url);
    }
    location.href = url;
}

&lt;mt:Ignore&gt;
/***
 * Handles the action of the &quot;Sign out&quot; link.
 */
&lt;/mt:Ignore&gt;
function mtSignOutOnClick() {
    mtSignOut();
    return false;
}

&lt;mt:Ignore&gt;
/***
 * Handles the display of the greeting message, depending on what kind of
 * user is logged in and blog comment policy.
 */
&lt;/mt:Ignore&gt;
&lt;mt:IfBlog&gt;
function mtShowGreeting() {
&lt;mt:IfRegistrationAllowed&gt;
    var reg_reqd = &lt;mt:IfRegistrationRequired&gt;true&lt;mt:Else&gt;false&lt;/mt:IfRegistrationRequired&gt;;

    var cf = document[&apos;comments_form&apos;];
    if (!cf) return;

    var el = document.getElementById(&apos;comment-greeting&apos;);
    if (!el)  // legacy MT 4.x element id
        el = document.getElementById(&apos;comment-form-external-auth&apos;);
    if (!el) return;

    var eid = cf.entry_id;
    var entry_id;
    if (eid) entry_id = eid.value;

    var phrase;
    var u = mtGetUser();

    if ( u &amp;&amp; u.is_authenticated ) {
        if ( u.is_banned ) {
            phrase = &apos;このブログにコメントする権限を持っていません。(\&lt;a href=\&quot;javas\cript:void(0);\&quot; onclick=\&quot;return mtSignOutOnClick();\&quot;\&gt;サインアウトする\&lt;\/a\&gt;)&apos;;
        } else {
            var user_link;
            if ( u.is_author ) {
                user_link = &apos;&lt;a href=&quot;&lt;$mt:CGIPath$&gt;&lt;$mt:CommentScript$&gt;?__mode=edit_profile&amp;return_url=&apos; + encodeURIComponent( location.href );
                user_link += &apos;&quot;&gt;&apos; + u.name + &apos;&lt;/a&gt;&apos;;
            } else {
                // registered user, but not a user with posting rights
                if (u.url)
                    user_link = &apos;&lt;a href=&quot;&apos; + u.url + &apos;&quot;&gt;&apos; + u.name + &apos;&lt;/a&gt;&apos;;
                else
                    user_link = u.name;
            }
            // TBD: supplement phrase with userpic if one is available.
            phrase = &apos;__NAME__としてサインインしています。(\&lt;a href=\&quot;javas\cript:void(0)\&quot; onclick=\&quot;return mtSignOutOnClick();\&quot;\&gt;サインアウト\&lt;\/a\&gt;)&apos;;
            phrase = phrase.replace(/__NAME__/, user_link);
        }
    } else {
        if (reg_reqd) {
            phrase = &apos;コメントするにはまず\&lt;a href=\&quot;javas\cript:void(0)\&quot; onclick=\&quot;return mtSignInOnClick(\&apos;comment-greeting\&apos;)\&quot;\&gt;サインイン\&lt;\/a\&gt;してください。&apos;;
        } else {
            phrase = &apos;コメントする前に\&lt;a href=\&quot;javas\cript:void(0)\&quot; onclick=\&quot;return mtSignInOnClick(\&apos;comment-greeting\&apos;)\&quot;\&gt;サインイン\&lt;\/a\&gt;することもできます。&apos;;
        }
    }
    el.innerHTML = phrase;
&lt;mt:Else&gt;
    mtShowCaptcha();
&lt;/mt:IfRegistrationAllowed&gt;
}
&lt;/mt:IfBlog&gt;

&lt;mt:Ignore&gt;
/***
 * Handles the action of the &apos;Reply&apos; links.
 */
&lt;/mt:Ignore&gt;
function mtReplyCommentOnClick(parent_id, author) {
    mtShow(&apos;comment-form-reply&apos;);

    var checkbox = document.getElementById(&apos;comment-reply&apos;);
    var label = document.getElementById(&apos;comment-reply-label&apos;);
    var text = document.getElementById(&apos;comment-text&apos;);

    // Populate label with new values
    var reply_text = &apos;\&lt;a href=\&quot;#comment-__PARENT__\&quot; onclick=\&quot;location.href=this.href; return false\&quot;\&gt;__AUTHOR__からのコメント\&lt;\/a\&gt;に返信&apos;;
    reply_text = reply_text.replace(/__PARENT__/, parent_id);
    reply_text = reply_text.replace(/__AUTHOR__/, author);
    label.innerHTML = reply_text;

    checkbox.value = parent_id; 
    checkbox.checked = true;
    try {
        // text field may be hidden
        text.focus();
    } catch(e) {
    }

    mtSetCommentParentID();
}

&lt;mt:Ignore&gt;
/***
 * Sets the parent comment ID when replying to a comment.
 */
&lt;/mt:Ignore&gt;
function mtSetCommentParentID() {
    var checkbox = document.getElementById(&apos;comment-reply&apos;);
    var parent_id_field = document.getElementById(&apos;comment-parent-id&apos;);
    if (!checkbox || !parent_id_field) return;

    var pid = 0;
    if (checkbox.checked == true)
        pid = checkbox.value;
    parent_id_field.value = pid;
}

&lt;mt:Ignore&gt;
/***
 * Persists a copy of the current user cookie into the browser cookie stash.
 */
&lt;/mt:Ignore&gt;
function mtSaveUser(f) {
    // We can&apos;t reliably store the user cookie during a preview.
    if (is_preview) return;

    var u = mtGetUser();

    if (f &amp;&amp; (!u || u.is_anonymous)) {
        if ( !u ) {
            u = {};
            u.is_authenticated = false;
            u.can_comment = true;
            u.is_author = false;
            u.is_banned = false;
            u.is_anonymous = true;
            u.is_trusted = false;
        }
        if (f.author != undefined) u.name = f.author.value;
        if (f.email != undefined) u.email = f.email.value;
        if (f.url != undefined) u.url = f.url.value;
    }

    if (!u) return;

    var cache_period = mtCookieTimeout * 1000;

    // cache anonymous user info for a long period if the
    // user has requested to be remembered
    if (u.is_anonymous &amp;&amp; f &amp;&amp; f.bakecookie &amp;&amp; f.bakecookie.checked)
        cache_period = 365 * 24 * 60 * 60 * 1000;

    var now = new Date();
    mtFixDate(now);
    now.setTime(now.getTime() + cache_period);

    var cmtcookie = mtBakeUserCookie(u);
    mtSetCookie(mtCookieName, cmtcookie, now, mtCookiePath, mtCookieDomain,
        location.protocol == &apos;https:&apos;);
}

&lt;mt:Ignore&gt;
/***
 * Clears the blog-side user cookie.
 */
&lt;/mt:Ignore&gt;
function mtClearUser() {
    user = null;
    mtDeleteCookie(mtCookieName, mtCookiePath, mtCookieDomain,
        location.protocol == &apos;https:&apos;);
}

&lt;mt:Ignore&gt;
/***
 * Sets a browser cookie.
 */
&lt;/mt:Ignore&gt;
function mtSetCookie(name, value, expires, path, domain, secure) {
    if (domain &amp;&amp; domain.match(/^\.?localhost$/))
        domain = null;
    var curCookie = name + &quot;=&quot; + escape(value) +
        (expires ? &quot;; expires=&quot; + expires.toGMTString() : &quot;&quot;) +
        (path ? &quot;; path=&quot; + path : &quot;&quot;) +
        (domain ? &quot;; domain=&quot; + domain : &quot;&quot;) +
        (secure ? &quot;; secure&quot; : &quot;&quot;);
    document.cookie = curCookie;
}

&lt;mt:Ignore&gt;
/***
 * Retrieves a browser cookie.
 */
&lt;/mt:Ignore&gt;
function mtGetCookie(name) {
    var prefix = name + &apos;=&apos;;
    var c = document.cookie;
    var cookieStartIndex = c.indexOf(prefix);
    if (cookieStartIndex == -1)
        return &apos;&apos;;
    var cookieEndIndex = c.indexOf(&quot;;&quot;, cookieStartIndex + prefix.length);
    if (cookieEndIndex == -1)
        cookieEndIndex = c.length;
    return unescape(c.substring(cookieStartIndex + prefix.length, cookieEndIndex));
}

&lt;mt:Ignore&gt;
/***
 * Deletes a browser cookie.
 */
&lt;/mt:Ignore&gt;
function mtDeleteCookie(name, path, domain, secure) {
    if (mtGetCookie(name)) {
        if (domain &amp;&amp; domain.match(/^\.?localhost$/))
            domain = null;
        document.cookie = name + &quot;=&quot; +
            (path ? &quot;; path=&quot; + path : &quot;&quot;) +
            (domain ? &quot;; domain=&quot; + domain : &quot;&quot;) +
            (secure ? &quot;; secure&quot; : &quot;&quot;) +
            &quot;; expires=Thu, 01-Jan-70 00:00:01 GMT&quot;;
    }
}

function mtFixDate(date) {
    var skew = (new Date(0)).getTime();
    if (skew &gt; 0)
        date.setTime(date.getTime() - skew);
}

&lt;mt:Ignore&gt;
/***
 * Returns a XMLHttpRequest object (for Ajax operations).
 */
&lt;/mt:Ignore&gt;
function mtGetXmlHttp() {
    if ( !window.XMLHttpRequest ) {
        window.XMLHttpRequest = function() {
            var types = [
                &quot;Microsoft.XMLHTTP&quot;,
                &quot;MSXML2.XMLHTTP.5.0&quot;,
                &quot;MSXML2.XMLHTTP.4.0&quot;,
                &quot;MSXML2.XMLHTTP.3.0&quot;,
                &quot;MSXML2.XMLHTTP&quot;
            ];

            for ( var i = 0; i &lt; types.length; i++ ) {
                try {
                    return new ActiveXObject( types[ i ] );
                } catch( e ) {}
            }

            return undefined;
        };
    }
    if ( window.XMLHttpRequest )
        return new XMLHttpRequest();
}

// BEGIN: fast browser onload init
// Modifications by David Davis, DWD
// Dean Edwards/Matthias Miller/John Resig
// http://dean.edwards.name/weblog/2006/06/again/?full#comment5338

function mtInit() {
    // quit if this function has already been called
    if (arguments.callee.done) return;

    // flag this function so we don&apos;t do the same thing twice
    arguments.callee.done = true;

    // kill the timer
    // DWD - check against window
    if ( window._timer ) clearInterval(window._timer);

    // DWD - fire the window onload now, and replace it
    if ( window.onload &amp;&amp; ( window.onload !== window.mtInit ) ) {
        window.onload();
        window.onload = function() {};
    }
}

/* for Mozilla/Opera9 */
if (document.addEventListener) {
    document.addEventListener(&quot;DOMContentLoaded&quot;, mtInit, false);
}

/* for Internet Explorer */
/*@cc_on @*/
/*@if (@_win32)
document.write(&quot;&lt;script id=__ie_onload defer src=javascript:void(0)&gt;&lt;\/script&gt;&quot;);
var script = document.getElementById(&quot;__ie_onload&quot;);
script.onreadystatechange = function() {
    if (this.readyState == &quot;complete&quot;) {
        mtInit(); // call the onload handler
    }
};
/*@end @*/

/* for Safari */
if (/WebKit/i.test(navigator.userAgent)) { // sniff
    _timer = setInterval(function() {
        if (/loaded|complete/.test(document.readyState)) {
            mtInit(); // call the onload handler
        }
    }, 10);
}

/* for other browsers */
window.onload = mtInit;

// END: fast browser onload init

&lt;mt:IfBlog&gt;
&lt;mt:IfRegistrationAllowed&gt;
/***
 * If request contains a &apos;#_login&apos; or &apos;#_logout&apos; hash, use this to
 * also delete the blog-side user cookie, since we&apos;re coming back from
 * a login, logout or edit profile operation.
 */
var clearCookie = ( window.location.hash &amp;&amp; window.location.hash.match( /^#_log(in|out)/ ) ) ? true : false;
if (clearCookie) {
    // clear any logged in state
    mtClearUser();
    if (RegExp.$1 == &apos;in&apos;)
        mtFetchUser();
} else {
    &lt;mt:Ignore&gt;
    /***
     * Uncondition this call to fetch the current user state (if available)
     * from MT upon page load if no user cookie is already present.
     * This is okay if you have a private install, such as an Intranet;
     * not recommended for public web sites!
     */
    &lt;/mt:Ignore&gt;
    if ( is_preview &amp;&amp; !user )
        mtFetchUser();
}
&lt;/mt:IfRegistrationAllowed&gt;
&lt;/mt:IfBlog&gt;
</text></template>
<template id='187' blog_id='6' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225807' identifier='calendar' modified_on='20110606225807' name='カレンダー' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Individual&quot;&gt;
&lt;div class=&quot;widget-calendar widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;&lt;$mt:Date format=&quot;%B %Y&quot;$&gt;&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;table summary=&quot;リンク付きのカレンダー&quot;&gt;
            &lt;tr&gt;
                &lt;th abbr=&quot;日曜日&quot;&gt;日&lt;/th&gt;
                &lt;th abbr=&quot;月曜日&quot;&gt;月&lt;/th&gt;
                &lt;th abbr=&quot;火曜日&quot;&gt;火&lt;/th&gt;
                &lt;th abbr=&quot;水曜日&quot;&gt;水&lt;/th&gt;
                &lt;th abbr=&quot;木曜日&quot;&gt;木&lt;/th&gt;
                &lt;th abbr=&quot;金曜日&quot;&gt;金&lt;/th&gt;
                &lt;th abbr=&quot;土曜日&quot;&gt;土&lt;/th&gt;
            &lt;/tr&gt;
    &lt;mt:Calendar&gt;
        &lt;mt:CalendarWeekHeader&gt;
            &lt;tr&gt;
        &lt;/mt:CalendarWeekHeader&gt;
                &lt;td&gt;
        &lt;mt:CalendarIfEntries&gt;
            &lt;mt:Entries lastn=&quot;1&quot;&gt;
                    &lt;a href=&quot;&lt;$mt:EntryPermalink$&gt;&quot;&gt;&lt;$mt:CalendarDay$&gt;&lt;/a&gt;
            &lt;/mt:Entries&gt;
        &lt;/mt:CalendarIfEntries&gt;
        &lt;mt:CalendarIfNoEntries&gt;
                    &lt;$mt:CalendarDay$&gt;
        &lt;/mt:CalendarIfNoEntries&gt;
        &lt;mt:CalendarIfBlank&gt;&amp;nbsp;&lt;/mt:CalendarIfBlank&gt;
                &lt;/td&gt;
        &lt;mt:CalendarWeekFooter&gt;
            &lt;/tr&gt;
        &lt;/mt:CalendarWeekFooter&gt;
    &lt;/mt:Calendar&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
</text></template>
<template id='188' blog_id='6' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225807' identifier='comment_listing' modified_on='20110606225807' name='コメント一覧' rebuild_me='1' type='comment_listing' current_revision='0'><text>{
    &quot;direction&quot;: &quot;&lt;mt:Var name=&quot;commentDirection&quot;&gt;&quot;,
    &quot;comments&quot;: &quot;&lt;mt:Comments sort_order=&quot;$commentDirection&quot;&gt;&lt;$mt:Include module=&quot;コメント詳細&quot; replace=&quot;\&quot;,&quot;\\&quot; replace=&apos;&quot;&apos;,&apos;\&quot;&apos; strip_linefeeds=&quot;1&quot;$&gt;&lt;/mt:Comments&gt;&quot;
}</text></template>
<template id='189' blog_id='6' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225807' identifier='date_based_category_archives' modified_on='20110606225807' name='日付ベースのカテゴリアーカイブ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Category-Yearly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Category-Yearly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-category-yearly widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;年別カテゴリアーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;

&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Category-Monthly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Category-Monthly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-category-monthly widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;月別カテゴリアーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;

&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Category-Weekly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Category-Weekly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-category-weekly widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;週別カテゴリアーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;

&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Category-Daily&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Category-Daily&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-category-daily widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;日別カテゴリアーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;

</text></template>
<template id='190' blog_id='6' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225807' identifier='main_index_widgets_group' modified_on='20110606225807' name='ホームページウィジェットグループ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:Ignore&gt;
    main_indexのテンプレートだけに表示されるように設定されているウィジェットのセットです。詳細: http://www.movabletype.org/documentation/designer/widget-sets.html
&lt;/mt:Ignore&gt;
&lt;mt:If name=&quot;main_index&quot;&gt;
    &lt;$mt:Include widget=&quot;最近のコメント&quot;$&gt;
    &lt;$mt:Include widget=&quot;最近のブログ記事&quot;$&gt;
    &lt;$mt:Include widget=&quot;アイテム&quot;$&gt;
    &lt;$mt:Include widget=&quot;タグクラウド&quot;$&gt;
&lt;/mt:If&gt;
</text></template>
<template id='191' blog_id='6' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225807' identifier='search' modified_on='20110606225807' name='検索' rebuild_me='1' type='widget' current_revision='0'><text>&lt;div class=&quot;widget-search widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;検索&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;form method=&quot;get&quot; action=&quot;&lt;$mt:CGIPath$&gt;&lt;$mt:SearchScript$&gt;&quot;&gt;
            &lt;input type=&quot;text&quot; id=&quot;search&quot; class=&quot;ti&quot; name=&quot;search&quot; value=&quot;&lt;$mt:SearchString$&gt;&quot; /&gt;
&lt;mt:If name=&quot;search_results&quot;&gt;
            &lt;input type=&quot;hidden&quot; name=&quot;IncludeBlogs&quot; value=&quot;&lt;$mt:SearchIncludeBlogs$&gt;&quot; /&gt;
            &lt;mt:Ignore&gt;
            &lt;!-- use these options only with MT::App::Search::Legacy --&gt;
            &lt;ul class=&quot;search-options&quot;&gt;
                &lt;li&gt;&lt;input type=&quot;checkbox&quot; name=&quot;CaseSearch&quot; /&gt; 大文字/小文字を区別する&lt;/li&gt;
                &lt;li&gt;&lt;input type=&quot;checkbox&quot; name=&quot;RegexSearch&quot; /&gt; 正規表現&lt;/li&gt;
            &lt;/ul&gt;
            &lt;/mt:Ignore&gt;
&lt;mt:Else&gt;
            &lt;input type=&quot;hidden&quot; name=&quot;IncludeBlogs&quot; value=&quot;&lt;$mt:BlogID$&gt;&quot; /&gt;
&lt;/mt:If&gt;
            &lt;input type=&quot;hidden&quot; name=&quot;limit&quot; value=&quot;&lt;$mt:SearchMaxResults$&gt;&quot; /&gt;
            &lt;input type=&quot;submit&quot; accesskey=&quot;4&quot; value=&quot;検索&quot; /&gt;
        &lt;/form&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;mt:If name=&quot;search_results&quot;&gt;
    &lt;mt:IfTagSearch&gt;
&lt;div class=&quot;widget-tags widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;タグ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;mt:Tags&gt;
            &lt;li&gt;&lt;a href=&quot;javascript:void(0)&quot; onclick=&quot;location.href=&apos;&lt;$mt:TagSearchLink encode_js=&quot;1&quot;$&gt;&apos;;return false;&quot;&gt;&lt;$mt:TagName$&gt; (&lt;$mt:TagCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;/mt:Tags&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
    &lt;/mt:IfTagSearch&gt;
&lt;/mt:If&gt;
</text></template>
<template id='192' blog_id='6' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225807' identifier='recent_comments' modified_on='20110606225807' name='最近のコメント' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:If tag=&quot;BlogCommentCount&quot;&gt;
    &lt;mt:Comments lastn=&quot;10&quot; sort_order=&quot;descend&quot;&gt;
        &lt;mt:CommentsHeader&gt;
&lt;div class=&quot;widget-recent-comments widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;最近のコメント&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:CommentsHeader&gt;
            &lt;li&gt;&lt;strong&gt;&lt;$mt:CommentAuthor$&gt;:&lt;/strong&gt; &lt;$mt:CommentBody remove_html=&quot;1&quot; words=&quot;10&quot;$&gt; &lt;a href=&quot;&lt;$mt:CommentLink$&gt;&quot; title=&quot;&lt;mt:CommentEntry&gt;&lt;$mt:EntryTitle$&gt;&lt;/mt:CommentEntry&gt;へのコメント&quot;&gt;続きを読む&lt;/a&gt;&lt;/li&gt;
        &lt;mt:CommentsFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:CommentsFooter&gt;
    &lt;/mt:Comments&gt;
&lt;/mt:If&gt;
</text></template>
<template id='193' blog_id='6' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606225807' identifier='current_author_monthly_archive_list' modified_on='20110606225807' name='ユーザー月別アーカイブ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Author-Monthly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Author-Monthly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-current-author-monthly widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;&lt;$mt:AuthorDisplayName encode_html=&quot;1&quot;$&gt;: 月別アーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
</text></template>
<template id='194' blog_id='0' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606230452' modified_by='1' modified_on='20140325114946' name='DOCTYPE' rebuild_me='0' type='custom' current_revision='0' cache_expire_type='0' include_with_ssi='0'><text>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;
&lt;head&gt;
&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;
&lt;mt:If name=&quot;main_index&quot;&gt;
&lt;META name=&quot;description&quot; content=&quot;声優の養成所なら日本ナレーション演技研究所。学校に通いながら、働きながらでも時間的・経済的に負担の少ないレッスンで声優をめざせます。初心者でも基礎から学べ、グループプロダクションに推薦する関連会社オーディションを年に一度実施しています。&quot;&gt;
&lt;mt:Else&gt;
&lt;mt:SetVarBlock name=&quot;blog_id&quot;&gt;&lt;$MTBlogID$&gt;&lt;/mt:SetVarBlock&gt;
&lt;mt:if name=&quot;blog_id&quot; eq=&quot;5&quot;&gt;
&lt;META name=&quot;description&quot; content=&quot;日本ナレーション演技研究所は、声優・ナレーターをめざす為の声優養成スクールです。働きながら、学校に通いながらレッスンが可能です。劇団・専門学校等で演技の経験が既にある方は、本科・研修科から入所していただく場合があります。&quot;&gt;
&lt;mt:ElseIf name=&quot;blog_id&quot; eq=&quot;4&quot;&gt;
&lt;META name=&quot;description&quot; content=&quot;声優になるには、演技の基礎を学ぶ必要があります。基礎から学べる日ナレでは、東京（代々木・立川）・大宮・横浜・大阪・神戸・名古屋に開校。週1回・週3回・ジュニア声優クラス等、声優になりたい方のニーズにあわせてコースを選ぶ事が出来ます。&quot;&gt;
&lt;mt:Else&gt;
&lt;META name=&quot;description&quot; content=&quot;プロの声優をめざせる声優養成所。学校に通いながら、仕事をしながら通える声優養成所です。レッスンは週１回３時間から。グループプロダクションにアーツビジョン、アイムエンタープライズ、VIMS、クレイジーボックスがあり、出身者をバックアップしています。&quot;&gt;
&lt;/mt:if&gt;
&lt;/mt:If&gt;
&lt;META name=&quot;keywords&quot; content=&quot;声優,養成所,学校,スクール,日ナレ&quot;&gt;
&lt;META name=&quot;auther&quot; content=&quot;株式会社日本ナレーション演技研究所&quot;&gt;
&lt;META name=&quot;copyright&quot; content=&quot;株式会社日本ナレーション演技研究所&quot;&gt;
&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1 &quot;&gt;

</text></template>
<template id='195' blog_id='0' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110606230706' modified_by='1' modified_on='20140613155244' name='下層左パーツ' rebuild_me='0' type='custom' current_revision='0' cache_expire_type='0' include_with_ssi='0'><text>&lt;ul class=&quot;left-bnr roll&quot;&gt;
&lt;li&gt;&lt;a href=&quot;https://nichinare.com/request/form.cgi&quot;&gt;&lt;img src=&quot;/common/images/sec_bnr02.jpg&quot; width=&quot;190&quot; height=&quot;122&quot; alt=&quot;資料請求&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/about/native.html&quot;&gt;&lt;img src=&quot;/common/images/sec_bnr01.jpg&quot; width=&quot;190&quot; height=&quot;60&quot; alt=&quot;主な出身者&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/about/lecturer.html&quot;&gt;&lt;img src=&quot;/common/images/sec_bnr04.jpg&quot; width=&quot;190&quot; height=&quot;45&quot; alt=&quot;講師一覧&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/common/images/hpqr_l.jpg&quot; rel=&quot;lightbox&quot;&gt;&lt;img src=&quot;/common/images/sec_bnr05.jpg&quot; alt=&quot;スマートフォン・ モバイルサイト のご案内&quot; width=&quot;191&quot; height=&quot;57&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;dl class=&quot;roll&quot;&gt;
&lt;dt&gt;グループプロダクション&lt;/dt&gt;
&lt;dd&gt;&lt;a href=&quot;http://www.artsvision.co.jp/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;/common/images/sec_group01.gif&quot; width=&quot;174&quot; height=&quot;25&quot; alt=&quot;アーツビジョン&quot; /&gt;&lt;/a&gt;&lt;/dd&gt;
&lt;dd&gt;&lt;a href=&quot;http://www.imenterprise.jp/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;/common/images/sec_group02.gif&quot; width=&quot;174&quot; height=&quot;25&quot; alt=&quot;アイムエンタープライズ&quot; /&gt;&lt;/a&gt;&lt;/dd&gt;
&lt;dd&gt;&lt;a href=&quot;http://www.crazy-box.co.jp/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;/common/images/sec_group03.gif&quot; width=&quot;174&quot; height=&quot;25&quot; alt=&quot;クレイジーボックス&quot; /&gt;&lt;/a&gt;&lt;/dd&gt;
&lt;dd&gt;&lt;a href=&quot;http://www.vims.co.jp/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;/common/images/sec_group04.gif&quot; width=&quot;174&quot; height=&quot;25&quot; alt=&quot;ヴィムス&quot; /&gt;&lt;/a&gt;&lt;/dd&gt;
&lt;dd&gt;&lt;a href=&quot;http://www1a.biglobe.ne.jp/mio/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;/common/images/sec_group05.gif&quot; width=&quot;174&quot; height=&quot;25&quot; alt=&quot;澪クリエーション&quot; /&gt;&lt;/a&gt;&lt;/dd&gt;
&lt;/dl&gt;
&lt;p class=&quot;sp_bnr roll&quot;&gt;&lt;a href=&quot;http://sabagebu.com/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;/images/top_bnrsp08.jpg&quot; width=&quot;182&quot; height=&quot;57&quot; alt=&quot;さばげぶっ！&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;sp_bnr roll&quot;&gt;&lt;a href=&quot;http://www.vap.co.jp/gokukoku/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;/images/top_bnrsp07.jpg&quot; width=&quot;182&quot; height=&quot;57&quot; alt=&quot;極黒のブリュンヒルデ&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;sp_bnr roll&quot;&gt;&lt;a href=&quot;http://www.akuma-riddle.com/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;/images/top_bnrsp06.jpg&quot; width=&quot;182&quot; height=&quot;57&quot; alt=&quot;悪魔のリドル&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;sp_bnr roll&quot;&gt;&lt;a href=&quot;http://www.vap.co.jp/nobunagun/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;/images/top_bnrsp05.jpg&quot; width=&quot;182&quot; height=&quot;57&quot; alt=&quot;ノブナガン&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;sp_bnr roll&quot;&gt;&lt;a href=&quot;http://koiuta.tv/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;/images/top_bnrsp04.jpg&quot; width=&quot;182&quot; height=&quot;57&quot; alt=&quot;とある飛空士への恋歌&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;sp_bnr roll&quot;&gt;&lt;a href=&quot;http://watamote.jp/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;/images/top_bnrsp03.jpg&quot; width=&quot;182&quot; height=&quot;57&quot; alt=&quot;私がモテないのはどう考えてもお前らが悪い！&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;sp_bnr roll&quot;&gt;&lt;a href=&quot;http://arata-anime.com/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;/images/top_bnrsp01.jpg&quot; width=&quot;182&quot; height=&quot;57&quot; alt=&quot;『アラタカンガタリ &#65374;革神語&#65374;』アニメ スペシャルサイト&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;sp_bnr roll&quot;&gt;&lt;a href=&quot;http://www.anime-tv.co.jp/anibun/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;/images/top_bnrsp02.jpg&quot; width=&quot;182&quot; height=&quot;57&quot; alt=&quot;あにぶん&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
</text></template>
<template id='198' blog_id='7' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110609162441' identifier='comment_preview' modified_on='20110609162441' name='コメントプレビュー' rebuild_me='1' type='comment_preview' current_revision='0'><text>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;
    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; id=&quot;sixapart-standard&quot;&gt;
&lt;head&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
    /* &lt;![CDATA[ */
    var user = &lt;$mt:UserSessionState$&gt;;
    var is_preview = true;
    /* ]]&gt; */
    &lt;/script&gt;
    &lt;$mt:Include module=&quot;HTMLヘッダー&quot;$&gt;
    &lt;title&gt;&lt;$mt:BlogName encode_html=&quot;1&quot;$&gt;: コメントのプレビュー&lt;/title&gt;
&lt;/head&gt;
&lt;body id=&quot;&lt;$mt:BlogThemeID$&gt;&quot; class=&quot;mt-comment-preview &lt;$mt:Var name=&quot;page_layout&quot;$&gt;&quot; onload=&quot;mtEntryOnLoad()&quot; onunload=&quot;mtEntryOnUnload()&quot;&gt;
    &lt;div id=&quot;container&quot;&gt;
        &lt;div id=&quot;container-inner&quot;&gt;


            &lt;$mt:Include module=&quot;バナーヘッダー&quot;$&gt;


            &lt;div id=&quot;content&quot;&gt;
                &lt;div id=&quot;content-inner&quot;&gt;


                    &lt;div id=&quot;alpha&quot;&gt;
                        &lt;div id=&quot;alpha-inner&quot;&gt;


                            &lt;h1 id=&quot;page-title&quot;&gt;&lt;$mt:Var name=&quot;page_title&quot;$&gt;&lt;/h1&gt;


&lt;mt:Ignore&gt;&lt;!-- Comment Preview --&gt;&lt;/mt:Ignore&gt;
                            &lt;div class=&quot;comment&quot; id=&quot;comment-&lt;$mt:CommentID$&gt;&quot;&gt;
                                &lt;div class=&quot;inner&quot;&gt;
                                    &lt;div class=&quot;comment-header&quot;&gt;
                                        &lt;div class=&quot;asset-meta&quot;&gt;
                                            &lt;span class=&quot;byline&quot;&gt;
                                                &lt;$mt:CommentAuthorIdentity$&gt;
    &lt;mt:IfCommentParent&gt;
                                                &lt;span class=&quot;vcard author&quot;&gt;&lt;$mt:CommentAuthorLink$&gt;&lt;/span&gt;から&lt;a href=&quot;&lt;mt:CommentParent&gt;&lt;$mt:CommentLink$&gt;&lt;/mt:CommentParent&gt;&quot;&gt;&lt;mt:CommentParent&gt;&lt;$mt:CommentAuthor$&gt;&lt;/mt:CommentParent&gt;&lt;/a&gt;への返信
    &lt;mt:Else&gt;
                                                &lt;span class=&quot;vcard author&quot;&gt;&lt;$mt:CommentAuthorLink$&gt;&lt;/span&gt;
    &lt;/mt:IfCommentParent&gt;
                                                | &lt;a href=&quot;&lt;$mt:CommentLink$&gt;&quot;&gt;&lt;abbr class=&quot;published&quot; title=&quot;&lt;$mt:CommentDate format_name=&quot;iso8601&quot;$&gt;&quot;&gt;&lt;$mt:CommentDate$&gt;&lt;/abbr&gt;&lt;/a&gt;
                                            &lt;/span&gt;
                                        &lt;/div&gt;
                                    &lt;/div&gt;
                                    &lt;div class=&quot;comment-content&quot;&gt;
                                        &lt;$mt:CommentBody$&gt;
                                    &lt;/div&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;


&lt;mt:Ignore&gt;&lt;!-- Comment Form --&gt;&lt;/mt:Ignore&gt;
                            &lt;div class=&quot;comments-open&quot; id=&quot;comments-open&quot;&gt;
                                &lt;h2 class=&quot;comments-open-header&quot;&gt;コメントする&lt;/h2&gt;
                                &lt;div class=&quot;comments-open-content&quot;&gt;
                                    &lt;div id=&quot;comment-greeting&quot;&gt;&lt;/div&gt;
                                    &lt;form method=&quot;post&quot; action=&quot;&lt;$mt:CGIPath$&gt;&lt;$mt:CommentScript$&gt;&quot; name=&quot;comments_form&quot; id=&quot;comments-form&quot; onsubmit=&quot;return mtCommentOnSubmit(this)&quot;&gt;
                                        &lt;input type=&quot;hidden&quot; name=&quot;static&quot; value=&quot;1&quot; /&gt;
                                        &lt;input type=&quot;hidden&quot; name=&quot;armor&quot; value=&quot;1&quot; /&gt;
                                        &lt;input type=&quot;hidden&quot; name=&quot;preview&quot; value=&quot;&quot; /&gt;
                                        &lt;input type=&quot;hidden&quot; name=&quot;entry_id&quot; value=&quot;&lt;$mt:EntryID$&gt;&quot; /&gt;
                                        &lt;input type=&quot;hidden&quot; name=&quot;__lang&quot; value=&quot;&lt;$mt:BlogLanguage$&gt;&quot; /&gt;
&lt;mt:IfCommentParent&gt;
                                            &lt;input type=&quot;hidden&quot; name=&quot;parent_id&quot; value=&quot;&lt;$mt:CommentParentID escape=&quot;html&quot;$&gt;&quot; id=&quot;comment-parent-id&quot;&gt;
&lt;/mt:IfCommentParent&gt;
                                        &lt;div id=&quot;comments-open-data&quot;&gt;
                                            &lt;div id=&quot;comment-form-name&quot;&gt;
                                                &lt;label for=&quot;comment-author&quot;&gt;名前&lt;/label&gt;
                                                &lt;input id=&quot;comment-author&quot; name=&quot;author&quot; size=&quot;30&quot; value=&quot;&lt;$mt:CommentAuthor encode_html=&quot;1&quot;$&gt;&quot; onfocus=&quot;mtShowCaptcha()&quot; /&gt;
                                            &lt;/div&gt;
                                            &lt;div id=&quot;comment-form-email&quot;&gt;
                                                &lt;label for=&quot;comment-email&quot;&gt;電子メール&lt;/label&gt;
                                                &lt;input id=&quot;comment-email&quot; name=&quot;email&quot; size=&quot;30&quot; value=&quot;&lt;$mt:CommentEmail encode_html=&quot;1&quot;$&gt;&quot; onfocus=&quot;mtShowCaptcha()&quot; /&gt;
                                            &lt;/div&gt;
                                            &lt;div id=&quot;comment-form-url&quot;&gt;
                                                &lt;label for=&quot;comment-url&quot;&gt;URL&lt;/label&gt;
                                                &lt;input id=&quot;comment-url&quot; name=&quot;url&quot; size=&quot;30&quot; value=&quot;&lt;$mt:CommentURL encode_html=&quot;1&quot;$&gt;&quot; onfocus=&quot;mtShowCaptcha()&quot; /&gt;
                                            &lt;/div&gt;
                                        &lt;/div&gt;
&lt;mt:IfCommentParent&gt;
                                        &lt;div id=&quot;comment-form-reply&quot;&gt;
                                            &lt;input type=&quot;checkbox&quot; id=&quot;comment-reply&quot; name=&quot;comment_reply&quot; value=&quot;&lt;$mt:CommentParentID escape=&quot;html&quot;$&gt;&quot; checked=&quot;checked&quot; onclick=&quot;mtSetCommentParentID()&quot; /&gt;
                                            &lt;label for=&quot;comment-reply&quot; id=&quot;comment-reply-label&quot;&gt;&lt;mt:CommentParent&gt;&lt;$mt:CommentAuthor$&gt;&lt;/mt:CommentParent&gt;からのコメントに返信&lt;/label&gt;
                                        &lt;/div&gt;
&lt;/mt:IfCommentParent&gt;
                                        &lt;div id=&quot;comments-open-text&quot;&gt;
                                            &lt;label for=&quot;comment-text&quot;&gt;コメント &lt;mt:IfAllowCommentHTML&gt;(スタイル用のHTMLタグを使えます)&lt;/mt:IfAllowCommentHTML&gt;&lt;/label&gt;
                                            &lt;textarea id=&quot;comment-text&quot; name=&quot;text&quot; rows=&quot;15&quot; cols=&quot;50&quot; onfocus=&quot;mtShowCaptcha()&quot;&gt;&lt;$mt:CommentBody autolink=&quot;0&quot; sanitize=&quot;0&quot; convert_breaks=&quot;0&quot; encode_html=&quot;1&quot;$&gt;&lt;/textarea&gt;
                                        &lt;/div&gt;
                                        &lt;div id=&quot;comments-open-captcha&quot;&gt;&lt;/div&gt;
                                        &lt;div id=&quot;comments-open-footer&quot;&gt;
                                            &lt;input type=&quot;submit&quot; accesskey=&quot;v&quot; name=&quot;preview_button&quot; id=&quot;comment-preview&quot; value=&quot;プレビュー&quot; onclick=&quot;this.form.preview.value=&apos;1&apos;;&quot; /&gt;
                                            &lt;input type=&quot;submit&quot; accesskey=&quot;s&quot; name=&quot;post&quot; id=&quot;comment-submit&quot; value=&quot;投稿&quot; /&gt;
                                            &lt;input type=&quot;button&quot; name=&quot;cancel&quot; id=&quot;comment-cancel&quot; value=&quot;キャンセル&quot; onclick=&quot;window.location=&apos;&lt;$mt:EntryPermalink$&gt;&apos;&quot; /&gt;
                                        &lt;/div&gt;
                                    &lt;/form&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;


                    &lt;$mt:Include module=&quot;サイドバー&quot;$&gt;


                &lt;/div&gt;
            &lt;/div&gt;


            &lt;$mt:Include module=&quot;バナーフッター&quot;$&gt;


        &lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</text></template>
<template id='199' blog_id='7' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110609162441' identifier='monthly_entry_listing' modified_by='1' modified_on='20120606185944' name='月別一覧' rebuild_me='0' type='archive' current_revision='4' cache_expire_type='0' include_with_ssi='0' revision='4'><text>&lt;?php
  // Copyright 2010 Google Inc. All Rights Reserved.

  $GA_ACCOUNT = &quot;MO-26631444-2&quot;;
  $GA_PIXEL = &quot;/ga.php&quot;;

  function googleAnalyticsGetImageUrl() {
    global $GA_ACCOUNT, $GA_PIXEL;
    $url = &quot;&quot;;
    $url .= $GA_PIXEL . &quot;?&quot;;
    $url .= &quot;utmac=&quot; . $GA_ACCOUNT;
    $url .= &quot;&amp;utmn=&quot; . rand(0, 0x7fffffff);
    $referer = $_SERVER[&quot;HTTP_REFERER&quot;];
    $query = $_SERVER[&quot;QUERY_STRING&quot;];
    $path = $_SERVER[&quot;REQUEST_URI&quot;];
    if (empty($referer)) {
      $referer = &quot;-&quot;;
    }
    $url .= &quot;&amp;utmr=&quot; . urlencode($referer);
    if (!empty($path)) {
      $url .= &quot;&amp;utmp=&quot; . urlencode($path);
    }
    $url .= &quot;&amp;guid=ON&quot;;
    return str_replace(&quot;&amp;&quot;, &quot;&amp;amp;&quot;, $url);
  }

  // リクエストクエリー文字列取得
  function setQueryString($redirectURL) {
    $queryArray = array();
    $queryStringArray = array();
    if($_SERVER[&apos;REQUEST_METHOD&apos;] == &apos;POST&apos;) {
      $queryArray = $_POST;
    } else {
      $queryArray = $_GET;
    }
    foreach($queryArray as $key =&gt; $value) {
      $keyChecked = stripslashes(htmlspecialchars($key, ENT_QUOTES));
      $valueChecked = stripslashes(htmlspecialchars($value, ENT_QUOTES));
      $queryStringArray[] = $keyChecked.&apos;=&apos;.$valueChecked;
    }
    $queryString = implode(&apos;&amp;&apos;, $queryStringArray);
    if(strlen($queryString) &gt; 0) {
      $linkTag = &apos;&lt;a href=&quot;&apos;.$redirectURL.&apos;?&apos;.$queryString.&apos;&quot;&gt;&apos;;
    } else {
      $linkTag = &apos;&lt;a href=&quot;&apos;.$redirectURL.&apos;&quot;&gt;&apos;;
    }
    return $linkTag;
  }
?&gt;

&lt;MTKeitaiKit ixhtml=&quot;1&quot; xml_declaration=&quot;1&quot; doctype=&quot;1&quot;&gt;
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;声優・ﾅﾚーﾀーなら 日本ﾅﾚーｼｮﾝ演技研究所&lt;/title&gt;
&lt;MTKeitaiBlock class=&quot;meta&quot;&gt;&lt;/MTKeitaiBlock&gt;
&lt;/head&gt;

&lt;MTKeitaiBlock class=&quot;Body&quot;&gt;
&lt;MTKeitaiBlock class=&quot;TitleMain&quot;&gt;&lt;/MTKeitaiBlock&gt;
&lt;div style=&quot;background:#6cbd85; text-align:center;&quot;&gt;&lt;img src=&quot;/m/news/img/news_tit.jpg&quot; width=&quot;240&quot; height=&quot;20&quot; alt=&quot;最新情報&quot; /&gt;&lt;/div&gt;

&lt;div style=&quot;text-align:left;&quot;&gt;
&lt;table border=&quot;0&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; style=&quot;margin-top:5px;&quot;&gt;
&lt;mt:Entries&gt;
&lt;tr&gt;
&lt;td valign=&quot;top&quot; style=&quot;font-size:x-small; width:10px;&quot;&gt;&lt;span style=&quot;color:#98d1a9;&quot;&gt;■&lt;/span&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; style=&quot;font-size:x-small; text-align:left;&quot;&gt;&lt;?php print setQueryString(&apos;&lt;mt:EntryPermalink&gt;&apos;); ?&gt;&lt;$mt:EntryTitle$&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/mt:Entries&gt;
&lt;/table&gt;

&lt;$mt:widgetset name=&quot;月別メニュー&quot;$&gt;
&lt;/div&gt;

&lt;MTKeitaiBlock class=&quot;FooterArchive&quot;&gt;&lt;/MTKeitaiBlock&gt;
&lt;/MTKeitaiBlock&gt;
&lt;/html&gt;
&lt;/MTKeitaiKit&gt;</text></template>
<template id='200' blog_id='7' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110609162442' identifier='search_results' modified_on='20110609162442' name='検索結果' rebuild_me='1' type='search_results' current_revision='0'><text>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;
    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; id=&quot;sixapart-standard&quot;&gt;
&lt;head&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
    /* &lt;![CDATA[ */
    var user = &lt;$mt:UserSessionState$&gt;;
    /* ]]&gt; */
    &lt;/script&gt;
    &lt;$mt:Include module=&quot;HTMLヘッダー&quot;$&gt;
    &lt;title&gt;&lt;$mt:BlogName encode_html=&quot;1&quot;$&gt;: 検索結果&lt;/title&gt;
    &lt;mt:Ignore&gt;Below Javascript adds ajax search capability&lt;/mt:Ignore&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
    /* &lt;![CDATA[ */
    &lt;mt:IfMoreResults&gt;
    function getResults(page) {
        page = parseInt(page);
        if (timer) window.clearTimeout(timer);
        var xh = mtGetXmlHttp();
        if (!xh) return false;
        var res = results[page];
        if (!res) return;
        var url = res[&apos;next_url&apos;];
        if (!url) return;

        xh.open(&apos;GET&apos;, url + &apos;&amp;format=js&apos;, true);
        xh.onreadystatechange = function() {
            if ( xh.readyState == 4 ) {
                if ( xh.status &amp;&amp; ( xh.status != 200 ) ) {
                    // error - ignore
                } else {
                    try {
                        var page_results = eval(&quot;(&quot; + xh.responseText + &quot;)&quot;);
                        if ( page_results[&apos;error&apos;] == null )
                            results[page + 1] = page_results[&apos;result&apos;];
                    } catch (e) {
                    }
                }
            }
        };
        xh.send(null);
    }

    function swapContent(direction) {
        if ( direction == undefined ) direction = 1;
        var page_span = document.getElementById(&apos;current-page&apos;);
        if (!page_span) return true;
        var next_page = direction + parseInt(page_span.innerHTML);
        var res = results[next_page];
        if (!res) return true;
        var content = res[&apos;content&apos;];
        if (!content) return true;
        var div = document.getElementById(&apos;search-results&apos;);
        if (!div) return true;
        div.innerHTML = content;
        timer = window.setTimeout(&quot;getResults(&quot; + next_page + &quot;)&quot;, 1*1000);
        window.scroll(0, 0);
        return false;
    }
    &lt;mt:Else&gt;&lt;mt:IfPreviousResults&gt;
    function swapContent(direction) {
        return true;
    }&lt;/mt:IfPreviousResults&gt;
    &lt;/mt:IfMoreResults&gt;
    /* ]]&gt; */
    &lt;/script&gt;
&lt;/head&gt;
&lt;body id=&quot;&lt;$mt:BlogThemeID$&gt;&quot; class=&quot;mt-search-results &lt;$mt:Var name=&quot;page_layout&quot;$&gt;&quot;&gt;
    &lt;div id=&quot;container&quot;&gt;
        &lt;div id=&quot;container-inner&quot;&gt;


            &lt;$mt:Include module=&quot;バナーヘッダー&quot;$&gt;


            &lt;div id=&quot;content&quot;&gt;
                &lt;div id=&quot;content-inner&quot;&gt;


                    &lt;div id=&quot;alpha&quot;&gt;
                        &lt;div id=&quot;alpha-inner&quot;&gt;

&lt;mt:Ignore&gt;&lt;!--
    Below is the block to show search results.
    This makes an independent block to support
    Ajax-based background retrieval of the next search results.
--&gt;&lt;/mt:Ignore&gt;
&lt;mt:SetVarTemplate id=&quot;search_results&quot; name=&quot;search_results&quot;&gt;  
&lt;mt:SearchResults&gt;
    &lt;mt:SearchResultsHeader&gt;
                            &lt;div id=&quot;search-results&quot;&gt;
                                &lt;span id=&quot;current-page&quot; class=&quot;hidden&quot;&gt;&lt;$mt:CurrentPage$&gt;&lt;/span&gt;
                                &lt;h1 id=&quot;page-title&quot; class=&quot;search-results-header&quot;&gt;
        &lt;mt:IfStraightSearch&gt;
                                    「&lt;$mt:SearchString$&gt;」と一致するもの
        &lt;/mt:IfStraightSearch&gt;
        &lt;mt:IfTagSearch&gt;
                                    タグ「&lt;$mt:SearchString$&gt;」が付けられているもの
        &lt;/mt:IfTagSearch&gt;
                                &lt;/h1&gt;
                                &lt;div class=&quot;search-results-container autopagerize_page_element&quot;&gt;
    &lt;/mt:SearchResultsHeader&gt;
                                    &lt;$mt:Include module=&quot;ブログ記事の概要&quot; hide_counts=&quot;1&quot;$&gt;
    &lt;mt:SearchResultsFooter&gt;
                                &lt;/div&gt;&lt;div class=&quot;autopagerize_insert_before&quot;&gt;&lt;/div&gt;

    &lt;mt:Ignore&gt;&lt;!-- Used with the ajax search capability of the new search class --&gt;&lt;/mt:Ignore&gt;
                                &lt;div class=&quot;content-nav&quot;&gt;
                                    &lt;mt:IfPreviousResults&gt;&lt;a href=&quot;&lt;$mt:PreviousLink$&gt;&quot; rel=&quot;prev&quot; onclick=&quot;return swapContent(-1);&quot;&gt;&amp;lt; 前&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;/mt:IfPreviousResults&gt;&lt;mt:PagerBlock&gt;&lt;mt:IfCurrentPage&gt;&lt;$mt:Var name=&quot;__value__&quot;$&gt;&lt;mt:Else&gt;&lt;a href=&quot;&lt;$mt:PagerLink$&gt;&quot;&gt;&lt;$mt:Var name=&quot;__value__&quot;$&gt;&lt;/a&gt;&lt;/mt:IfCurrentPage&gt;&lt;mt:Unless name=&quot;__last__&quot;&gt;&amp;nbsp;&lt;/mt:Unless&gt;&lt;/mt:PagerBlock&gt;&lt;mt:IfMoreResults&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;&lt;$mt:NextLink$&gt;&quot; rel=&quot;next&quot; onclick=&quot;return swapContent();&quot;&gt;次 &amp;gt;&lt;/a&gt;&lt;/mt:IfMoreResults&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;
    &lt;/mt:SearchResultsFooter&gt;
&lt;/mt:SearchResults&gt;
&lt;/mt:SetVarTemplate&gt;
&lt;mt:Ignore&gt;&lt;!-- Display search results constructed in the block above --&gt;&lt;/mt:Ignore&gt;
&lt;$mt:Var name=&quot;search_results&quot;$&gt;


&lt;mt:Ignore&gt;&lt;!-- Display no results message --&gt;&lt;/mt:Ignore&gt;
&lt;mt:NoSearchResults&gt;
                            &lt;h1 id=&quot;page-title&quot; class=&quot;search-results-header&quot;&gt;
    &lt;mt:IfStraightSearch&gt;
                                「&lt;$mt:SearchString$&gt;」と一致するもの
    &lt;/mt:IfStraightSearch&gt;
    &lt;mt:IfTagSearch&gt;
                                タグ「&lt;$mt:SearchString$&gt;」が付けられているもの
    &lt;/mt:IfTagSearch&gt;
                            &lt;/h1&gt;
                            &lt;p&gt;「&lt;$mt:SearchString$&gt;」と一致する結果は見つかりませんでした。&lt;/p&gt;
&lt;/mt:NoSearchResults&gt;


&lt;mt:Ignore&gt;&lt;!-- Display instructions for searching if search script was accessed without a query --&gt;&lt;/mt:Ignore&gt;
&lt;mt:NoSearch&gt;
                            &lt;h1 id=&quot;page-title&quot; class=&quot;search-results-header&quot;&gt;例&lt;/h1&gt;
                            &lt;p&gt;すべての単語が順序に関係なく検索されます。フレーズで検索したいときは引用符で囲んでください。&lt;/p&gt;
                            &lt;blockquote&gt;
                                &lt;p&gt;&lt;code&gt;&quot;movable type&quot;&lt;/code&gt;&lt;/p&gt;
                            &lt;/blockquote&gt;
                            &lt;p&gt;AND、OR、NOTを入れることで論理検索を行うこともできます。&lt;/p&gt;
                            &lt;blockquote&gt;
                                &lt;p&gt;&lt;code&gt;個人 OR 出版&lt;/code&gt;&lt;/p&gt;
                                &lt;p&gt;&lt;code&gt;個人 NOT 出版&lt;/code&gt;&lt;/p&gt;
                            &lt;/blockquote&gt;
&lt;/mt:NoSearch&gt;

&lt;mt:Ignore&gt;&lt;!-- Used with the ajax search capability of the new search class --&gt;&lt;/mt:Ignore&gt;
&lt;mt:IfMoreResults&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
&lt;!--
var div = document.getElementById(&apos;search-results&apos;);
var results = {
    &apos;&lt;$mt:CurrentPage$&gt;&apos;: {
        &apos;content&apos;: div.innerHTML,
        &apos;next_url&apos;: &apos;&lt;$mt:NextLink$&gt;&apos;
    }
};
var timer = window.setTimeout(&quot;getResults(&quot; + &lt;$mt:CurrentPage$&gt; + &quot;)&quot;, 1*1000);
//--&gt;
&lt;/script&gt;
&lt;/mt:IfMoreResults&gt;


                        &lt;/div&gt;
                    &lt;/div&gt;

                    &lt;$mt:Include module=&quot;サイドバー&quot;$&gt;


                &lt;/div&gt;
            &lt;/div&gt;


            &lt;$mt:Include module=&quot;バナーフッター&quot;$&gt;


        &lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</text></template>
<template id='206' blog_id='7' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110609162442' identifier='entry' modified_by='1' modified_on='20120606185857' name='携帯最新情報詳細' rebuild_me='0' type='individual' current_revision='4' cache_expire_type='0' include_with_ssi='0' revision='4'><text>&lt;?php
  // Copyright 2010 Google Inc. All Rights Reserved.

  $GA_ACCOUNT = &quot;MO-26631444-2&quot;;
  $GA_PIXEL = &quot;/ga.php&quot;;

  function googleAnalyticsGetImageUrl() {
    global $GA_ACCOUNT, $GA_PIXEL;
    $url = &quot;&quot;;
    $url .= $GA_PIXEL . &quot;?&quot;;
    $url .= &quot;utmac=&quot; . $GA_ACCOUNT;
    $url .= &quot;&amp;utmn=&quot; . rand(0, 0x7fffffff);
    $referer = $_SERVER[&quot;HTTP_REFERER&quot;];
    $query = $_SERVER[&quot;QUERY_STRING&quot;];
    $path = $_SERVER[&quot;REQUEST_URI&quot;];
    if (empty($referer)) {
      $referer = &quot;-&quot;;
    }
    $url .= &quot;&amp;utmr=&quot; . urlencode($referer);
    if (!empty($path)) {
      $url .= &quot;&amp;utmp=&quot; . urlencode($path);
    }
    $url .= &quot;&amp;guid=ON&quot;;
    return str_replace(&quot;&amp;&quot;, &quot;&amp;amp;&quot;, $url);
  }

  // リクエストクエリー文字列取得
  function setQueryString($redirectURL) {
    $queryArray = array();
    $queryStringArray = array();
    if($_SERVER[&apos;REQUEST_METHOD&apos;] == &apos;POST&apos;) {
      $queryArray = $_POST;
    } else {
      $queryArray = $_GET;
    }
    foreach($queryArray as $key =&gt; $value) {
      $keyChecked = stripslashes(htmlspecialchars($key, ENT_QUOTES));
      $valueChecked = stripslashes(htmlspecialchars($value, ENT_QUOTES));
      $queryStringArray[] = $keyChecked.&apos;=&apos;.$valueChecked;
    }
    $queryString = implode(&apos;&amp;&apos;, $queryStringArray);
    if(strlen($queryString) &gt; 0) {
      $linkTag = &apos;&lt;a href=&quot;&apos;.$redirectURL.&apos;?&apos;.$queryString.&apos;&quot;&gt;&apos;;
    } else {
      $linkTag = &apos;&lt;a href=&quot;&apos;.$redirectURL.&apos;&quot;&gt;&apos;;
    }
    return $linkTag;
  }
?&gt;

&lt;MTKeitaiKit ixhtml=&quot;1&quot; xml_declaration=&quot;1&quot; doctype=&quot;1&quot;&gt;
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;声優・ﾅﾚーﾀーなら 日本ﾅﾚーｼｮﾝ演技研究所&lt;/title&gt;
&lt;MTKeitaiBlock class=&quot;meta&quot;&gt;&lt;/MTKeitaiBlock&gt;
&lt;/head&gt;

&lt;MTKeitaiBlock class=&quot;Body&quot;&gt;
&lt;MTKeitaiBlock class=&quot;TitleMain&quot;&gt;&lt;/MTKeitaiBlock&gt;
&lt;div style=&quot;background:#6cbd85; text-align:center;&quot;&gt;&lt;img src=&quot;/m/news/img/news_tit.jpg&quot; width=&quot;240&quot; height=&quot;20&quot; alt=&quot;最新情報&quot; /&gt;&lt;/div&gt;

&lt;div style=&quot;text-align:left;&quot;&gt;
&lt;table border=&quot;0&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; style=&quot;margin-top:5px;&quot;&gt;
&lt;tr&gt;
&lt;td valign=&quot;top&quot; style=&quot;font-size:x-small; width:10px;&quot;&gt;&lt;span style=&quot;color:#98d1a9;&quot;&gt;■&lt;/span&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; style=&quot;font-size:x-small; text-align:left; color:#4ca778;&quot;&gt;&lt;strong&gt;&lt;$MTEntryTitle$&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;div style=&quot;text-align:left;&quot;&gt;
&lt;table border=&quot;0&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; style=&quot;margin-top:5px;&quot;&gt;
&lt;tr&gt;
&lt;td valign=&quot;top&quot; style=&quot;font-size:x-small; text-align:left;&quot;&gt;&lt;$MTEntryBody$&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;div style=&quot;text-align:left;&quot;&gt;
&lt;$mt:widgetset name=&quot;月別メニュー&quot;$&gt;
&lt;/div&gt;

&lt;MTKeitaiBlock class=&quot;FooterArchive&quot;&gt;&lt;/MTKeitaiBlock&gt;
&lt;/MTKeitaiBlock&gt;
&lt;/html&gt;
&lt;/MTKeitaiKit&gt;</text></template>
<template id='208' blog_id='7' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110609162442' identifier='monthly_archive_list' modified_by='1' modified_on='20120411150432' name='月別アーカイブ' rebuild_me='0' type='widget' current_revision='2' cache_expire_type='0' include_with_ssi='0' revision='2'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Monthly&quot;&gt;
&lt;mt:ArchiveList archive_type=&quot;Monthly&quot;&gt;
&lt;mt:ArchiveListHeader&gt;
&lt;table border=&quot;0&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; style=&quot;margin-top:10px;&quot;&gt;
&lt;/mt:ArchiveListHeader&gt;
&lt;tr&gt;
&lt;td valign=&quot;top&quot; style=&quot;font-size:x-small; text-align:left;&quot;&gt;&lt;?php print setQueryString(&apos;&lt;$mt:ArchiveLink$&gt;&apos;); ?&gt;⇒&lt;$mt:ArchiveTitle$&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;mt:ArchiveListFooter&gt;
&lt;/table&gt;
&lt;/mt:ArchiveListFooter&gt;
&lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
</text></template>
<template id='209' blog_id='7' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110609162442' identifier='popup_image' modified_on='20110609162442' name='ポップアップ画像' rebuild_me='1' type='popup_image' current_revision='0'><text>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; id=&quot;sixapart-standard&quot;&gt;
&lt;head&gt;&lt;title&gt;&lt;$mt:ImageURL$&gt;&lt;/title&gt;&lt;/head&gt;
&lt;body id=&quot;uploaded-image-popup&quot; class=&quot;popup&quot; style=&quot;margin: 0;padding: 0;&quot;&gt;
    &lt;img src=&quot;&lt;$mt:ImageURL$&gt;&quot; width=&quot;&lt;$mt:ImageWidth$&gt;&quot; height=&quot;&lt;$mt:ImageHeight$&gt;&quot; alt=&quot;&lt;$mt:ImageURL$&gt;&quot; style=&quot;margin: 0;padding: 0;border: 0;&quot; /&gt;
&lt;/body&gt;
&lt;/html&gt;
</text></template>
<template id='220' blog_id='7' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110609162442' identifier='page' modified_by='1' modified_on='20121001185545' name='携帯ウェブページ' rebuild_me='0' type='page' current_revision='9' cache_expire_type='0' include_with_ssi='0' revision='9'><text>&lt;?php
  // Copyright 2010 Google Inc. All Rights Reserved.

  $GA_ACCOUNT = &quot;MO-26631444-2&quot;;
  $GA_PIXEL = &quot;/ga.php&quot;;

  function googleAnalyticsGetImageUrl() {
    global $GA_ACCOUNT, $GA_PIXEL;
    $url = &quot;&quot;;
    $url .= $GA_PIXEL . &quot;?&quot;;
    $url .= &quot;utmac=&quot; . $GA_ACCOUNT;
    $url .= &quot;&amp;utmn=&quot; . rand(0, 0x7fffffff);
    $referer = $_SERVER[&quot;HTTP_REFERER&quot;];
    $query = $_SERVER[&quot;QUERY_STRING&quot;];
    $path = $_SERVER[&quot;REQUEST_URI&quot;];
    if (empty($referer)) {
      $referer = &quot;-&quot;;
    }
    $url .= &quot;&amp;utmr=&quot; . urlencode($referer);
    if (!empty($path)) {
      $url .= &quot;&amp;utmp=&quot; . urlencode($path);
    }
    $url .= &quot;&amp;guid=ON&quot;;
    return str_replace(&quot;&amp;&quot;, &quot;&amp;amp;&quot;, $url);
  }
?&gt;
&lt;MTKeitaiKit ixhtml=&quot;1&quot; xml_declaration=&quot;1&quot; doctype=&quot;1&quot;&gt;
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;声優・ﾅﾚーﾀーなら 日本ﾅﾚーｼｮﾝ演技研究所&lt;/title&gt;
&lt;MTKeitaiBlock class=&quot;meta&quot;&gt;&lt;/MTKeitaiBlock&gt;
&lt;/head&gt;

&lt;MTKeitaiBlock class=&quot;Body&quot;&gt;
&lt;MTKeitaiBlock class=&quot;TitleMain&quot;&gt;&lt;/MTKeitaiBlock&gt;
&lt;div style=&quot;background:#6cbd85; text-align:center;&quot;&gt;&lt;img src=&quot;/m/&lt;$MTFolderLabel$&gt;/img/&lt;$MTFolderLabel$&gt;_tit.jpg&quot; /&gt;&lt;/div&gt;

&lt;$MTEntryBody$&gt;

&lt;MTKeitaiBlock class=&quot;FooterArchive&quot;&gt;&lt;/MTKeitaiBlock&gt;
&lt;/MTKeitaiBlock&gt;
&lt;/html&gt;
&lt;/MTKeitaiKit&gt;</text></template>
<template id='228' blog_id='7' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110609162442' identifier='comment_response' modified_on='20110609162442' name='コメント完了' rebuild_me='1' type='comment_response' current_revision='0'><text>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;
    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; id=&quot;sixapart-standard&quot;&gt;
&lt;head&gt;


&lt;mt:If name=&quot;comment_confirmation&quot;&gt;
    &lt;mt:Ignore&gt;&lt;!-- Success message when comment has been submitted --&gt;&lt;/mt:Ignore&gt;
    &lt;$mt:Var name=&quot;page_title&quot; value=&quot;確認&quot;$&gt;
    &lt;$mt:Var name=&quot;message&quot; value=&quot;&lt;p&gt;コメントを投稿しました。&lt;/p&gt;&quot;$&gt;
&lt;mt:Else name=&quot;comment_pending&quot;&gt;
    &lt;mt:Ignore&gt;&lt;!-- Pending message when comment is being held for review --&gt;&lt;/mt:Ignore&gt;
    &lt;$mt:Var name=&quot;page_title&quot; value=&quot;コメントありがとうございます。&quot;$&gt;
    &lt;$mt:Var name=&quot;message&quot; value=&quot;&lt;p&gt;コメントは現在承認されるまで公開を保留されています。&lt;/p&gt;&quot;$&gt;
&lt;mt:Else name=&quot;comment_error&quot;&gt;
    &lt;mt:Ignore&gt;&lt;!-- Error message when comment submission fails --&gt;&lt;/mt:Ignore&gt;
    &lt;$mt:Var name=&quot;page_title&quot; value=&quot;コメント投稿エラー&quot;$&gt;
    &lt;mt:SetVarBlock name=&quot;message&quot;&gt;&lt;p&gt;コメントを投稿できませんでした。エラー: &lt;$mt:ErrorMessage$&gt;&lt;/p&gt;&lt;/mt:SetVarBlock&gt;
&lt;/mt:If&gt;


    &lt;$mt:Include module=&quot;HTMLヘッダー&quot;$&gt;
    &lt;title&gt;&lt;$mt:BlogName encode_html=&quot;1&quot;$&gt;: &lt;$mt:Var name=&quot;page_title&quot;$&gt;&lt;/title&gt;
&lt;/head&gt;
&lt;body id=&quot;&lt;$mt:BlogThemeID$&gt;&quot; class=&quot;&lt;$mt:Var name=&quot;body_class&quot;$&gt; &lt;$mt:Var name=&quot;page_layout&quot;$&gt;&quot;&gt;
    &lt;div id=&quot;container&quot;&gt;
        &lt;div id=&quot;container-inner&quot;&gt;


            &lt;$mt:Include module=&quot;バナーヘッダー&quot;$&gt;


            &lt;div id=&quot;content&quot;&gt;
                &lt;div id=&quot;content-inner&quot;&gt;


                    &lt;div id=&quot;alpha&quot;&gt;
                        &lt;div id=&quot;alpha-inner&quot;&gt;
                            &lt;h1 id=&quot;page-title&quot;&gt;&lt;$mt:Var name=&quot;page_title&quot;$&gt;&lt;/h1&gt;
                            &lt;$mt:Var name=&quot;message&quot;$&gt;
                            &lt;p&gt;&lt;a href=&quot;&lt;mt:If name=&quot;comment_error&quot;&gt;javascript:history.back()&lt;mt:Else&gt;&lt;$mt:EntryLink$&gt;&lt;/mt:If&gt;&quot;&gt;元の記事&lt;/a&gt;に戻る&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;


                    &lt;$mt:Include module=&quot;サイドバー&quot;$&gt;


                &lt;/div&gt;
            &lt;/div&gt;


            &lt;$mt:Include module=&quot;バナーフッター&quot;$&gt;


        &lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</text></template>
<template id='233' blog_id='7' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110609162442' identifier='dynamic_error' modified_on='20110609162442' name='ダイナミックパブリッシングエラー' rebuild_me='1' type='dynamic_error' current_revision='0'><text>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;
    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; id=&quot;sixapart-standard&quot;&gt;
&lt;head&gt;
    &lt;$mt:Include module=&quot;HTMLヘッダー&quot;$&gt;
    &lt;title&gt;&lt;$mt:BlogName encode_html=&quot;1&quot;$&gt;: ページが見つかりません。&lt;/title&gt;
&lt;/head&gt;
&lt;body id=&quot;&lt;$mt:BlogThemeID$&gt;&quot; class=&quot;mt-dynamic-error &lt;$mt:Var name=&quot;page_layout&quot;$&gt;&quot;&gt;
    &lt;div id=&quot;container&quot;&gt;
        &lt;div id=&quot;container-inner&quot;&gt;


            &lt;$mt:Include module=&quot;バナーヘッダー&quot;$&gt;


            &lt;div id=&quot;content&quot;&gt;
                &lt;div id=&quot;content-inner&quot;&gt;


                    &lt;div id=&quot;alpha&quot;&gt;
                        &lt;div id=&quot;alpha-inner&quot;&gt;
                            &lt;h1 id=&quot;page-title&quot;&gt;ページが見つかりません。&lt;/h1&gt;
                            &lt;blockquote&gt;
                                &lt;strong&gt;&lt;$mt:ErrorMessage$&gt;&lt;/strong&gt;
                            &lt;/blockquote&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;


                    &lt;$mt:Include module=&quot;サイドバー&quot;$&gt;


                &lt;/div&gt;
            &lt;/div&gt;


            &lt;$mt:Include module=&quot;バナーフッター&quot;$&gt;


        &lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</text></template>
<template id='234' blog_id='7' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110609162442' identifier='javascript' modified_on='20110609162442' name='JavaScript' outfile='mt.js' rebuild_me='1' type='index' current_revision='0'><text>&lt;mt:Ignore&gt;
/*  The following functions and variables are here to support legacy MT templates.
    If you have refreshed your JavaScript template but still use older MT comment
    templates, you may need to uncomment this block in order for those templates 
    to work properly. To use, simply remove the &apos;mt:Ignore&apos; tags wrapping this
    block of code.
*/
    function hideDocumentElement(id) { return mtHide(id) }
    function showDocumentElement(id) { return mtShow(id) }
    function individualArchivesOnLoad() { return mtEntryOnLoad() }
    function writeCommenterGreeting() { return mtShowGreeting() }
    function rememberMe(f) { return mtRememberMe(f) }
    function forgetMe(f) { return mtForgetMe(f) }
    var commenter_name;
    var commenter_id;
    var commenter_url;
    var commenter_blog_ids;
    var mtcmtmail;
    var mtcmtauth;
    var mtcmthome;
    var captcha_timer;
&lt;/mt:Ignore&gt;

// The cookie name to use for storing the blog-side comment session cookie.
var mtCookieName = &quot;&lt;$mt:UserSessionCookieName$&gt;&quot;;
var mtCookieDomain = &quot;&lt;$mt:UserSessionCookieDomain$&gt;&quot;;
var mtCookiePath = &quot;&lt;$mt:UserSessionCookiePath$&gt;&quot;;
var mtCookieTimeout = &lt;$mt:UserSessionCookieTimeout$&gt;;

&lt;mt:Ignore&gt;
/***
 * Simple routine for showing a DOM element (applying a CSS display
 * attribute of &apos;none&apos;).
 */
&lt;/mt:Ignore&gt;
function mtHide(id) {
    var el = (typeof id == &quot;string&quot;) ? document.getElementById(id) : id;
    if (el) el.style.display = &apos;none&apos;;
}

&lt;mt:Ignore&gt;
/***
 * Simple routine for showing a DOM element (applying a CSS display
 * attribute of &apos;block&apos;).
 */
&lt;/mt:Ignore&gt;
function mtShow(id) {
    var el = (typeof id == &quot;string&quot;) ? document.getElementById(id) : id;
    if (el) el.style.display = &apos;block&apos;;
}

&lt;mt:Ignore&gt;
/***
 * A utility function for assigning/adding handlers to window events.
 */
&lt;/mt:Ignore&gt;
function mtAttachEvent(eventName,func) {
    var onEventName = &apos;on&apos; + eventName;
    var old = window[onEventName];
    if( typeof old != &apos;function&apos; )
        window[onEventName] = func;
    else {
        window[onEventName] = function( evt ) {
            old( evt );
            return func( evt );
        };
    }
}

&lt;mt:Ignore&gt;
/***
 * Calls the event named, if there are handlers for it.
 */
&lt;/mt:Ignore&gt;
function mtFireEvent(eventName,param) {
    var fn = window[&apos;on&apos; + eventName];
    if (typeof fn == &apos;function&apos;) return fn(param);
    return;
}

if(!this.JSON){JSON={};}(function(){function f(n){return n&lt;10?&apos;0&apos;+n:n;}if(typeof Date.prototype.toJSON!==&apos;function&apos;){Date.prototype.toJSON=function(key){return this.getUTCFullYear()+&apos;-&apos;+f(this.getUTCMonth()+1)+&apos;-&apos;+f(this.getUTCDate())+&apos;T&apos;+f(this.getUTCHours())+&apos;:&apos;+f(this.getUTCMinutes())+&apos;:&apos;+f(this.getUTCSeconds())+&apos;Z&apos;;};String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(key){return this.valueOf();};}var cx=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,escapable=/[\\\&quot;\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta={&apos;\b&apos;:&apos;\\b&apos;,&apos;\t&apos;:&apos;\\t&apos;,&apos;\n&apos;:&apos;\\n&apos;,&apos;\f&apos;:&apos;\\f&apos;,&apos;\r&apos;:&apos;\\r&apos;,&apos;&quot;&apos;:&apos;\\&quot;&apos;,&apos;\\&apos;:&apos;\\\\&apos;},rep;function quote(string){escapable.lastIndex=0;return escapable.test(string)?&apos;&quot;&apos;+string.replace(escapable,function(a){var c=meta[a];return typeof c===&apos;string&apos;?c:&apos;\\u&apos;+(&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);})+&apos;&quot;&apos;:&apos;&quot;&apos;+string+&apos;&quot;&apos;;}function str(key,holder){var i,k,v,length,mind=gap,partial,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;&amp;&amp;typeof value.toJSON===&apos;function&apos;){value=value.toJSON(key);}if(typeof rep===&apos;function&apos;){value=rep.call(holder,key,value);}switch(typeof value){case&apos;string&apos;:return quote(value);case&apos;number&apos;:return isFinite(value)?String(value):&apos;null&apos;;case&apos;boolean&apos;:case&apos;null&apos;:return String(value);case&apos;object&apos;:if(!value){return&apos;null&apos;;}gap+=indent;partial=[];if(Object.prototype.toString.apply(value)===&apos;[object Array]&apos;){length=value.length;for(i=0;i&lt;length;i+=1){partial[i]=str(i,value)||&apos;null&apos;;}v=partial.length===0?&apos;[]&apos;:gap?&apos;[\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+mind+&apos;]&apos;:&apos;[&apos;+partial.join(&apos;,&apos;)+&apos;]&apos;;gap=mind;return v;}if(rep&amp;&amp;typeof rep===&apos;object&apos;){length=rep.length;for(i=0;i&lt;length;i+=1){k=rep[i];if(typeof k===&apos;string&apos;){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}}else{for(k in value){if(Object.hasOwnProperty.call(value,k)){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}}v=partial.length===0?&apos;{}&apos;:gap?&apos;{\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+mind+&apos;}&apos;:&apos;{&apos;+partial.join(&apos;,&apos;)+&apos;}&apos;;gap=mind;return v;}}if(typeof JSON.stringify!==&apos;function&apos;){JSON.stringify=function(value,replacer,space){var i;gap=&apos;&apos;;indent=&apos;&apos;;if(typeof space===&apos;number&apos;){for(i=0;i&lt;space;i+=1){indent+=&apos; &apos;;}}else if(typeof space===&apos;string&apos;){indent=space;}rep=replacer;if(replacer&amp;&amp;typeof replacer!==&apos;function&apos;&amp;&amp;(typeof replacer!==&apos;object&apos;||typeof replacer.length!==&apos;number&apos;)){throw new Error(&apos;JSON.stringify&apos;);}return str(&apos;&apos;,{&apos;&apos;:value});};}if(typeof JSON.parse!==&apos;function&apos;){JSON.parse=function(text,reviver){var j;function walk(holder,key){var k,v,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;){for(k in value){if(Object.hasOwnProperty.call(value,k)){v=walk(value,k);if(v!==undefined){value[k]=v;}else{delete value[k];}}}}return reviver.call(holder,key,value);}cx.lastIndex=0;if(cx.test(text)){text=text.replace(cx,function(a){return&apos;\\u&apos;+(&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);});}if(/^[\],:{}\s]*$/.test(text.replace(/\\(?:[&quot;\\\/bfnrt]|u[0-9a-fA-F]{4})/g,&apos;@&apos;).replace(/&quot;[^&quot;\\\n\r]*&quot;|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,&apos;]&apos;).replace(/(?:^|:|,)(?:\s*\[)+/g,&apos;&apos;))){j=eval(&apos;(&apos;+text+&apos;)&apos;);return typeof reviver===&apos;function&apos;?walk({&apos;&apos;:j},&apos;&apos;):j;}throw new SyntaxError(&apos;JSON.parse&apos;);};}}());

var MT = window.MT || {};

MT.cons = function () {
  return {
    LOG : &apos;log&apos;,
    WARN : &apos;warn&apos;,
    DEBUG : &apos;debug&apos;,
    INFO : &apos;info&apos;,
    ERR : &apos;error&apos;,
    JSON : &apos;json&apos;
  };
}();

&lt;mt:Ignore&gt;
/**
 * Used for base functionality related to MT
 * 
 * @package MT
 * @class core
 * @global
 * @param {Object} o optional configuration object
 * Options:
 */
&lt;/mt:Ignore&gt;
MT.core = function (o) {
  var _debug = false;
  
  return {
    &lt;mt:Ignore&gt;
    /**
     * Makes remote call and handles response
     * 
     * @param {String} url The URL endpoint
     * @param {String} respType The type of response expected
     * @param {Function} respHandler The function to handle the response
     * @return void
     */
    &lt;/mt:Ignore&gt;
    connect : function (url,respType,respHandler) {
      var xh = mtGetXmlHttp();
      if (!xh) return false;
      
      xh.onreadystatechange = function() {
        if ( xh.readyState == 4 ) {
          if ( xh.status &amp;&amp; ( xh.status != 200 ) ) {
            // error - ignore
          } else {
            switch (respType) {
              case &apos;json&apos;:
                respHandler(JSON.parse(xh.responseText));
                break;
                
              case &apos;xml&apos;:
                break;
                
              case &apos;text&apos;:
                break;
            }
          }
        }
      };
      
      xh.open(&apos;GET&apos;,url);
      xh.send(null);
    },
    
    getEl : function (el) {
      return MT.util.checkNodeType(el)===&apos;element&apos; ? id : (document.getElementById(el) || false);
    },
    
    addEvent : function (el,type,func,obj) {
      if(!obj &amp;&amp; document.addEventListener) {
        el.addEventListener(type,func,false);
      } else if(obj &amp;&amp; document.addEventListener) {
        el.addEventListener(type,function () {
          func.call(obj,event);
        },false);
      } else {
        if(obj) {
          el.attachEvent(&apos;on&apos; + type,function () {
            func.call(obj,event);
          });
        } else {
          el.attachEvent(&apos;on&apos; + type,function () {          
            func.call(el,event);
          });
        }
      }
    },
    
    &lt;mt:Ignore&gt;
    /**
     * Basic logging function
     * 
     * @param {String} level The log level (WARN|DEBUG|INFO|ERROR|LOG)
     * Specified by one of the MT constants
     * @param {String} msg The log message
     * @return void
     */
    &lt;/mt:Ignore&gt;
    log : function (level,msg) {
      if(_debug &amp;&amp; window.console) {
        switch(level) {
          case &apos;warn&apos;:
          case &apos;debug&apos;:
          case &apos;info&apos;:
          case &apos;error&apos;:
          case &apos;log&apos;:
            console[level](msg);
            break;
            
          default:
            return false; 
        }
      } else {
        return false;
      }
    }
  }
}();

&lt;mt:Ignore&gt;
/**
 * Utilities class
 * 
 * @package MT
 * @class util
 * @global
 * Options:
 */
&lt;/mt:Ignore&gt;
MT.util = function () {
  return {
    toggleVisibility : {
      show : function () {
        var i = arguments.length;
        
        while(i--) {
          if(MT.util.checkNodeType(arguments[i])===&apos;element&apos;) {
            arguments[i].style.visibility = &apos;visible&apos;;
          } else {
            MT.core.getEl(arguments[i]).style.visibility = &apos;visible&apos;;
          }
        }
      },
      
      hide : function () {
        var i = arguments.length;
        while(i--) {
          if(MT.util.checkNodeType(arguments[i])===&apos;element&apos;) {
            arguments[i].style.visibility = &apos;hidden&apos;;
          } else {
            MT.core.getEl(arguments[i]).style.visibility = &apos;hidden&apos;;
          }
        }
      }
    },
    
    toggleDisplay : {
      show : function () {
        var i = arguments.length;
        while(i--) {
          if(MT.util.checkNodeType(arguments[i])===&apos;element&apos;) {
            arguments[i].style.display = &apos;&apos;;
          } else {
            MT.core.getEl(arguments[i]).style.display = &apos;&apos;;
          }
        }
      },
      
      hide : function () {
        var i = arguments.length;
        while(i--) {
          if(MT.util.checkNodeType(arguments[i])===&apos;element&apos;) {
            arguments[i].style.display = &apos;none&apos;;
          } else {
            MT.core.getEl(arguments[i]).style.display = &apos;none&apos;;
          }
        }
      }
    },
    
    &lt;mt:Ignore&gt;
    /**
     * Finds the nearest defining (i.e. with an id) parent to the given element
     * 
     * @param {HTMLElement} origin the node from which to start the search
     * @return {HTMLElement|Boolean} The parent node with an id attribute or false
     */
    &lt;/mt:Ignore&gt;
    findDefiningParent : function (origin) {
      if(MT.util.checkNodeType(origin)===&apos;element&apos;) {
        for(var node=origin.parentNode;node.parentNode;node=node.parentNode) {
          if((node.hasAttribute &amp;&amp; node.hasAttribute(&apos;id&apos;)) || node.getAttribute(&apos;id&apos;)) {
            return node;
          }
        }
      }
      return false;
    },
    
    &lt;mt:Ignore&gt;
    /**
     * Tests objects to verify if they are DOM nodes
     * 
     * @param {Object} obj The object to be tested
     * @return {String} the values &apos;element&apos;|&apos;textnode&apos;|&apos;whitespace&apos;
     */
    &lt;/mt:Ignore&gt;
    checkNodeType : function (obj) {
      if (obj &amp;&amp; obj.nodeName){
        switch (obj.nodeType) {
          case 1: return &apos;element&apos;;
          case 3: return (/\S/).test(obj.nodeValue) ? &apos;textnode&apos; : &apos;whitespace&apos;;
        }
      }
    }
  }
}();

&lt;mt:Ignore&gt;
/**
 * mtPaginateComments takes the currently generated static page and either:
 *  - Attempts to find an individual comment link in the query string
 *  - If no link is found, the static page loads
 * In either case, the pagination event is set
 */
&lt;/mt:Ignore&gt;
(function () {
  var M = MT.core,
      c = MT.cons,
      u = MT.util,
      cache,
      isLoading,
      direction,
      currentComments,
      commentAnchor,
      commentArrId,
      commentsPerPage,
      commentsTotalPages,
      loadingIcon,
      pageNum,
      commentsOffset,
      totalComments,
      entryID,
      commentContentDiv,
      topNav,
      nav,
      currentCommentsSpan,
      topCurrentCommentsSpan;
            
  M.addEvent(window,&apos;load&apos;,_init);
  
  /**
   * Initializes the class
   * 
   * @return void
   */
  function _init () {
    if(!MT.entryCommentCount) {
      return;
    }
    
    _initializeVariables();
    _setCommentOffset(false);
    _checkForAnchor();
		_setCurrentComments();
    _toggleNavLinks();
    _initializeEvents();
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Initializes variables to their initial values
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _initializeVariables() {
    cache = {};
    isLoading = false;
    commentAnchor = &apos;&apos;;
    commentArrId = &apos;&apos;;
    commentsPerPage = MT.commentsPerPage || 50;
    currentComments = &apos;&apos;;
    direction = &apos;ascend&apos;;
    entryID = MT.entryID;
    totalComments = MT.entryCommentCount;
    commentsTotalPages = Math.ceil(totalComments / commentsPerPage);
    pageNum = 1;
    
    loadingIcon = &quot;&lt;img title=&apos;Loading...&apos; src=&apos;&lt;$MTStaticWebPath$&gt;images/indicator.white.gif&apos; alt=&apos;Loading&apos; /&gt;&quot;;
    
    commentContentDiv = M.getEl(&quot;comments-content&quot;);
    topNav = M.getEl(&quot;top-comment-nav&quot;);
    nav = M.getEl(&quot;comment-nav&quot;);
    
    currentCommentsSpan = M.getEl(&quot;current-comments&quot;);
    topCurrentCommentsSpan = M.getEl(&quot;top-current-comments&quot;);
  }
  
  function _initializeEvents() {
    if (commentsPerPage &lt; totalComments) {
      M.addEvent(nav,&apos;click&apos;,_handleEvents);
      M.addEvent(topNav,&apos;click&apos;,_handleEvents);
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Checks for an existing anchor tag in the query string
   * If found, it looks for it on the current page
   * If that fails, it tries to find it in comment list and loads
   * the desired page
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _checkForAnchor() {
    var found = String(window.location.hash).match( /comment-(\d{1,6})/ );
		
		if (found) {
		  M.log(c.DEBUG,found);
			if (!Object.prototype.hasOwnProperty.call(M.getEl(found[0]), &apos;className&apos;)) {
				if (_findIdMatch(found[1])) {
    			pageNum = Math.floor(commentArrId / commentsPerPage) + 1;
    			M.log(c.DEBUG,&apos;Comment Array Id: &apos; + commentArrId);
    			M.log(c.DEBUG,&apos;Comments Per Page: &apos; + commentsPerPage);
    			M.log(c.DEBUG,&apos;Page Number: &apos; + pageNum);
    			M.log(c.DEBUG,&apos;Comment Offset: &apos; + _getCommentOffset());
    			_updateComments();
    		}
			}
		}
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Sets commentsOffset (i.e. the offset number to the remote list)
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _setCommentOffset() {
    commentsOffset = commentsPerPage * (pageNum-1);
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Gets the commentsOffset (i.e. the offset number to the remote list)
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _getCommentOffset() {
    return commentsOffset;
  }
  
  &lt;mt:Ignore&gt;
  /**
   * General event handler
   * 
   * @param {Event} e The event object
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _handleEvents (e) {
    var origin = e.target || e.srcElement,
        parentId;
        
    // stupid IE
    origin = origin.id &amp;&amp; M.getEl(origin.id) || false;

    if(origin) {
      parentId = u.checkNodeType(origin.parentNode)===&apos;element&apos; &amp;&amp; origin.parentNode.getAttribute(&apos;id&apos;) &amp;&amp; origin.parentNode.id;
    } else {
      return false;
    }
    
    switch(origin.nodeName) {
      case &apos;A&apos;:
        switch (parentId) {
          case &apos;prev-comments&apos;:
          case &apos;top-prev-comments&apos;:
            if(e.preventDefault) {
              e.preventDefault();
            } else {
              e.returnValue =	false;
            }
            if(!isLoading) {
              _previousPage();
            }
            break;
          case &apos;next-comments&apos;:
          case &apos;top-next-comments&apos;:
            if(e.preventDefault) {
              e.preventDefault();
            } else {
              e.returnValue =	false;
            }
            if(!isLoading) {
              _nextPage();
            }
            break;
        }
        break;
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Toggles the visibility of the navigation links
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _toggleNavLinks () {
    M.log(c.DEBUG,M.getEl(&apos;top-prev-comments&apos;));
    if(pageNum &lt;= commentsTotalPages &amp;&amp; pageNum !== 1) {
      u.toggleVisibility.show(&apos;prev-comments&apos;);
      u.toggleVisibility.show(&apos;top-prev-comments&apos;);
    }
    
    if(pageNum &gt;= 1 &amp;&amp; pageNum !== commentsTotalPages) {
      u.toggleVisibility.show(&apos;next-comments&apos;);
      u.toggleVisibility.show(&apos;top-next-comments&apos;);
    }
    
    if(pageNum===1 || nav.style.visibility===&apos;hidden&apos;) {
      u.toggleVisibility.hide(&apos;prev-comments&apos;);
      u.toggleVisibility.hide(&apos;top-prev-comments&apos;);
    }
    
    if(pageNum===commentsTotalPages || nav.style.visibility===&apos;hidden&apos;) {
      u.toggleVisibility.hide(&apos;next-comments&apos;);
      u.toggleVisibility.hide(&apos;top-next-comments&apos;);
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Determines appropriate action based on the id of the parent
   * clicked link. Decrements pageNum based on id.
   * 
   * @param {String} id the id of the parent of the clicked link
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _nextPage () {
    if(pageNum &lt; commentsTotalPages) {
      pageNum++;
      _updateComments();
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Determines appropriate action based on the id of the parent
   * clicked link. Increments/decrements pageNum based on id.
   * 
   * @param {String} id the id of the parent of the clicked link
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _previousPage() {
    if(pageNum &gt; 1) {
      pageNum--;
      _updateComments();
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Searches for a particular comment in the list of ids
   * 
   * @param {String} id The id for which to search
   * @return {Boolean} true, if found, false otherwise
   */
  &lt;/mt:Ignore&gt;
  function _findIdMatch (id) {
    var len = MT.commentIds.length;
    
  	while (len--) {
  		if (MT.commentIds[len] == id) {
  			commentAnchor = &quot;comment-&quot; + id;
  			commentArrId = len;
  			return true;
  		}
  	}
  	
  	return false;
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Sets the current comment counts on the page
   *
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _setCurrentComments() {
    var commentsOnPage = pageNum != commentsTotalPages ? commentsOffset + commentsPerPage : totalComments;
    
    _setCurrentCommentsContent([commentsOffset+1,&quot; - &quot;,commentsOnPage].join(&apos;&apos;));
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Sets the &quot;current-comments&quot; element with the HTML value
   * 
   * @param {String|Element} currentCommentsHTML The content to be set
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _setCurrentCommentsContent(currentCommentsHTML) {
    currentCommentsSpan.innerHTML = currentCommentsHTML;
    topCurrentCommentsSpan.innerHTML = currentCommentsHTML;
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Sets the content of the comment list
   * 
   * @param {String|Element} commentHTML The content to be set 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _setCommentContent(commentHTML) {
    commentContentDiv.innerHTML = commentHTML;
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Builds the appropriate URL to make a remote call to get the
   * next set of comments
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _updateComments() {
    var comments, jsonUrl;
    isLoading = true;
    _setCurrentCommentsContent(loadingIcon);
    _setCommentOffset();
    
    jsonUrl = [
        &quot;&lt;$mt:CGIPath$&gt;&lt;$mt:CommentScript$&gt;?__mode=comment_listing&amp;direction=&quot;,
        direction,
        &quot;&amp;entry_id=&quot;,
        entryID,
        &quot;&amp;limit=&quot;,
        commentsPerPage,
        &quot;&amp;offset=&quot;,
        _getCommentOffset()
      ].join(&apos;&apos;);
  	
  	if (!commentAnchor) {
      commentAnchor = &quot;comments-content&quot;;
    }
    
    if(cache.hasOwnProperty(jsonUrl)) {
      _refreshComments(cache[jsonUrl]);
      isLoading = false;
    } else {
      M.connect(jsonUrl,c.JSON,function (json) {
        cache[jsonUrl] = json.comments;
    	  _refreshComments(json.comments);
    	  isLoading = false;
      });
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Refreshes the comment data with the current
   * 
   * @param {String} commentData The data used to replace current comments
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _refreshComments(commentData) {
    _setCommentContent(commentData);
    _setCurrentComments();
    window.location.hash = &apos;reset&apos;;
    window.location.hash = commentAnchor;
    _toggleNavLinks();
  }
})();

&lt;mt:Ignore&gt;
/***
 * Displays a relative date.
 * &apos;ts&apos; is a Date object, &apos;fds&apos; is a string of the date which
 * will be displayed if the given date is older than 1 week.
 */
&lt;/mt:Ignore&gt;
function mtRelativeDate(ts, fds) {
    var now = new Date();
    var ref = ts;
    var delta = Math.floor((now.getTime() - ref.getTime()) / 1000);

    var str;
    if (delta &lt; 60) {
        str = &apos;直前&apos;;
    } else if (delta &lt;= 86400) {
        // less than 1 day
        var hours = Math.floor(delta / 3600);
        var min = Math.floor((delta % 3600) / 60);
        if (hours == 1)
            str = &apos;1 時間前&apos;;
        else if (hours &gt; 1)
            str = &apos;2 時間前&apos;.replace(/2/, hours);
        else if (min == 1)
            str = &apos;1 分前&apos;;
        else
            str = &apos;2 分前&apos;.replace(/2/, min);
    } else if (delta &lt;= 604800) {
        // less than 1 week
        var days = Math.floor(delta / 86400);
        var hours = Math.floor((delta % 86400) / 3600);
        if (days == 1)
            str = &apos;1 日前&apos;;
        else if (days &gt; 1)
            str = &apos;2 日前&apos;.replace(/2/, days);
        else if (hours == 1)
            str = &apos;1 時間前&apos;;
        else
            str = &apos;2 時間前&apos;.replace(/2/, hours);
    }
    return str ? str : fds;
}

&lt;mt:Ignore&gt;
/***
 * Used to display an edit link for the given entry.
 */
&lt;/mt:Ignore&gt;
function mtEditLink(entry_id, author_id) {
    var u = mtGetUser();
    if (! u) return;
    if (! entry_id) return;
    if (! author_id) return;
    if (u.id != author_id) return;
    var link = &apos;&lt;a href=&quot;&lt;$mt:AdminScript$&gt;?__mode=view&amp;amp;_type=entry&amp;amp;id=&apos; + entry_id + &apos;&quot;&gt;編集&lt;/a&gt;&apos;;
    document.write(link);
}

&lt;mt:Ignore&gt;
/***
 * Called when an input field on the comment form receives focus.
 */
&lt;/mt:Ignore&gt;
function mtCommentFormOnFocus() {
    // if CAPTCHA is enabled, this causes the captcha image to be
    // displayed if it hasn&apos;t been already.
    mtShowCaptcha();
}

&lt;mt:Ignore&gt;
/***
 * Displays a captcha field for anonymous commenters.
 */
&lt;/mt:Ignore&gt;
var mtCaptchaVisible = false;
function mtShowCaptcha() {
    var u = mtGetUser();
    if ( u &amp;&amp; u.is_authenticated ) return;
    if (mtCaptchaVisible) return;
    var div = document.getElementById(&apos;comments-open-captcha&apos;);
    if (div) {
        div.innerHTML = &apos;&lt;$mt:CaptchaFields$&gt;&apos;;
        mtCaptchaVisible = true;
    }
}

&lt;mt:Ignore&gt;
/* user object
    -- saved in user cookie --
    u.name (display name)
    u.url (link to home page)
    u.email (for anonymous only)
    u.userpic (url for commenter/author)
    u.profile (link to profile)
    u.is_trusted (boolean)
    u.is_author (user has posting rights)
    u.is_banned (banned status; neither post/comment perms)
    u.can_post (has permission to post)
    u.can_comment (has permission to comment)

    -- status fields --
    u.is_authenticated (boolean)
    u.is_anonymous (user is anonymous)
*/
&lt;/mt:Ignore&gt;

var is_preview;
var user;
&lt;mt:Ignore&gt;
/***
 * Assigns a user object as the actively logged in user; also saves the
 * user information in a browser cookie.
 */
&lt;/mt:Ignore&gt;
function mtSetUser(u) {
    if (u) {
        // persist this
        user = u;
        mtSaveUser();
        // sync up user greeting
        mtFireEvent(&apos;usersignin&apos;);
    }
}

&lt;mt:Ignore&gt;
/***
 * Simple function that escapes single quote characters for storing
 * in a cookie.
 */
&lt;/mt:Ignore&gt;
function mtEscapeJS(s) {
    s = s.replace(/&apos;/g, &quot;&amp;apos;&quot;);
    return s;
}

&lt;mt:Ignore&gt;
/***
 * Simple function that unescapes single quote characters that were
 * stored in a cookie.
 */
&lt;/mt:Ignore&gt;
function mtUnescapeJS(s) {
    s = s.replace(/&amp;apos;/g, &quot;&apos;&quot;);
    return s;
}

&lt;mt:Ignore&gt;
/***
 * Serializes a user object into a string, suitable for storing as a cookie.
 */
&lt;/mt:Ignore&gt;
function mtBakeUserCookie(u) {
    var str = &quot;&quot;;
    if (u.name) str += &quot;name:&apos;&quot; + mtEscapeJS(u.name) + &quot;&apos;;&quot;;
    if (u.url) str += &quot;url:&apos;&quot; + mtEscapeJS(u.url) + &quot;&apos;;&quot;;
    if (u.email) str += &quot;email:&apos;&quot; + mtEscapeJS(u.email) + &quot;&apos;;&quot;;
    if (u.is_authenticated) str += &quot;is_authenticated:&apos;1&apos;;&quot;;
    if (u.profile) str += &quot;profile:&apos;&quot; + mtEscapeJS(u.profile) + &quot;&apos;;&quot;;
    if (u.userpic) str += &quot;userpic:&apos;&quot; + mtEscapeJS(u.userpic) + &quot;&apos;;&quot;;
    if (u.sid) str += &quot;sid:&apos;&quot; + mtEscapeJS(u.sid) + &quot;&apos;;&quot;;
    str += &quot;is_trusted:&apos;&quot; + (u.is_trusted ? &quot;1&quot; : &quot;0&quot;) + &quot;&apos;;&quot;;
    str += &quot;is_author:&apos;&quot; + (u.is_author ? &quot;1&quot; : &quot;0&quot;) + &quot;&apos;;&quot;;
    str += &quot;is_banned:&apos;&quot; + (u.is_banned ? &quot;1&quot; : &quot;0&quot;) + &quot;&apos;;&quot;;
    str += &quot;can_post:&apos;&quot; + (u.can_post ? &quot;1&quot; : &quot;0&quot;) + &quot;&apos;;&quot;;
    str += &quot;can_comment:&apos;&quot; + (u.can_comment ? &quot;1&quot; : &quot;0&quot;) + &quot;&apos;;&quot;;
    str = str.replace(/;$/, &apos;&apos;);
    return str;
}

&lt;mt:Ignore&gt;
/***
 * Unserializes a user cookie and returns a user object with the restored
 * state.
 */
&lt;/mt:Ignore&gt;
function mtUnbakeUserCookie(s) {
    if (!s) return;

    var u = {};
    var m;
    while (m = s.match(/^((name|url|email|is_authenticated|profile|userpic|sid|is_trusted|is_author|is_banned|can_post|can_comment):&apos;([^&apos;]+?)&apos;;?)/)) {
        s = s.substring(m[1].length);
        if (m[2].match(/^(is|can)_/)) // boolean fields
            u[m[2]] = m[3] == &apos;1&apos; ? true : false;
        else
            u[m[2]] = mtUnescapeJS(m[3]);
    }
    if (u.is_authenticated) {
        u.is_anonymous = false;
    } else {
        u.is_anonymous = true;
        u.can_post = false;
        u.is_author = false;
        u.is_banned = false;
        u.is_trusted = false;
    }
    return u;
}

&lt;mt:Ignore&gt;
/***
 * Retrieves an object of the currently logged in user&apos;s state.
 * If no user is logged in or cookied, this will return null.
 */
&lt;/mt:Ignore&gt;
function mtGetUser() {
    if (!user) {
        var cookie = mtGetCookie(mtCookieName);
        if (!cookie) return;
        user = mtUnbakeUserCookie(cookie);
        if (! user) {
            user = {};
            user.is_anonymous = true;
            user.can_post = false;
            user.is_author = false;
            user.is_banned = false;
            user.is_trusted = false;
        }
    }
    return user;
}

&lt;mt:Ignore&gt;
/***
 * Issues a request to the MT comment script to retrieve the currently
 * logged-in user (if any).
 */
&lt;/mt:Ignore&gt;
var mtFetchedUser = false;
&lt;mt:IfBlog&gt;
function mtFetchUser(cb) {
    if (!cb) cb = &apos;mtSetUser&apos;;
    if ( ( cb == &apos;mtSetUser&apos; ) &amp;&amp; mtGetUser() ) {
        var url = document.URL;
        url = url.replace(/#.+$/, &apos;&apos;);
        url += &apos;#comments-open&apos;;
        location.href = url;
    } else {
        // we aren&apos;t using AJAX for this, since we may have to request
        // from a different domain. JSONP to the rescue.
        mtFetchedUser = true;
        var script = document.createElement(&apos;script&apos;);
        var ts = new Date().getTime();
        script.src = &apos;&lt;$mt:CGIPath$&gt;&lt;$mt:CommentScript$&gt;?__mode=session_js&amp;blog_id=&lt;$mt:BlogID$&gt;&amp;jsonp=&apos; + cb + &apos;&amp;ts=&apos; + ts;
        (document.getElementsByTagName(&apos;head&apos;))[0].appendChild(script);
    }
}
&lt;/mt:IfBlog&gt;

&lt;mt:Ignore&gt;
/***
 * Called when the &apos;Remember me&apos; checkbox is changed. If the checkbox
 * is cleared, the cached user cookie is immediately cleared.
 */
&lt;/mt:Ignore&gt;
function mtRememberMeOnClick(b) {
    if (!b.checked)
        mtClearUser(b.form);
    return true;
}

&lt;mt:Ignore&gt;
/***
 * Called when comment form is sent.
 * Required parameter: Form DOM object of comment form.
 * If form has a &apos;bakecookie&apos; member, it will be used to signal
 * storing the anonymous commenter information to a cookie.
 * If form has a &apos;armor&apos; member, it will be used to store
 * a token that is checked by the comment script.
 */
&lt;/mt:Ignore&gt;
&lt;mt:IfBlog&gt;
var mtRequestSubmitted = false;
function mtCommentOnSubmit(f) {
    if (!mtRequestSubmitted) {
        mtRequestSubmitted = true;

        if (f.armor)
            f.armor.value = &apos;&lt;$mt:BlogSitePath encode_sha1=&quot;1&quot;$&gt;&apos;;
        if (f.bakecookie &amp;&amp; f.bakecookie.checked)
            mtSaveUser(f);

        // disable submit buttons
        if (f.preview_button) f.preview_button.disabled = true;
        if (f.post) f.post.disabled = true;

        var u = mtGetUser();
        if ( !is_preview &amp;&amp; ( u &amp;&amp; u.is_authenticated ) ) {
            // validate session; then submit
            mtFetchedUser = false;
            mtFetchUser(&apos;mtCommentSessionVerify&apos;);
            return false;
        }

        return true;
    }
    return false;
}

function mtCommentSessionVerify(app_user) {
    var u = mtGetUser();
    var f = document[&apos;comments_form&apos;];
    if ( u &amp;&amp; app_user &amp;&amp; app_user.sid &amp;&amp; ( u.sid == app_user.sid ) ) {
        f.submit();
    } else {
        alert(&apos;セッションの有効期限が切れています。再度サインインしてください。&apos;);
        mtClearUser();
        mtFireEvent(&apos;usersignin&apos;);
&lt;mt:IfRegistrationRequired&gt;
        mtShow(&apos;comments-form&apos;);
        mtHide(&apos;comments-open-footer&apos;);
&lt;/mt:IfRegistrationRequired&gt;
    }
}

function mtUserOnLoad() {
    var u = mtGetUser();

    // if the user is authenticated, hide the &apos;anonymous&apos; fields
    // and any captcha input if already shown
    if ( document.getElementById(&apos;comments-form&apos;)) {
        if ( u &amp;&amp; u.is_authenticated ) {
            mtShow(&apos;comments-form&apos;);
            mtHide(&apos;comments-open-data&apos;);
            if (mtCaptchaVisible)
                mtHide(&apos;comments-open-captcha&apos;);
        } else {
&lt;mt:IfRegistrationRequired&gt;
            mtHide(&apos;comments-form&apos;);
&lt;/mt:IfRegistrationRequired&gt;
        }
        if ( u &amp;&amp; u.is_banned )
            mtHide(&apos;comments-form&apos;);

        // if we&apos;re previewing a comment, make sure the captcha
        // field is visible
        if (is_preview)
            mtShowCaptcha();
        else
            mtShowGreeting();

        // populate anonymous comment fields if user is cookied as anonymous
        var cf = document[&apos;comments_form&apos;];
        if (cf) {
            if (u &amp;&amp; u.is_anonymous) {
                if (u.email) cf.email.value = u.email;
                if (u.name) cf.author.value = u.name;
                if (u.url) cf.url.value = u.url;
                if (cf.bakecookie)
                    cf.bakecookie.checked = u.name || u.email;
            } else {
                if (u &amp;&amp; u.sid &amp;&amp; cf.sid)
                    cf.sid.value = u.sid;
            }
            if (cf.post &amp;&amp; cf.post.disabled)
                cf.post.disabled = false;
            if (cf.preview_button &amp;&amp; cf.preview_button.disabled)
                cf.preview_button.disabled = false;
            mtRequestSubmitted = false;
        }
    }
}
&lt;/mt:IfBlog&gt;

&lt;mt:Ignore&gt;
/***
 * Called when an entry archive page is loaded.
 * This routine controls which elements of the comment form are shown
 * or hidden, depending on commenter type and blog configuration.
 */
&lt;/mt:Ignore&gt;
&lt;mt:IfBlog&gt;
function mtEntryOnLoad() {
    var cf = document[&apos;comments_form&apos;];
    if (cf &amp;&amp; cf.preview) cf.preview.value = &apos;&apos;;
    &lt;mt:Unless tag=&quot;IfPingsAccepted&quot;&gt;mtHide(&apos;trackbacks-info&apos;);&lt;/mt:Unless&gt;
    &lt;mt:Unless tag=&quot;IfCommentsAccepted&quot;&gt;mtHide(&apos;comments-open&apos;);&lt;/mt:Unless&gt;
    mtFireEvent(&apos;usersignin&apos;);
}

function mtEntryOnUnload() {
    if (mtRequestSubmitted) {
        var cf = document[&apos;comments_form&apos;];
        if (cf) {
            if (cf.post &amp;&amp; cf.post.disabled)
                cf.post.disabled = false;
            if (cf.preview_button &amp;&amp; cf.preview_button.disabled)
                cf.preview_button.disabled = false;
        }
        mtRequestSubmitted = false;
    }
    return true;
}

mtAttachEvent(&apos;usersignin&apos;, mtUserOnLoad);
&lt;/mt:IfBlog&gt;

&lt;mt:Ignore&gt;
/***
 * Handles the action of the &quot;Sign in&quot; link. First clears any existing
 * user cookie, then directs to the MT comment script to sign the user in.
 */
&lt;/mt:Ignore&gt;
function mtSignIn() {
    var doc_url = document.URL;
    doc_url = doc_url.replace(/#.+/, &apos;&apos;);
    var url = &apos;&lt;$mt:SignInLink$&gt;&apos;;
    if (is_preview) {
        if ( document[&apos;comments_form&apos;] ) {
            var entry_id = document[&apos;comments_form&apos;].entry_id.value;
            url += &apos;&amp;entry_id=&apos; + entry_id;
        } else {
            url += &apos;&amp;return_url=&lt;$mt:BlogURL encode_url=&quot;1&quot;$&gt;&apos;;
        }
    } else {
        url += &apos;&amp;return_url=&apos; + encodeURIComponent(doc_url);
    }
    mtClearUser();
    location.href = url;
}

function mtSignInOnClick(sign_in_element) {
    var el;
    if (sign_in_element) {
        // display throbber
        el = document.getElementById(sign_in_element);
        if (!el)  // legacy MT 4.x element id
            el = document.getElementById(&apos;comment-form-external-auth&apos;);
    }
    if (el)
        el.innerHTML = &apos;サインインします... &lt;span class=&quot;status-indicator&quot;&gt;&amp;nbsp;&lt;/span&gt;&apos;;

    mtClearUser(); // clear any &apos;anonymous&apos; user cookie to allow sign in
    mtFetchUser(&apos;mtSetUserOrLogin&apos;);
    return false;
}

function mtSetUserOrLogin(u) {
    if (u &amp;&amp; u.is_authenticated) {
        mtSetUser(u);
    } else {
        // user really isn&apos;t logged in; so let&apos;s do this!
        mtSignIn();
    }
}

&lt;mt:Ignore&gt;
/***
 * Handles sign out from the web site.
 * First clears any existing user cookie, then direts to the MT comment
 * script to sign the user out.
 */
&lt;/mt:Ignore&gt;
function mtSignOut(entry_id) {
    mtClearUser();
    var doc_url = document.URL;
    doc_url = doc_url.replace(/#.+/, &apos;&apos;);
    var url = &apos;&lt;$mt:SignOutLink$&gt;&apos;;
    if (is_preview) {
        if ( document[&apos;comments_form&apos;] ) {
            var entry_id = document[&apos;comments_form&apos;].entry_id.value;
            url += &apos;&amp;entry_id=&apos; + entry_id;
        } else {
            url += &apos;&amp;return_url=&lt;$mt:BlogURL encode_url=&quot;1&quot;$&gt;&apos;;
        }
    } else {
        url += &apos;&amp;return_url=&apos; + encodeURIComponent(doc_url);
    }
    location.href = url;
}

&lt;mt:Ignore&gt;
/***
 * Handles the action of the &quot;Sign out&quot; link.
 */
&lt;/mt:Ignore&gt;
function mtSignOutOnClick() {
    mtSignOut();
    return false;
}

&lt;mt:Ignore&gt;
/***
 * Handles the display of the greeting message, depending on what kind of
 * user is logged in and blog comment policy.
 */
&lt;/mt:Ignore&gt;
&lt;mt:IfBlog&gt;
function mtShowGreeting() {
&lt;mt:IfRegistrationAllowed&gt;
    var reg_reqd = &lt;mt:IfRegistrationRequired&gt;true&lt;mt:Else&gt;false&lt;/mt:IfRegistrationRequired&gt;;

    var cf = document[&apos;comments_form&apos;];
    if (!cf) return;

    var el = document.getElementById(&apos;comment-greeting&apos;);
    if (!el)  // legacy MT 4.x element id
        el = document.getElementById(&apos;comment-form-external-auth&apos;);
    if (!el) return;

    var eid = cf.entry_id;
    var entry_id;
    if (eid) entry_id = eid.value;

    var phrase;
    var u = mtGetUser();

    if ( u &amp;&amp; u.is_authenticated ) {
        if ( u.is_banned ) {
            phrase = &apos;このブログにコメントする権限を持っていません。(\&lt;a href=\&quot;javas\cript:void(0);\&quot; onclick=\&quot;return mtSignOutOnClick();\&quot;\&gt;サインアウトする\&lt;\/a\&gt;)&apos;;
        } else {
            var user_link;
            if ( u.is_author ) {
                user_link = &apos;&lt;a href=&quot;&lt;$mt:CGIPath$&gt;&lt;$mt:CommentScript$&gt;?__mode=edit_profile&amp;return_url=&apos; + encodeURIComponent( location.href );
                user_link += &apos;&quot;&gt;&apos; + u.name + &apos;&lt;/a&gt;&apos;;
            } else {
                // registered user, but not a user with posting rights
                if (u.url)
                    user_link = &apos;&lt;a href=&quot;&apos; + u.url + &apos;&quot;&gt;&apos; + u.name + &apos;&lt;/a&gt;&apos;;
                else
                    user_link = u.name;
            }
            // TBD: supplement phrase with userpic if one is available.
            phrase = &apos;__NAME__としてサインインしています。(\&lt;a href=\&quot;javas\cript:void(0)\&quot; onclick=\&quot;return mtSignOutOnClick();\&quot;\&gt;サインアウト\&lt;\/a\&gt;)&apos;;
            phrase = phrase.replace(/__NAME__/, user_link);
        }
    } else {
        if (reg_reqd) {
            phrase = &apos;コメントするにはまず\&lt;a href=\&quot;javas\cript:void(0)\&quot; onclick=\&quot;return mtSignInOnClick(\&apos;comment-greeting\&apos;)\&quot;\&gt;サインイン\&lt;\/a\&gt;してください。&apos;;
        } else {
            phrase = &apos;コメントする前に\&lt;a href=\&quot;javas\cript:void(0)\&quot; onclick=\&quot;return mtSignInOnClick(\&apos;comment-greeting\&apos;)\&quot;\&gt;サインイン\&lt;\/a\&gt;することもできます。&apos;;
        }
    }
    el.innerHTML = phrase;
&lt;mt:Else&gt;
    mtShowCaptcha();
&lt;/mt:IfRegistrationAllowed&gt;
}
&lt;/mt:IfBlog&gt;

&lt;mt:Ignore&gt;
/***
 * Handles the action of the &apos;Reply&apos; links.
 */
&lt;/mt:Ignore&gt;
function mtReplyCommentOnClick(parent_id, author) {
    mtShow(&apos;comment-form-reply&apos;);

    var checkbox = document.getElementById(&apos;comment-reply&apos;);
    var label = document.getElementById(&apos;comment-reply-label&apos;);
    var text = document.getElementById(&apos;comment-text&apos;);

    // Populate label with new values
    var reply_text = &apos;\&lt;a href=\&quot;#comment-__PARENT__\&quot; onclick=\&quot;location.href=this.href; return false\&quot;\&gt;__AUTHOR__からのコメント\&lt;\/a\&gt;に返信&apos;;
    reply_text = reply_text.replace(/__PARENT__/, parent_id);
    reply_text = reply_text.replace(/__AUTHOR__/, author);
    label.innerHTML = reply_text;

    checkbox.value = parent_id; 
    checkbox.checked = true;
    try {
        // text field may be hidden
        text.focus();
    } catch(e) {
    }

    mtSetCommentParentID();
}

&lt;mt:Ignore&gt;
/***
 * Sets the parent comment ID when replying to a comment.
 */
&lt;/mt:Ignore&gt;
function mtSetCommentParentID() {
    var checkbox = document.getElementById(&apos;comment-reply&apos;);
    var parent_id_field = document.getElementById(&apos;comment-parent-id&apos;);
    if (!checkbox || !parent_id_field) return;

    var pid = 0;
    if (checkbox.checked == true)
        pid = checkbox.value;
    parent_id_field.value = pid;
}

&lt;mt:Ignore&gt;
/***
 * Persists a copy of the current user cookie into the browser cookie stash.
 */
&lt;/mt:Ignore&gt;
function mtSaveUser(f) {
    // We can&apos;t reliably store the user cookie during a preview.
    if (is_preview) return;

    var u = mtGetUser();

    if (f &amp;&amp; (!u || u.is_anonymous)) {
        if ( !u ) {
            u = {};
            u.is_authenticated = false;
            u.can_comment = true;
            u.is_author = false;
            u.is_banned = false;
            u.is_anonymous = true;
            u.is_trusted = false;
        }
        if (f.author != undefined) u.name = f.author.value;
        if (f.email != undefined) u.email = f.email.value;
        if (f.url != undefined) u.url = f.url.value;
    }

    if (!u) return;

    var cache_period = mtCookieTimeout * 1000;

    // cache anonymous user info for a long period if the
    // user has requested to be remembered
    if (u.is_anonymous &amp;&amp; f &amp;&amp; f.bakecookie &amp;&amp; f.bakecookie.checked)
        cache_period = 365 * 24 * 60 * 60 * 1000;

    var now = new Date();
    mtFixDate(now);
    now.setTime(now.getTime() + cache_period);

    var cmtcookie = mtBakeUserCookie(u);
    mtSetCookie(mtCookieName, cmtcookie, now, mtCookiePath, mtCookieDomain,
        location.protocol == &apos;https:&apos;);
}

&lt;mt:Ignore&gt;
/***
 * Clears the blog-side user cookie.
 */
&lt;/mt:Ignore&gt;
function mtClearUser() {
    user = null;
    mtDeleteCookie(mtCookieName, mtCookiePath, mtCookieDomain,
        location.protocol == &apos;https:&apos;);
}

&lt;mt:Ignore&gt;
/***
 * Sets a browser cookie.
 */
&lt;/mt:Ignore&gt;
function mtSetCookie(name, value, expires, path, domain, secure) {
    if (domain &amp;&amp; domain.match(/^\.?localhost$/))
        domain = null;
    var curCookie = name + &quot;=&quot; + escape(value) +
        (expires ? &quot;; expires=&quot; + expires.toGMTString() : &quot;&quot;) +
        (path ? &quot;; path=&quot; + path : &quot;&quot;) +
        (domain ? &quot;; domain=&quot; + domain : &quot;&quot;) +
        (secure ? &quot;; secure&quot; : &quot;&quot;);
    document.cookie = curCookie;
}

&lt;mt:Ignore&gt;
/***
 * Retrieves a browser cookie.
 */
&lt;/mt:Ignore&gt;
function mtGetCookie(name) {
    var prefix = name + &apos;=&apos;;
    var c = document.cookie;
    var cookieStartIndex = c.indexOf(prefix);
    if (cookieStartIndex == -1)
        return &apos;&apos;;
    var cookieEndIndex = c.indexOf(&quot;;&quot;, cookieStartIndex + prefix.length);
    if (cookieEndIndex == -1)
        cookieEndIndex = c.length;
    return unescape(c.substring(cookieStartIndex + prefix.length, cookieEndIndex));
}

&lt;mt:Ignore&gt;
/***
 * Deletes a browser cookie.
 */
&lt;/mt:Ignore&gt;
function mtDeleteCookie(name, path, domain, secure) {
    if (mtGetCookie(name)) {
        if (domain &amp;&amp; domain.match(/^\.?localhost$/))
            domain = null;
        document.cookie = name + &quot;=&quot; +
            (path ? &quot;; path=&quot; + path : &quot;&quot;) +
            (domain ? &quot;; domain=&quot; + domain : &quot;&quot;) +
            (secure ? &quot;; secure&quot; : &quot;&quot;) +
            &quot;; expires=Thu, 01-Jan-70 00:00:01 GMT&quot;;
    }
}

function mtFixDate(date) {
    var skew = (new Date(0)).getTime();
    if (skew &gt; 0)
        date.setTime(date.getTime() - skew);
}

&lt;mt:Ignore&gt;
/***
 * Returns a XMLHttpRequest object (for Ajax operations).
 */
&lt;/mt:Ignore&gt;
function mtGetXmlHttp() {
    if ( !window.XMLHttpRequest ) {
        window.XMLHttpRequest = function() {
            var types = [
                &quot;Microsoft.XMLHTTP&quot;,
                &quot;MSXML2.XMLHTTP.5.0&quot;,
                &quot;MSXML2.XMLHTTP.4.0&quot;,
                &quot;MSXML2.XMLHTTP.3.0&quot;,
                &quot;MSXML2.XMLHTTP&quot;
            ];

            for ( var i = 0; i &lt; types.length; i++ ) {
                try {
                    return new ActiveXObject( types[ i ] );
                } catch( e ) {}
            }

            return undefined;
        };
    }
    if ( window.XMLHttpRequest )
        return new XMLHttpRequest();
}

// BEGIN: fast browser onload init
// Modifications by David Davis, DWD
// Dean Edwards/Matthias Miller/John Resig
// http://dean.edwards.name/weblog/2006/06/again/?full#comment5338

function mtInit() {
    // quit if this function has already been called
    if (arguments.callee.done) return;

    // flag this function so we don&apos;t do the same thing twice
    arguments.callee.done = true;

    // kill the timer
    // DWD - check against window
    if ( window._timer ) clearInterval(window._timer);

    // DWD - fire the window onload now, and replace it
    if ( window.onload &amp;&amp; ( window.onload !== window.mtInit ) ) {
        window.onload();
        window.onload = function() {};
    }
}

/* for Mozilla/Opera9 */
if (document.addEventListener) {
    document.addEventListener(&quot;DOMContentLoaded&quot;, mtInit, false);
}

/* for Internet Explorer */
/*@cc_on @*/
/*@if (@_win32)
document.write(&quot;&lt;script id=__ie_onload defer src=javascript:void(0)&gt;&lt;\/script&gt;&quot;);
var script = document.getElementById(&quot;__ie_onload&quot;);
script.onreadystatechange = function() {
    if (this.readyState == &quot;complete&quot;) {
        mtInit(); // call the onload handler
    }
};
/*@end @*/

/* for Safari */
if (/WebKit/i.test(navigator.userAgent)) { // sniff
    _timer = setInterval(function() {
        if (/loaded|complete/.test(document.readyState)) {
            mtInit(); // call the onload handler
        }
    }, 10);
}

/* for other browsers */
window.onload = mtInit;

// END: fast browser onload init

&lt;mt:IfBlog&gt;
&lt;mt:IfRegistrationAllowed&gt;
/***
 * If request contains a &apos;#_login&apos; or &apos;#_logout&apos; hash, use this to
 * also delete the blog-side user cookie, since we&apos;re coming back from
 * a login, logout or edit profile operation.
 */
var clearCookie = ( window.location.hash &amp;&amp; window.location.hash.match( /^#_log(in|out)/ ) ) ? true : false;
if (clearCookie) {
    // clear any logged in state
    mtClearUser();
    if (RegExp.$1 == &apos;in&apos;)
        mtFetchUser();
} else {
    &lt;mt:Ignore&gt;
    /***
     * Uncondition this call to fetch the current user state (if available)
     * from MT upon page load if no user cookie is already present.
     * This is okay if you have a private install, such as an Intranet;
     * not recommended for public web sites!
     */
    &lt;/mt:Ignore&gt;
    if ( is_preview &amp;&amp; !user )
        mtFetchUser();
}
&lt;/mt:IfRegistrationAllowed&gt;
&lt;/mt:IfBlog&gt;
</text></template>
<template id='235' blog_id='7' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110609162442' identifier='comment_listing' modified_on='20110609162442' name='コメント一覧' rebuild_me='1' type='comment_listing' current_revision='0'><text>{
    &quot;direction&quot;: &quot;&lt;mt:Var name=&quot;commentDirection&quot;&gt;&quot;,
    &quot;comments&quot;: &quot;&lt;mt:Comments sort_order=&quot;$commentDirection&quot;&gt;&lt;$mt:Include module=&quot;コメント詳細&quot; replace=&quot;\&quot;,&quot;\\&quot; replace=&apos;&quot;&apos;,&apos;\&quot;&apos; strip_linefeeds=&quot;1&quot;$&gt;&lt;/mt:Comments&gt;&quot;
}</text></template>
<template id='247' blog_id='7' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110609163816' modified_on='20110609163816' name='月別メニュー' rebuild_me='0' type='widgetset' current_revision='0' modulesets='208' cache_expire_type='0' include_with_ssi='0'><text>&lt;mt:include widget=&quot;月別アーカイブ&quot;&gt;</text></template>
<template id='248' blog_id='7' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110609163913' modified_by='1' modified_on='20140401100921' name='携帯用モジュール' rebuild_me='0' type='custom' current_revision='17' cache_expire_type='0' include_with_ssi='0' revision='17'><text>&lt;!-- URL --&gt;
&lt;!-- 携帯トップ --&gt;
&lt;mt:SetVarBlock name=&quot;KeitaiURL&quot;&gt;&lt;$mt:BlogURL$&gt;&lt;/mt:SetVarBlock&gt;

&lt;!-- ブロック定義 --&gt;
&lt;!-- メタ --&gt;
&lt;MTKeitaiBlockHeader class=&quot;meta&quot;&gt;&lt;meta name=&quot;description&quot; content=&quot;&quot; /&gt;
&lt;meta name=&quot;keywords&quot; content=&quot;声優,養成所,学校,スクール,日ナレ&quot; /&gt;
&lt;style type=&quot;text/css&quot;&gt;
&lt;![CDATA[
a:link{color:#005cb8;}
a:visited{color:#ad00b8;}
a:focus{color:;}
]]&gt;&lt;/MTKeitaiBlockHeader&gt;
&lt;MTKeitaiBlockFooter class=&quot;meta&quot;&gt;&lt;/style&gt;&lt;/MTKeitaiBlockFooter&gt;


&lt;!-- BODYタグ全体 --&gt;
&lt;MTKeitaiBlockHeader class=&quot;Body&quot;&gt;&lt;body style=&quot;background:#ffffff;color:#444444;&quot;&gt;
&lt;a name=&quot;pagetop&quot; id=&quot;pagetop&quot;&gt;&lt;/a&gt;
&lt;div style=&quot;font-size:x-small;&quot;&gt;&lt;/MTKeitaiBlockHeader&gt;
&lt;MTKeitaiBlockFooter class=&quot;Body&quot;&gt;&lt;/div&gt;
&lt;?php
  $googleAnalyticsImageUrl = googleAnalyticsGetImageUrl();
  echo &apos;&lt;img src=&quot;&apos; . $googleAnalyticsImageUrl . &apos;&quot; /&gt;&apos;;?&gt;
&lt;/body&gt;&lt;/MTKeitaiBlockFooter&gt;


&lt;!-- タイトル画像(メイン) --&gt;
&lt;MTKeitaiBlockHeader class=&quot;TitleMain&quot;&gt;&lt;div style=&quot;text-align:center; margin-bottom:10px;&quot;&gt;&lt;img src=&quot;&lt;$MTGetVar name=&quot;KeitaiURL&quot;$&gt;common/hd-tit.jpg&quot; width=&quot;240&quot; height=&quot;47&quot; alt=&quot;声優・ﾅﾚーﾀーなら 日本ﾅﾚーｼｮﾝ演技研究所&quot; /&gt;&lt;br /&gt;&lt;img src=&quot;&lt;$MTGetVar name=&quot;KeitaiURL&quot;$&gt;common/hd-main.jpg&quot; width=&quot;240&quot; height=&quot;79&quot; alt=&quot;働きながら、学びながら週1回の3時間ﾚｯｽﾝ!&quot; /&gt;&lt;br /&gt;&lt;img src=&quot;&lt;$MTGetVar name=&quot;KeitaiURL&quot;$&gt;common/hd-txt.gif&quot; width=&quot;240&quot; height=&quot;35&quot; alt=&quot;代々木校・お茶の水校・立川校・大宮校・柏校・横浜校・大阪校・神戸校・名古屋校&quot; /&gt;&lt;/div&gt;&lt;/MTKeitaiBlockHeader&gt;


&lt;!-- フッター・トップ --&gt;
&lt;MTKeitaiBlockHeader class=&quot;FooterTop&quot;&gt;&lt;div style=&quot;background:#c9e7d2; text-align:center; font-size:x-small; margin-top:10px; padding:5px 0;&quot;&gt;&lt;a href=&quot;tel:03-3372-5671&quot;&gt;TEL:03-3372-5671&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;company/index.php&quot;&gt;会社概要&lt;/a&gt;｜&lt;a href=&quot;privacy/index.php&quot;&gt;個人情報の取扱いについて&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;(C)日本ﾅﾚｰｼｮﾝ演技研究所&lt;/MTKeitaiBlockHeader&gt;&lt;MTKeitaiBlockFooter class=&quot;FooterTop&quot;&gt;&lt;/div&gt;&lt;/MTKeitaiBlockFooter&gt;


&lt;!-- フッター・下層 --&gt;
&lt;MTKeitaiBlockHeader class=&quot;FooterArchive&quot;&gt;&lt;div style=&quot;font-size:x-small; text-align:right; margin-top:5px;&quot;&gt;&lt;a href=&quot;#pagetop&quot;&gt;↑ﾍﾟｰｼﾞﾄｯﾌﾟへ&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;font-size:x-small; text-align:left; margin-top:5px;&quot;&gt;&lt;a href=&quot;/m/index.php&quot;&gt;←ﾄｯﾌﾟへ戻る&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;background:#c9e7d2; text-align:center; font-size:x-small; margin-top:10px; padding:5px 0;&quot;&gt;(C)日本ﾅﾚｰｼｮﾝ演技研究所&lt;/MTKeitaiBlockHeader&gt;&lt;MTKeitaiBlockFooter class=&quot;FooterArchive&quot;&gt;&lt;/div&gt;&lt;/MTKeitaiBlockFooter&gt;
</text></template>
<template id='249' blog_id='7' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110609164555' identifier='main_index' modified_by='1' modified_on='20121130175315' name='携帯用メインページ' outfile='index.php' rebuild_me='1' type='index' current_revision='27' cache_expire_type='0' include_with_ssi='0' revision='27'><text>&lt;?php
  // Copyright 2010 Google Inc. All Rights Reserved.

  $GA_ACCOUNT = &quot;MO-26631444-2&quot;;
  $GA_PIXEL = &quot;/ga.php&quot;;

  function googleAnalyticsGetImageUrl() {
    global $GA_ACCOUNT, $GA_PIXEL;
    $url = &quot;&quot;;
    $url .= $GA_PIXEL . &quot;?&quot;;
    $url .= &quot;utmac=&quot; . $GA_ACCOUNT;
    $url .= &quot;&amp;utmn=&quot; . rand(0, 0x7fffffff);
    $referer = $_SERVER[&quot;HTTP_REFERER&quot;];
    $query = $_SERVER[&quot;QUERY_STRING&quot;];
    $path = $_SERVER[&quot;REQUEST_URI&quot;];
    if (empty($referer)) {
      $referer = &quot;-&quot;;
    }
    $url .= &quot;&amp;utmr=&quot; . urlencode($referer);
    if (!empty($path)) {
      $url .= &quot;&amp;utmp=&quot; . urlencode($path);
    }
    $url .= &quot;&amp;guid=ON&quot;;
    return str_replace(&quot;&amp;&quot;, &quot;&amp;amp;&quot;, $url);
  }
?&gt;
&lt;MTKeitaiKit ixhtml=&quot;1&quot; xml_declaration=&quot;1&quot; doctype=&quot;1&quot;&gt;
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;声優・ﾅﾚーﾀーなら 日本ﾅﾚーｼｮﾝ演技研究所&lt;/title&gt;
&lt;MTKeitaiBlock class=&quot;meta&quot;&gt;&lt;/MTKeitaiBlock&gt;
&lt;/head&gt;

&lt;MTKeitaiBlock class=&quot;Body&quot;&gt;
&lt;MTKeitaiBlock class=&quot;TitleMain&quot;&gt;&lt;/MTKeitaiBlock&gt;

&lt;div style=&quot;background:#6cbd85; text-align:center;&quot;&gt;&lt;img src=&quot;img/top_tit01.jpg&quot; width=&quot;240&quot; height=&quot;20&quot; alt=&quot;最新情報&quot; /&gt;&lt;/div&gt;
&lt;div style=&quot;text-align:left;&quot;&gt;
&lt;table border=&quot;0&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; style=&quot;margin-top:5px;&quot;&gt;
&lt;mt:Entries lastn=&quot;5&quot;&gt;
&lt;tr&gt;
&lt;td valign=&quot;top&quot; style=&quot;font-size:x-small; width:10px;&quot;&gt;&lt;span style=&quot;color:#98d1a9;&quot;&gt;■&lt;/span&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; style=&quot;font-size:x-small; text-align:left;&quot;&gt;
&lt;mtifnonempty tag=&quot;urldata&quot;&gt;
&lt;a href=&quot;&lt;mt:urldata&gt;&quot;&gt;&lt;$mt:EntryTitle$&gt;&lt;/a&gt;
&lt;mtelse&gt;
&lt;a href=&quot;&lt;mt:EntryPermalink&gt;&quot;&gt;&lt;$mt:EntryTitle$&gt;&lt;/a&gt;
&lt;/mtelse&gt;  
&lt;/mtifnonempty&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/mt:Entries&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div style=&quot;text-align:right;&quot;&gt;&lt;span style=&quot;color:#ff6600;&quot;&gt;⇒&lt;/span&gt;&lt;a href=&quot;news/index.php&quot;&gt;もっと見る&lt;/a&gt;&lt;/div&gt;

&lt;div style=&quot;background:#ff6600; text-align:center; margin-top:10px; padding:3px 0 3px 0;&quot;&gt;&lt;span style=&quot;color:#ffffff;&quot;&gt;&amp;gt;&amp;gt; &lt;a href=&quot;https://nichinare.com/m/request/form.cgi&quot;&gt;資料請求【無料】&lt;/a&gt; &amp;lt;&amp;lt;&lt;/span&gt;&lt;/div&gt;

&lt;div style=&quot;background:#6cbd85; text-align:center; margin-top:10px;&quot;&gt;&lt;img src=&quot;img/top_tit02.jpg&quot; width=&quot;240&quot; height=&quot;20&quot; alt=&quot;日ﾅﾚについて&quot; /&gt;&lt;/div&gt;
&lt;div style=&quot;text-align:left;&quot;&gt;
&lt;table border=&quot;0&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; style=&quot;margin-top:5px;&quot;&gt;
&lt;tr&gt;
&lt;td valign=&quot;top&quot; style=&quot;font-size:x-small; text-align:left;&quot;&gt;&lt;span style=&quot;color:#ff6600;&quot;&gt;⇒&lt;/span&gt;&lt;a href=&quot;about/index.php&quot;&gt;日ﾅﾚの特色&lt;/a&gt;｜&lt;span style=&quot;color:#ff6600;&quot;&gt;⇒&lt;/span&gt;&lt;a href=&quot;about/step.php&quot;&gt;入所までのステップ&lt;/a&gt;｜&lt;span style=&quot;color:#ff6600;&quot;&gt;⇒&lt;/span&gt;&lt;a href=&quot;about/studio.php&quot;&gt;ﾚｯｽﾝｽﾀｼﾞｵ&lt;/a&gt;｜&lt;span style=&quot;color:#ff6600;&quot;&gt;⇒&lt;/span&gt;&lt;a href=&quot;about/lecturer.php&quot;&gt;講師一覧&lt;/a&gt;｜&lt;span style=&quot;color:#ff6600;&quot;&gt;⇒&lt;/span&gt;&lt;a href=&quot;about/native.php&quot;&gt;主な出身者&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;div style=&quot;background:#6cbd85; text-align:center; margin-top:10px;&quot;&gt;&lt;img src=&quot;img/top_tit03.jpg&quot; width=&quot;240&quot; height=&quot;20&quot; alt=&quot;ｺｰｽ紹介&quot; /&gt;&lt;/div&gt;
&lt;div style=&quot;text-align:left;&quot;&gt;
&lt;table border=&quot;0&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; style=&quot;margin-top:5px;&quot;&gt;
&lt;tr&gt;
&lt;td valign=&quot;top&quot; style=&quot;font-size:x-small; text-align:left;&quot;&gt;&lt;span style=&quot;color:#ff6600;&quot;&gt;⇒&lt;/span&gt;&lt;a href=&quot;course/index.php&quot;&gt;週1ｸﾗｽ&lt;/a&gt;｜&lt;span style=&quot;color:#ff6600;&quot;&gt;⇒&lt;/span&gt;&lt;a href=&quot;course/threedays.php&quot;&gt;週3ｸﾗｽ&lt;/a&gt;｜&lt;span style=&quot;color:#ff6600;&quot;&gt;⇒&lt;/span&gt;&lt;a href=&quot;course/jr.php&quot;&gt;ｼﾞｭﾆｱ声優ｸﾗｽ&lt;/a&gt;｜&lt;span style=&quot;color:#ff6600;&quot;&gt;⇒&lt;/span&gt;&lt;a href=&quot;course/narrater.php&quot;&gt;ﾅﾚｰﾀｰｾﾐﾅｰ&lt;/a&gt;｜&lt;span style=&quot;color:#ff6600;&quot;&gt;⇒&lt;/span&gt;&lt;a href=&quot;course/starting.php&quot;&gt;声優ｽﾀｰﾃｨﾝｸﾞｾﾐﾅｰ&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;div style=&quot;background:#6cbd85; text-align:center; margin-top:10px;&quot;&gt;&lt;img src=&quot;img/top_tit04.jpg&quot; width=&quot;240&quot; height=&quot;20&quot; alt=&quot;入所方法/面接日程 &quot; /&gt;&lt;/div&gt;
&lt;div style=&quot;text-align:left;&quot;&gt;
&lt;table border=&quot;0&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; style=&quot;margin-top:5px;&quot;&gt;
&lt;tr&gt;
&lt;td valign=&quot;top&quot; style=&quot;font-size:x-small; text-align:left;&quot;&gt;&lt;span style=&quot;color:#ff6600;&quot;&gt;⇒&lt;/span&gt;&lt;a href=&quot;application/index.php&quot;&gt;週1、週3、ﾅﾚｰﾀｰ&lt;/a&gt;｜&lt;span style=&quot;color:#ff6600;&quot;&gt;⇒&lt;/span&gt;&lt;a href=&quot;application/apply-jr.php&quot;&gt;ｼﾞｭﾆｱ声優ｸﾗｽ&lt;/a&gt;｜&lt;span style=&quot;color:#ff6600;&quot;&gt;⇒&lt;/span&gt;&lt;a href=&quot;application/apply-jr.php#02&quot;&gt;声優ｽﾀｰﾃｨﾝｸﾞｾﾐﾅｰ&lt;/a&gt;｜&lt;span style=&quot;color:#ff6600;&quot;&gt;⇒&lt;/span&gt;&lt;a href=&quot;application/tuition.php&quot;&gt;入所金・受講料等一覧&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;div style=&quot;text-align:left; margin:5px;&quot;&gt;&lt;img src=&quot;common/dotted-line.jpg&quot; width=&quot;222&quot; height=&quot;1&quot; alt=&quot;&quot; /&gt;&lt;/div&gt;

&lt;div style=&quot;text-align:left;&quot;&gt;
&lt;table border=&quot;0&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; style=&quot;margin-top:5px;&quot;&gt;
&lt;tr&gt;
&lt;td valign=&quot;top&quot; style=&quot;font-size:x-small; width:10px;&quot;&gt;&lt;span style=&quot;color:#ff6600;&quot;&gt;⇒&lt;/span&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; style=&quot;font-size:x-small; text-align:left;&quot;&gt;&lt;a href=&quot;https://nichinare.com/m/request/form.cgi&quot;&gt;資料請求【無料】&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;div style=&quot;text-align:left; margin:5px;&quot;&gt;&lt;img src=&quot;common/dotted-line.jpg&quot; width=&quot;222&quot; height=&quot;1&quot; alt=&quot;&quot; /&gt;&lt;/div&gt;

&lt;div style=&quot;text-align:left;&quot;&gt;&lt;a href=&quot;https://nichinare.com/m/request/form.cgi&quot;&gt;&lt;img src=&quot;img/bnr_shiryo.jpg&quot; alt=&quot;資料請求【無料】&quot; width=&quot;220&quot; height=&quot;52&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/div&gt;

&lt;div style=&quot;text-align:left; margin:5px;&quot;&gt;&lt;img src=&quot;common/dotted-line.jpg&quot; width=&quot;222&quot; height=&quot;1&quot; alt=&quot;&quot; /&gt;&lt;/div&gt;

&lt;div style=&quot;text-align:left;&quot;&gt;&lt;a href=&quot;free/index.php&quot;&gt;&lt;img src=&quot;img/top_bnr.jpg&quot; alt=&quot;無料体験ﾚｯｽﾝ&quot; width=&quot;220&quot; height=&quot;52&quot; border=&quot;0&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div style=&quot;text-align:left;&quot;&gt;
&lt;table border=&quot;0&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; style=&quot;margin-top:5px;&quot;&gt;
&lt;tr&gt;
&lt;td valign=&quot;top&quot; style=&quot;font-size:x-small; width:10px;&quot;&gt;&lt;span style=&quot;color:#ff6600;&quot;&gt;⇒&lt;/span&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; style=&quot;font-size:x-small; text-align:left;&quot;&gt;&lt;a href=&quot;lesson/index.php&quot;&gt;ﾚｯｽﾝ見学&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign=&quot;top&quot; style=&quot;font-size:x-small;&quot;&gt;└&lt;/td&gt;
&lt;td valign=&quot;top&quot; style=&quot;font-size:x-small; text-align:left;&quot;&gt;日ﾅﾚで通常行なっているﾚｯｽﾝを見学いただけます&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;table border=&quot;0&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; style=&quot;margin-top:5px;&quot;&gt;
&lt;tr&gt;
&lt;td valign=&quot;top&quot; style=&quot;font-size:x-small; width:10px;&quot;&gt;&lt;span style=&quot;color:#ff6600;&quot;&gt;⇒&lt;/span&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; style=&quot;font-size:x-small; text-align:left;&quot;&gt;&lt;a href=&quot;faq/index.php&quot;&gt;Q&amp;amp;A&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign=&quot;top&quot; style=&quot;font-size:x-small;&quot;&gt;└&lt;/td&gt;
&lt;td valign=&quot;top&quot; style=&quot;font-size:x-small; text-align:left;&quot;&gt;よくあるご質問をQ&amp;amp;Aにまとめました。&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;table border=&quot;0&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; style=&quot;margin-top:5px;&quot;&gt;
&lt;tr&gt;
&lt;td valign=&quot;top&quot; style=&quot;font-size:x-small; width:10px;&quot;&gt;&lt;span style=&quot;color:#ff6600;&quot;&gt;⇒&lt;/span&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; style=&quot;font-size:x-small; text-align:left;&quot;&gt;&lt;a href=&quot;contact/index.php&quot;&gt;お問い合わせ&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign=&quot;top&quot; style=&quot;font-size:x-small;&quot;&gt;└&lt;/td&gt;
&lt;td valign=&quot;top&quot; style=&quot;font-size:x-small; text-align:left;&quot;&gt;お気軽にお問い合わせください。&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;table border=&quot;0&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; style=&quot;margin-top:5px;&quot;&gt;
&lt;tr&gt;
&lt;td valign=&quot;top&quot; style=&quot;font-size:x-small; width:10px;&quot;&gt;&lt;span style=&quot;color:#ff6600;&quot;&gt;⇒&lt;/span&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; style=&quot;font-size:x-small; text-align:left;&quot;&gt;&lt;a href=&quot;group/index.php&quot;&gt;ｸﾞﾙｰﾌﾟﾌﾟﾛﾀﾞｸｼｮﾝ&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td valign=&quot;top&quot; style=&quot;font-size:x-small;&quot;&gt;└&lt;/td&gt;
&lt;td valign=&quot;top&quot; style=&quot;font-size:x-small; text-align:left;&quot;&gt;日ﾅﾚのｸﾞﾙｰﾌﾟﾌﾟﾛﾀﾞｸｼｮﾝのご紹介です。&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;MTKeitaiBlock class=&quot;FooterTop&quot;&gt;&lt;/MTKeitaiBlock&gt;
&lt;/MTKeitaiBlock&gt;
&lt;/html&gt;
&lt;/MTKeitaiKit&gt;</text></template>
<template id='250' blog_id='7' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110609164824' modified_by='1' modified_on='20120730134603' name='最新情報トップページ' outfile='news/index.php' rebuild_me='1' type='index' current_revision='5' cache_expire_type='0' include_with_ssi='0' revision='5'><text>&lt;?php
  // Copyright 2010 Google Inc. All Rights Reserved.

  $GA_ACCOUNT = &quot;MO-26631444-2&quot;;
  $GA_PIXEL = &quot;/ga.php&quot;;

  function googleAnalyticsGetImageUrl() {
    global $GA_ACCOUNT, $GA_PIXEL;
    $url = &quot;&quot;;
    $url .= $GA_PIXEL . &quot;?&quot;;
    $url .= &quot;utmac=&quot; . $GA_ACCOUNT;
    $url .= &quot;&amp;utmn=&quot; . rand(0, 0x7fffffff);
    $referer = $_SERVER[&quot;HTTP_REFERER&quot;];
    $query = $_SERVER[&quot;QUERY_STRING&quot;];
    $path = $_SERVER[&quot;REQUEST_URI&quot;];
    if (empty($referer)) {
      $referer = &quot;-&quot;;
    }
    $url .= &quot;&amp;utmr=&quot; . urlencode($referer);
    if (!empty($path)) {
      $url .= &quot;&amp;utmp=&quot; . urlencode($path);
    }
    $url .= &quot;&amp;guid=ON&quot;;
    return str_replace(&quot;&amp;&quot;, &quot;&amp;amp;&quot;, $url);
  }

  // リクエストクエリー文字列取得
  function setQueryString($redirectURL) {
    $queryArray = array();
    $queryStringArray = array();
    if($_SERVER[&apos;REQUEST_METHOD&apos;] == &apos;POST&apos;) {
      $queryArray = $_POST;
    } else {
      $queryArray = $_GET;
    }
    foreach($queryArray as $key =&gt; $value) {
      $keyChecked = stripslashes(htmlspecialchars($key, ENT_QUOTES));
      $valueChecked = stripslashes(htmlspecialchars($value, ENT_QUOTES));
      $queryStringArray[] = $keyChecked.&apos;=&apos;.$valueChecked;
    }
    $queryString = implode(&apos;&amp;&apos;, $queryStringArray);
    if(strlen($queryString) &gt; 0) {
      $linkTag = &apos;&lt;a href=&quot;&apos;.$redirectURL.&apos;?&apos;.$queryString.&apos;&quot;&gt;&apos;;
    } else {
      $linkTag = &apos;&lt;a href=&quot;&apos;.$redirectURL.&apos;&quot;&gt;&apos;;
    }
    return $linkTag;
  }
?&gt;

&lt;MTKeitaiKit ixhtml=&quot;1&quot; xml_declaration=&quot;1&quot; doctype=&quot;1&quot;&gt;
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;声優・ﾅﾚーﾀーなら 日本ﾅﾚーｼｮﾝ演技研究所&lt;/title&gt;
&lt;MTKeitaiBlock class=&quot;meta&quot;&gt;&lt;/MTKeitaiBlock&gt;
&lt;/head&gt;

&lt;MTKeitaiBlock class=&quot;Body&quot;&gt;
&lt;MTKeitaiBlock class=&quot;TitleMain&quot;&gt;&lt;/MTKeitaiBlock&gt;
&lt;div style=&quot;background:#6cbd85; text-align:center;&quot;&gt;&lt;img src=&quot;/m/news/img/news_tit.jpg&quot; width=&quot;240&quot; height=&quot;20&quot; alt=&quot;最新情報&quot; /&gt;&lt;/div&gt;

&lt;div style=&quot;text-align:left;&quot;&gt;
&lt;table border=&quot;0&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; style=&quot;margin-top:5px;&quot;&gt;
&lt;mt:Entries&gt;
&lt;tr&gt;
&lt;td valign=&quot;top&quot; style=&quot;font-size:x-small; width:10px;&quot;&gt;&lt;span style=&quot;color:#98d1a9;&quot;&gt;■&lt;/span&gt;&lt;/td&gt;
&lt;td valign=&quot;top&quot; style=&quot;font-size:x-small; text-align:left;&quot;&gt;
&lt;mtifnonempty tag=&quot;urldata&quot;&gt;
&lt;?php print setQueryString(&apos;&lt;mt:urldata&gt;&apos;); ?&gt;&lt;$mt:EntryTitle$&gt;&lt;/a&gt;
&lt;mtelse&gt;
&lt;?php print setQueryString(&apos;&lt;mt:EntryPermalink&gt;&apos;); ?&gt;&lt;$mt:EntryTitle$&gt;&lt;/a&gt;
&lt;/mtelse&gt;  
&lt;/mtifnonempty&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/mt:Entries&gt;
&lt;/table&gt;

&lt;$mt:widgetset name=&quot;月別メニュー&quot;$&gt;
&lt;/div&gt;

&lt;MTKeitaiBlock class=&quot;FooterArchive&quot;&gt;&lt;/MTKeitaiBlock&gt;
&lt;/MTKeitaiBlock&gt;
&lt;/html&gt;
&lt;/MTKeitaiKit&gt;</text></template>
<template id='253' blog_id='8' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110610125207' identifier='comment_preview' modified_on='20110610125207' name='コメントプレビュー' rebuild_me='1' type='comment_preview' current_revision='0'><text>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;
    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; id=&quot;sixapart-standard&quot;&gt;
&lt;head&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
    /* &lt;![CDATA[ */
    var user = &lt;$mt:UserSessionState$&gt;;
    var is_preview = true;
    /* ]]&gt; */
    &lt;/script&gt;
    &lt;$mt:Include module=&quot;HTMLヘッダー&quot;$&gt;
    &lt;title&gt;&lt;$mt:BlogName encode_html=&quot;1&quot;$&gt;: コメントのプレビュー&lt;/title&gt;
&lt;/head&gt;
&lt;body id=&quot;&lt;$mt:BlogThemeID$&gt;&quot; class=&quot;mt-comment-preview &lt;$mt:Var name=&quot;page_layout&quot;$&gt;&quot; onload=&quot;mtEntryOnLoad()&quot; onunload=&quot;mtEntryOnUnload()&quot;&gt;
    &lt;div id=&quot;container&quot;&gt;
        &lt;div id=&quot;container-inner&quot;&gt;


            &lt;$mt:Include module=&quot;バナーヘッダー&quot;$&gt;


            &lt;div id=&quot;content&quot;&gt;
                &lt;div id=&quot;content-inner&quot;&gt;


                    &lt;div id=&quot;alpha&quot;&gt;
                        &lt;div id=&quot;alpha-inner&quot;&gt;


                            &lt;h1 id=&quot;page-title&quot;&gt;&lt;$mt:Var name=&quot;page_title&quot;$&gt;&lt;/h1&gt;


&lt;mt:Ignore&gt;&lt;!-- Comment Preview --&gt;&lt;/mt:Ignore&gt;
                            &lt;div class=&quot;comment&quot; id=&quot;comment-&lt;$mt:CommentID$&gt;&quot;&gt;
                                &lt;div class=&quot;inner&quot;&gt;
                                    &lt;div class=&quot;comment-header&quot;&gt;
                                        &lt;div class=&quot;asset-meta&quot;&gt;
                                            &lt;span class=&quot;byline&quot;&gt;
                                                &lt;$mt:CommentAuthorIdentity$&gt;
    &lt;mt:IfCommentParent&gt;
                                                &lt;span class=&quot;vcard author&quot;&gt;&lt;$mt:CommentAuthorLink$&gt;&lt;/span&gt;から&lt;a href=&quot;&lt;mt:CommentParent&gt;&lt;$mt:CommentLink$&gt;&lt;/mt:CommentParent&gt;&quot;&gt;&lt;mt:CommentParent&gt;&lt;$mt:CommentAuthor$&gt;&lt;/mt:CommentParent&gt;&lt;/a&gt;への返信
    &lt;mt:Else&gt;
                                                &lt;span class=&quot;vcard author&quot;&gt;&lt;$mt:CommentAuthorLink$&gt;&lt;/span&gt;
    &lt;/mt:IfCommentParent&gt;
                                                | &lt;a href=&quot;&lt;$mt:CommentLink$&gt;&quot;&gt;&lt;abbr class=&quot;published&quot; title=&quot;&lt;$mt:CommentDate format_name=&quot;iso8601&quot;$&gt;&quot;&gt;&lt;$mt:CommentDate$&gt;&lt;/abbr&gt;&lt;/a&gt;
                                            &lt;/span&gt;
                                        &lt;/div&gt;
                                    &lt;/div&gt;
                                    &lt;div class=&quot;comment-content&quot;&gt;
                                        &lt;$mt:CommentBody$&gt;
                                    &lt;/div&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;


&lt;mt:Ignore&gt;&lt;!-- Comment Form --&gt;&lt;/mt:Ignore&gt;
                            &lt;div class=&quot;comments-open&quot; id=&quot;comments-open&quot;&gt;
                                &lt;h2 class=&quot;comments-open-header&quot;&gt;コメントする&lt;/h2&gt;
                                &lt;div class=&quot;comments-open-content&quot;&gt;
                                    &lt;div id=&quot;comment-greeting&quot;&gt;&lt;/div&gt;
                                    &lt;form method=&quot;post&quot; action=&quot;&lt;$mt:CGIPath$&gt;&lt;$mt:CommentScript$&gt;&quot; name=&quot;comments_form&quot; id=&quot;comments-form&quot; onsubmit=&quot;return mtCommentOnSubmit(this)&quot;&gt;
                                        &lt;input type=&quot;hidden&quot; name=&quot;static&quot; value=&quot;1&quot; /&gt;
                                        &lt;input type=&quot;hidden&quot; name=&quot;armor&quot; value=&quot;1&quot; /&gt;
                                        &lt;input type=&quot;hidden&quot; name=&quot;preview&quot; value=&quot;&quot; /&gt;
                                        &lt;input type=&quot;hidden&quot; name=&quot;entry_id&quot; value=&quot;&lt;$mt:EntryID$&gt;&quot; /&gt;
                                        &lt;input type=&quot;hidden&quot; name=&quot;__lang&quot; value=&quot;&lt;$mt:BlogLanguage$&gt;&quot; /&gt;
&lt;mt:IfCommentParent&gt;
                                            &lt;input type=&quot;hidden&quot; name=&quot;parent_id&quot; value=&quot;&lt;$mt:CommentParentID escape=&quot;html&quot;$&gt;&quot; id=&quot;comment-parent-id&quot;&gt;
&lt;/mt:IfCommentParent&gt;
                                        &lt;div id=&quot;comments-open-data&quot;&gt;
                                            &lt;div id=&quot;comment-form-name&quot;&gt;
                                                &lt;label for=&quot;comment-author&quot;&gt;名前&lt;/label&gt;
                                                &lt;input id=&quot;comment-author&quot; name=&quot;author&quot; size=&quot;30&quot; value=&quot;&lt;$mt:CommentAuthor encode_html=&quot;1&quot;$&gt;&quot; onfocus=&quot;mtShowCaptcha()&quot; /&gt;
                                            &lt;/div&gt;
                                            &lt;div id=&quot;comment-form-email&quot;&gt;
                                                &lt;label for=&quot;comment-email&quot;&gt;電子メール&lt;/label&gt;
                                                &lt;input id=&quot;comment-email&quot; name=&quot;email&quot; size=&quot;30&quot; value=&quot;&lt;$mt:CommentEmail encode_html=&quot;1&quot;$&gt;&quot; onfocus=&quot;mtShowCaptcha()&quot; /&gt;
                                            &lt;/div&gt;
                                            &lt;div id=&quot;comment-form-url&quot;&gt;
                                                &lt;label for=&quot;comment-url&quot;&gt;URL&lt;/label&gt;
                                                &lt;input id=&quot;comment-url&quot; name=&quot;url&quot; size=&quot;30&quot; value=&quot;&lt;$mt:CommentURL encode_html=&quot;1&quot;$&gt;&quot; onfocus=&quot;mtShowCaptcha()&quot; /&gt;
                                            &lt;/div&gt;
                                        &lt;/div&gt;
&lt;mt:IfCommentParent&gt;
                                        &lt;div id=&quot;comment-form-reply&quot;&gt;
                                            &lt;input type=&quot;checkbox&quot; id=&quot;comment-reply&quot; name=&quot;comment_reply&quot; value=&quot;&lt;$mt:CommentParentID escape=&quot;html&quot;$&gt;&quot; checked=&quot;checked&quot; onclick=&quot;mtSetCommentParentID()&quot; /&gt;
                                            &lt;label for=&quot;comment-reply&quot; id=&quot;comment-reply-label&quot;&gt;&lt;mt:CommentParent&gt;&lt;$mt:CommentAuthor$&gt;&lt;/mt:CommentParent&gt;からのコメントに返信&lt;/label&gt;
                                        &lt;/div&gt;
&lt;/mt:IfCommentParent&gt;
                                        &lt;div id=&quot;comments-open-text&quot;&gt;
                                            &lt;label for=&quot;comment-text&quot;&gt;コメント &lt;mt:IfAllowCommentHTML&gt;(スタイル用のHTMLタグを使えます)&lt;/mt:IfAllowCommentHTML&gt;&lt;/label&gt;
                                            &lt;textarea id=&quot;comment-text&quot; name=&quot;text&quot; rows=&quot;15&quot; cols=&quot;50&quot; onfocus=&quot;mtShowCaptcha()&quot;&gt;&lt;$mt:CommentBody autolink=&quot;0&quot; sanitize=&quot;0&quot; convert_breaks=&quot;0&quot; encode_html=&quot;1&quot;$&gt;&lt;/textarea&gt;
                                        &lt;/div&gt;
                                        &lt;div id=&quot;comments-open-captcha&quot;&gt;&lt;/div&gt;
                                        &lt;div id=&quot;comments-open-footer&quot;&gt;
                                            &lt;input type=&quot;submit&quot; accesskey=&quot;v&quot; name=&quot;preview_button&quot; id=&quot;comment-preview&quot; value=&quot;プレビュー&quot; onclick=&quot;this.form.preview.value=&apos;1&apos;;&quot; /&gt;
                                            &lt;input type=&quot;submit&quot; accesskey=&quot;s&quot; name=&quot;post&quot; id=&quot;comment-submit&quot; value=&quot;投稿&quot; /&gt;
                                            &lt;input type=&quot;button&quot; name=&quot;cancel&quot; id=&quot;comment-cancel&quot; value=&quot;キャンセル&quot; onclick=&quot;window.location=&apos;&lt;$mt:EntryPermalink$&gt;&apos;&quot; /&gt;
                                        &lt;/div&gt;
                                    &lt;/form&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;


                    &lt;$mt:Include module=&quot;サイドバー&quot;$&gt;


                &lt;/div&gt;
            &lt;/div&gt;


            &lt;$mt:Include module=&quot;バナーフッター&quot;$&gt;


        &lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</text></template>
<template id='255' blog_id='8' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110610125207' identifier='search_results' modified_on='20110610125207' name='検索結果' rebuild_me='1' type='search_results' current_revision='0'><text>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;
    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; id=&quot;sixapart-standard&quot;&gt;
&lt;head&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
    /* &lt;![CDATA[ */
    var user = &lt;$mt:UserSessionState$&gt;;
    /* ]]&gt; */
    &lt;/script&gt;
    &lt;$mt:Include module=&quot;HTMLヘッダー&quot;$&gt;
    &lt;title&gt;&lt;$mt:BlogName encode_html=&quot;1&quot;$&gt;: 検索結果&lt;/title&gt;
    &lt;mt:Ignore&gt;Below Javascript adds ajax search capability&lt;/mt:Ignore&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
    /* &lt;![CDATA[ */
    &lt;mt:IfMoreResults&gt;
    function getResults(page) {
        page = parseInt(page);
        if (timer) window.clearTimeout(timer);
        var xh = mtGetXmlHttp();
        if (!xh) return false;
        var res = results[page];
        if (!res) return;
        var url = res[&apos;next_url&apos;];
        if (!url) return;

        xh.open(&apos;GET&apos;, url + &apos;&amp;format=js&apos;, true);
        xh.onreadystatechange = function() {
            if ( xh.readyState == 4 ) {
                if ( xh.status &amp;&amp; ( xh.status != 200 ) ) {
                    // error - ignore
                } else {
                    try {
                        var page_results = eval(&quot;(&quot; + xh.responseText + &quot;)&quot;);
                        if ( page_results[&apos;error&apos;] == null )
                            results[page + 1] = page_results[&apos;result&apos;];
                    } catch (e) {
                    }
                }
            }
        };
        xh.send(null);
    }

    function swapContent(direction) {
        if ( direction == undefined ) direction = 1;
        var page_span = document.getElementById(&apos;current-page&apos;);
        if (!page_span) return true;
        var next_page = direction + parseInt(page_span.innerHTML);
        var res = results[next_page];
        if (!res) return true;
        var content = res[&apos;content&apos;];
        if (!content) return true;
        var div = document.getElementById(&apos;search-results&apos;);
        if (!div) return true;
        div.innerHTML = content;
        timer = window.setTimeout(&quot;getResults(&quot; + next_page + &quot;)&quot;, 1*1000);
        window.scroll(0, 0);
        return false;
    }
    &lt;mt:Else&gt;&lt;mt:IfPreviousResults&gt;
    function swapContent(direction) {
        return true;
    }&lt;/mt:IfPreviousResults&gt;
    &lt;/mt:IfMoreResults&gt;
    /* ]]&gt; */
    &lt;/script&gt;
&lt;/head&gt;
&lt;body id=&quot;&lt;$mt:BlogThemeID$&gt;&quot; class=&quot;mt-search-results &lt;$mt:Var name=&quot;page_layout&quot;$&gt;&quot;&gt;
    &lt;div id=&quot;container&quot;&gt;
        &lt;div id=&quot;container-inner&quot;&gt;


            &lt;$mt:Include module=&quot;バナーヘッダー&quot;$&gt;


            &lt;div id=&quot;content&quot;&gt;
                &lt;div id=&quot;content-inner&quot;&gt;


                    &lt;div id=&quot;alpha&quot;&gt;
                        &lt;div id=&quot;alpha-inner&quot;&gt;

&lt;mt:Ignore&gt;&lt;!--
    Below is the block to show search results.
    This makes an independent block to support
    Ajax-based background retrieval of the next search results.
--&gt;&lt;/mt:Ignore&gt;
&lt;mt:SetVarTemplate id=&quot;search_results&quot; name=&quot;search_results&quot;&gt;  
&lt;mt:SearchResults&gt;
    &lt;mt:SearchResultsHeader&gt;
                            &lt;div id=&quot;search-results&quot;&gt;
                                &lt;span id=&quot;current-page&quot; class=&quot;hidden&quot;&gt;&lt;$mt:CurrentPage$&gt;&lt;/span&gt;
                                &lt;h1 id=&quot;page-title&quot; class=&quot;search-results-header&quot;&gt;
        &lt;mt:IfStraightSearch&gt;
                                    「&lt;$mt:SearchString$&gt;」と一致するもの
        &lt;/mt:IfStraightSearch&gt;
        &lt;mt:IfTagSearch&gt;
                                    タグ「&lt;$mt:SearchString$&gt;」が付けられているもの
        &lt;/mt:IfTagSearch&gt;
                                &lt;/h1&gt;
                                &lt;div class=&quot;search-results-container autopagerize_page_element&quot;&gt;
    &lt;/mt:SearchResultsHeader&gt;
                                    &lt;$mt:Include module=&quot;ブログ記事の概要&quot; hide_counts=&quot;1&quot;$&gt;
    &lt;mt:SearchResultsFooter&gt;
                                &lt;/div&gt;&lt;div class=&quot;autopagerize_insert_before&quot;&gt;&lt;/div&gt;

    &lt;mt:Ignore&gt;&lt;!-- Used with the ajax search capability of the new search class --&gt;&lt;/mt:Ignore&gt;
                                &lt;div class=&quot;content-nav&quot;&gt;
                                    &lt;mt:IfPreviousResults&gt;&lt;a href=&quot;&lt;$mt:PreviousLink$&gt;&quot; rel=&quot;prev&quot; onclick=&quot;return swapContent(-1);&quot;&gt;&amp;lt; 前&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;/mt:IfPreviousResults&gt;&lt;mt:PagerBlock&gt;&lt;mt:IfCurrentPage&gt;&lt;$mt:Var name=&quot;__value__&quot;$&gt;&lt;mt:Else&gt;&lt;a href=&quot;&lt;$mt:PagerLink$&gt;&quot;&gt;&lt;$mt:Var name=&quot;__value__&quot;$&gt;&lt;/a&gt;&lt;/mt:IfCurrentPage&gt;&lt;mt:Unless name=&quot;__last__&quot;&gt;&amp;nbsp;&lt;/mt:Unless&gt;&lt;/mt:PagerBlock&gt;&lt;mt:IfMoreResults&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;&lt;$mt:NextLink$&gt;&quot; rel=&quot;next&quot; onclick=&quot;return swapContent();&quot;&gt;次 &amp;gt;&lt;/a&gt;&lt;/mt:IfMoreResults&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;
    &lt;/mt:SearchResultsFooter&gt;
&lt;/mt:SearchResults&gt;
&lt;/mt:SetVarTemplate&gt;
&lt;mt:Ignore&gt;&lt;!-- Display search results constructed in the block above --&gt;&lt;/mt:Ignore&gt;
&lt;$mt:Var name=&quot;search_results&quot;$&gt;


&lt;mt:Ignore&gt;&lt;!-- Display no results message --&gt;&lt;/mt:Ignore&gt;
&lt;mt:NoSearchResults&gt;
                            &lt;h1 id=&quot;page-title&quot; class=&quot;search-results-header&quot;&gt;
    &lt;mt:IfStraightSearch&gt;
                                「&lt;$mt:SearchString$&gt;」と一致するもの
    &lt;/mt:IfStraightSearch&gt;
    &lt;mt:IfTagSearch&gt;
                                タグ「&lt;$mt:SearchString$&gt;」が付けられているもの
    &lt;/mt:IfTagSearch&gt;
                            &lt;/h1&gt;
                            &lt;p&gt;「&lt;$mt:SearchString$&gt;」と一致する結果は見つかりませんでした。&lt;/p&gt;
&lt;/mt:NoSearchResults&gt;


&lt;mt:Ignore&gt;&lt;!-- Display instructions for searching if search script was accessed without a query --&gt;&lt;/mt:Ignore&gt;
&lt;mt:NoSearch&gt;
                            &lt;h1 id=&quot;page-title&quot; class=&quot;search-results-header&quot;&gt;例&lt;/h1&gt;
                            &lt;p&gt;すべての単語が順序に関係なく検索されます。フレーズで検索したいときは引用符で囲んでください。&lt;/p&gt;
                            &lt;blockquote&gt;
                                &lt;p&gt;&lt;code&gt;&quot;movable type&quot;&lt;/code&gt;&lt;/p&gt;
                            &lt;/blockquote&gt;
                            &lt;p&gt;AND、OR、NOTを入れることで論理検索を行うこともできます。&lt;/p&gt;
                            &lt;blockquote&gt;
                                &lt;p&gt;&lt;code&gt;個人 OR 出版&lt;/code&gt;&lt;/p&gt;
                                &lt;p&gt;&lt;code&gt;個人 NOT 出版&lt;/code&gt;&lt;/p&gt;
                            &lt;/blockquote&gt;
&lt;/mt:NoSearch&gt;

&lt;mt:Ignore&gt;&lt;!-- Used with the ajax search capability of the new search class --&gt;&lt;/mt:Ignore&gt;
&lt;mt:IfMoreResults&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
&lt;!--
var div = document.getElementById(&apos;search-results&apos;);
var results = {
    &apos;&lt;$mt:CurrentPage$&gt;&apos;: {
        &apos;content&apos;: div.innerHTML,
        &apos;next_url&apos;: &apos;&lt;$mt:NextLink$&gt;&apos;
    }
};
var timer = window.setTimeout(&quot;getResults(&quot; + &lt;$mt:CurrentPage$&gt; + &quot;)&quot;, 1*1000);
//--&gt;
&lt;/script&gt;
&lt;/mt:IfMoreResults&gt;


                        &lt;/div&gt;
                    &lt;/div&gt;

                    &lt;$mt:Include module=&quot;サイドバー&quot;$&gt;


                &lt;/div&gt;
            &lt;/div&gt;


            &lt;$mt:Include module=&quot;バナーフッター&quot;$&gt;


        &lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</text></template>
<template id='264' blog_id='8' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110610125207' identifier='popup_image' modified_on='20110610125207' name='ポップアップ画像' rebuild_me='1' type='popup_image' current_revision='0'><text>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; id=&quot;sixapart-standard&quot;&gt;
&lt;head&gt;&lt;title&gt;&lt;$mt:ImageURL$&gt;&lt;/title&gt;&lt;/head&gt;
&lt;body id=&quot;uploaded-image-popup&quot; class=&quot;popup&quot; style=&quot;margin: 0;padding: 0;&quot;&gt;
    &lt;img src=&quot;&lt;$mt:ImageURL$&gt;&quot; width=&quot;&lt;$mt:ImageWidth$&gt;&quot; height=&quot;&lt;$mt:ImageHeight$&gt;&quot; alt=&quot;&lt;$mt:ImageURL$&gt;&quot; style=&quot;margin: 0;padding: 0;border: 0;&quot; /&gt;
&lt;/body&gt;
&lt;/html&gt;
</text></template>
<template id='283' blog_id='8' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110610125207' identifier='comment_response' modified_on='20110610125207' name='コメント完了' rebuild_me='1' type='comment_response' current_revision='0'><text>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;
    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; id=&quot;sixapart-standard&quot;&gt;
&lt;head&gt;


&lt;mt:If name=&quot;comment_confirmation&quot;&gt;
    &lt;mt:Ignore&gt;&lt;!-- Success message when comment has been submitted --&gt;&lt;/mt:Ignore&gt;
    &lt;$mt:Var name=&quot;page_title&quot; value=&quot;確認&quot;$&gt;
    &lt;$mt:Var name=&quot;message&quot; value=&quot;&lt;p&gt;コメントを投稿しました。&lt;/p&gt;&quot;$&gt;
&lt;mt:Else name=&quot;comment_pending&quot;&gt;
    &lt;mt:Ignore&gt;&lt;!-- Pending message when comment is being held for review --&gt;&lt;/mt:Ignore&gt;
    &lt;$mt:Var name=&quot;page_title&quot; value=&quot;コメントありがとうございます。&quot;$&gt;
    &lt;$mt:Var name=&quot;message&quot; value=&quot;&lt;p&gt;コメントは現在承認されるまで公開を保留されています。&lt;/p&gt;&quot;$&gt;
&lt;mt:Else name=&quot;comment_error&quot;&gt;
    &lt;mt:Ignore&gt;&lt;!-- Error message when comment submission fails --&gt;&lt;/mt:Ignore&gt;
    &lt;$mt:Var name=&quot;page_title&quot; value=&quot;コメント投稿エラー&quot;$&gt;
    &lt;mt:SetVarBlock name=&quot;message&quot;&gt;&lt;p&gt;コメントを投稿できませんでした。エラー: &lt;$mt:ErrorMessage$&gt;&lt;/p&gt;&lt;/mt:SetVarBlock&gt;
&lt;/mt:If&gt;


    &lt;$mt:Include module=&quot;HTMLヘッダー&quot;$&gt;
    &lt;title&gt;&lt;$mt:BlogName encode_html=&quot;1&quot;$&gt;: &lt;$mt:Var name=&quot;page_title&quot;$&gt;&lt;/title&gt;
&lt;/head&gt;
&lt;body id=&quot;&lt;$mt:BlogThemeID$&gt;&quot; class=&quot;&lt;$mt:Var name=&quot;body_class&quot;$&gt; &lt;$mt:Var name=&quot;page_layout&quot;$&gt;&quot;&gt;
    &lt;div id=&quot;container&quot;&gt;
        &lt;div id=&quot;container-inner&quot;&gt;


            &lt;$mt:Include module=&quot;バナーヘッダー&quot;$&gt;


            &lt;div id=&quot;content&quot;&gt;
                &lt;div id=&quot;content-inner&quot;&gt;


                    &lt;div id=&quot;alpha&quot;&gt;
                        &lt;div id=&quot;alpha-inner&quot;&gt;
                            &lt;h1 id=&quot;page-title&quot;&gt;&lt;$mt:Var name=&quot;page_title&quot;$&gt;&lt;/h1&gt;
                            &lt;$mt:Var name=&quot;message&quot;$&gt;
                            &lt;p&gt;&lt;a href=&quot;&lt;mt:If name=&quot;comment_error&quot;&gt;javascript:history.back()&lt;mt:Else&gt;&lt;$mt:EntryLink$&gt;&lt;/mt:If&gt;&quot;&gt;元の記事&lt;/a&gt;に戻る&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;


                    &lt;$mt:Include module=&quot;サイドバー&quot;$&gt;


                &lt;/div&gt;
            &lt;/div&gt;


            &lt;$mt:Include module=&quot;バナーフッター&quot;$&gt;


        &lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</text></template>
<template id='288' blog_id='8' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110610125207' identifier='dynamic_error' modified_on='20110610125207' name='ダイナミックパブリッシングエラー' rebuild_me='1' type='dynamic_error' current_revision='0'><text>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;
    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; id=&quot;sixapart-standard&quot;&gt;
&lt;head&gt;
    &lt;$mt:Include module=&quot;HTMLヘッダー&quot;$&gt;
    &lt;title&gt;&lt;$mt:BlogName encode_html=&quot;1&quot;$&gt;: ページが見つかりません。&lt;/title&gt;
&lt;/head&gt;
&lt;body id=&quot;&lt;$mt:BlogThemeID$&gt;&quot; class=&quot;mt-dynamic-error &lt;$mt:Var name=&quot;page_layout&quot;$&gt;&quot;&gt;
    &lt;div id=&quot;container&quot;&gt;
        &lt;div id=&quot;container-inner&quot;&gt;


            &lt;$mt:Include module=&quot;バナーヘッダー&quot;$&gt;


            &lt;div id=&quot;content&quot;&gt;
                &lt;div id=&quot;content-inner&quot;&gt;


                    &lt;div id=&quot;alpha&quot;&gt;
                        &lt;div id=&quot;alpha-inner&quot;&gt;
                            &lt;h1 id=&quot;page-title&quot;&gt;ページが見つかりません。&lt;/h1&gt;
                            &lt;blockquote&gt;
                                &lt;strong&gt;&lt;$mt:ErrorMessage$&gt;&lt;/strong&gt;
                            &lt;/blockquote&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;


                    &lt;$mt:Include module=&quot;サイドバー&quot;$&gt;


                &lt;/div&gt;
            &lt;/div&gt;


            &lt;$mt:Include module=&quot;バナーフッター&quot;$&gt;


        &lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</text></template>
<template id='290' blog_id='8' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110610125207' identifier='comment_listing' modified_on='20110610125207' name='コメント一覧' rebuild_me='1' type='comment_listing' current_revision='0'><text>{
    &quot;direction&quot;: &quot;&lt;mt:Var name=&quot;commentDirection&quot;&gt;&quot;,
    &quot;comments&quot;: &quot;&lt;mt:Comments sort_order=&quot;$commentDirection&quot;&gt;&lt;$mt:Include module=&quot;コメント詳細&quot; replace=&quot;\&quot;,&quot;\\&quot; replace=&apos;&quot;&apos;,&apos;\&quot;&apos; strip_linefeeds=&quot;1&quot;$&gt;&lt;/mt:Comments&gt;&quot;
}</text></template>
<template id='306' blog_id='8' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20110729122145' modified_by='1' modified_on='20110729122236' name='携帯投稿' outfile='mailpack.html' rebuild_me='1' type='index' current_revision='2' cache_expire_type='0' include_with_ssi='0' revision='2'><text>&lt;mt:Entries&gt;
&lt;dl class=&quot;normal&quot;&gt;
&lt;dt&gt;&lt;mt:EntryDate format=&quot;%Y/%m/%d&quot;&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;$mt:EntryTitle$&gt;&lt;/dd&gt;
&lt;/dl&gt;
&lt;/mt:Entries&gt;</text></template>
<template id='311' blog_id='9' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120123183055' identifier='comment_preview' modified_on='20120123183055' name='コメントプレビュー' rebuild_me='1' type='comment_preview' current_revision='0'><text>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;
    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; id=&quot;sixapart-standard&quot;&gt;
&lt;head&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
    /* &lt;![CDATA[ */
    var user = &lt;$mt:UserSessionState$&gt;;
    var is_preview = true;
    /* ]]&gt; */
    &lt;/script&gt;
    &lt;$mt:Include module=&quot;HTMLヘッダー&quot;$&gt;
    &lt;title&gt;&lt;$mt:BlogName encode_html=&quot;1&quot;$&gt;: コメントのプレビュー&lt;/title&gt;
&lt;/head&gt;
&lt;body id=&quot;&lt;$mt:BlogThemeID$&gt;&quot; class=&quot;mt-comment-preview &lt;$mt:Var name=&quot;page_layout&quot;$&gt;&quot; onload=&quot;mtEntryOnLoad()&quot; onunload=&quot;mtEntryOnUnload()&quot;&gt;
    &lt;div id=&quot;container&quot;&gt;
        &lt;div id=&quot;container-inner&quot;&gt;


            &lt;$mt:Include module=&quot;バナーヘッダー&quot;$&gt;


            &lt;div id=&quot;content&quot;&gt;
                &lt;div id=&quot;content-inner&quot;&gt;


                    &lt;div id=&quot;alpha&quot;&gt;
                        &lt;div id=&quot;alpha-inner&quot;&gt;


                            &lt;h1 id=&quot;page-title&quot;&gt;&lt;$mt:Var name=&quot;page_title&quot;$&gt;&lt;/h1&gt;


&lt;mt:Ignore&gt;&lt;!-- Comment Preview --&gt;&lt;/mt:Ignore&gt;
                            &lt;div class=&quot;comment&quot; id=&quot;comment-&lt;$mt:CommentID$&gt;&quot;&gt;
                                &lt;div class=&quot;inner&quot;&gt;
                                    &lt;div class=&quot;comment-header&quot;&gt;
                                        &lt;div class=&quot;asset-meta&quot;&gt;
                                            &lt;span class=&quot;byline&quot;&gt;
                                                &lt;$mt:CommentAuthorIdentity$&gt;
    &lt;mt:IfCommentParent&gt;
                                                &lt;span class=&quot;vcard author&quot;&gt;&lt;$mt:CommentAuthorLink$&gt;&lt;/span&gt;から&lt;a href=&quot;&lt;mt:CommentParent&gt;&lt;$mt:CommentLink$&gt;&lt;/mt:CommentParent&gt;&quot;&gt;&lt;mt:CommentParent&gt;&lt;$mt:CommentAuthor$&gt;&lt;/mt:CommentParent&gt;&lt;/a&gt;への返信
    &lt;mt:Else&gt;
                                                &lt;span class=&quot;vcard author&quot;&gt;&lt;$mt:CommentAuthorLink$&gt;&lt;/span&gt;
    &lt;/mt:IfCommentParent&gt;
                                                | &lt;a href=&quot;&lt;$mt:CommentLink$&gt;&quot;&gt;&lt;abbr class=&quot;published&quot; title=&quot;&lt;$mt:CommentDate format_name=&quot;iso8601&quot;$&gt;&quot;&gt;&lt;$mt:CommentDate$&gt;&lt;/abbr&gt;&lt;/a&gt;
                                            &lt;/span&gt;
                                        &lt;/div&gt;
                                    &lt;/div&gt;
                                    &lt;div class=&quot;comment-content&quot;&gt;
                                        &lt;$mt:CommentBody$&gt;
                                    &lt;/div&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;


&lt;mt:Ignore&gt;&lt;!-- Comment Form --&gt;&lt;/mt:Ignore&gt;
                            &lt;div class=&quot;comments-open&quot; id=&quot;comments-open&quot;&gt;
                                &lt;h2 class=&quot;comments-open-header&quot;&gt;コメントする&lt;/h2&gt;
                                &lt;div class=&quot;comments-open-content&quot;&gt;
                                    &lt;div id=&quot;comment-greeting&quot;&gt;&lt;/div&gt;
                                    &lt;form method=&quot;post&quot; action=&quot;&lt;$mt:CGIPath$&gt;&lt;$mt:CommentScript$&gt;&quot; name=&quot;comments_form&quot; id=&quot;comments-form&quot; onsubmit=&quot;return mtCommentOnSubmit(this)&quot;&gt;
                                        &lt;input type=&quot;hidden&quot; name=&quot;static&quot; value=&quot;1&quot; /&gt;
                                        &lt;input type=&quot;hidden&quot; name=&quot;armor&quot; value=&quot;1&quot; /&gt;
                                        &lt;input type=&quot;hidden&quot; name=&quot;preview&quot; value=&quot;&quot; /&gt;
                                        &lt;input type=&quot;hidden&quot; name=&quot;entry_id&quot; value=&quot;&lt;$mt:EntryID$&gt;&quot; /&gt;
                                        &lt;input type=&quot;hidden&quot; name=&quot;__lang&quot; value=&quot;&lt;$mt:BlogLanguage$&gt;&quot; /&gt;
&lt;mt:IfCommentParent&gt;
                                            &lt;input type=&quot;hidden&quot; name=&quot;parent_id&quot; value=&quot;&lt;$mt:CommentParentID escape=&quot;html&quot;$&gt;&quot; id=&quot;comment-parent-id&quot;&gt;
&lt;/mt:IfCommentParent&gt;
                                        &lt;div id=&quot;comments-open-data&quot;&gt;
                                            &lt;div id=&quot;comment-form-name&quot;&gt;
                                                &lt;label for=&quot;comment-author&quot;&gt;名前&lt;/label&gt;
                                                &lt;input id=&quot;comment-author&quot; name=&quot;author&quot; size=&quot;30&quot; value=&quot;&lt;$mt:CommentAuthor encode_html=&quot;1&quot;$&gt;&quot; onfocus=&quot;mtShowCaptcha()&quot; /&gt;
                                            &lt;/div&gt;
                                            &lt;div id=&quot;comment-form-email&quot;&gt;
                                                &lt;label for=&quot;comment-email&quot;&gt;電子メール&lt;/label&gt;
                                                &lt;input id=&quot;comment-email&quot; name=&quot;email&quot; size=&quot;30&quot; value=&quot;&lt;$mt:CommentEmail encode_html=&quot;1&quot;$&gt;&quot; onfocus=&quot;mtShowCaptcha()&quot; /&gt;
                                            &lt;/div&gt;
                                            &lt;div id=&quot;comment-form-url&quot;&gt;
                                                &lt;label for=&quot;comment-url&quot;&gt;URL&lt;/label&gt;
                                                &lt;input id=&quot;comment-url&quot; name=&quot;url&quot; size=&quot;30&quot; value=&quot;&lt;$mt:CommentURL encode_html=&quot;1&quot;$&gt;&quot; onfocus=&quot;mtShowCaptcha()&quot; /&gt;
                                            &lt;/div&gt;
                                        &lt;/div&gt;
&lt;mt:IfCommentParent&gt;
                                        &lt;div id=&quot;comment-form-reply&quot;&gt;
                                            &lt;input type=&quot;checkbox&quot; id=&quot;comment-reply&quot; name=&quot;comment_reply&quot; value=&quot;&lt;$mt:CommentParentID escape=&quot;html&quot;$&gt;&quot; checked=&quot;checked&quot; onclick=&quot;mtSetCommentParentID()&quot; /&gt;
                                            &lt;label for=&quot;comment-reply&quot; id=&quot;comment-reply-label&quot;&gt;&lt;mt:CommentParent&gt;&lt;$mt:CommentAuthor$&gt;&lt;/mt:CommentParent&gt;からのコメントに返信&lt;/label&gt;
                                        &lt;/div&gt;
&lt;/mt:IfCommentParent&gt;
                                        &lt;div id=&quot;comments-open-text&quot;&gt;
                                            &lt;label for=&quot;comment-text&quot;&gt;コメント &lt;mt:IfAllowCommentHTML&gt;(スタイル用のHTMLタグを使えます)&lt;/mt:IfAllowCommentHTML&gt;&lt;/label&gt;
                                            &lt;textarea id=&quot;comment-text&quot; name=&quot;text&quot; rows=&quot;15&quot; cols=&quot;50&quot; onfocus=&quot;mtShowCaptcha()&quot;&gt;&lt;$mt:CommentBody autolink=&quot;0&quot; sanitize=&quot;0&quot; convert_breaks=&quot;0&quot; encode_html=&quot;1&quot;$&gt;&lt;/textarea&gt;
                                        &lt;/div&gt;
                                        &lt;div id=&quot;comments-open-captcha&quot;&gt;&lt;/div&gt;
                                        &lt;div id=&quot;comments-open-footer&quot;&gt;
                                            &lt;input type=&quot;submit&quot; accesskey=&quot;v&quot; name=&quot;preview_button&quot; id=&quot;comment-preview&quot; value=&quot;プレビュー&quot; onclick=&quot;this.form.preview.value=&apos;1&apos;;&quot; /&gt;
                                            &lt;input type=&quot;submit&quot; accesskey=&quot;s&quot; name=&quot;post&quot; id=&quot;comment-submit&quot; value=&quot;投稿&quot; /&gt;
                                            &lt;input type=&quot;button&quot; name=&quot;cancel&quot; id=&quot;comment-cancel&quot; value=&quot;キャンセル&quot; onclick=&quot;window.location=&apos;&lt;$mt:EntryPermalink$&gt;&apos;&quot; /&gt;
                                        &lt;/div&gt;
                                    &lt;/form&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;


                    &lt;$mt:Include module=&quot;サイドバー&quot;$&gt;


                &lt;/div&gt;
            &lt;/div&gt;


            &lt;$mt:Include module=&quot;バナーフッター&quot;$&gt;


        &lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</text></template>
<template id='313' blog_id='9' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120123183055' identifier='search_results' modified_on='20120123183055' name='検索結果' rebuild_me='1' type='search_results' current_revision='0'><text>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;
    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; id=&quot;sixapart-standard&quot;&gt;
&lt;head&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
    /* &lt;![CDATA[ */
    var user = &lt;$mt:UserSessionState$&gt;;
    /* ]]&gt; */
    &lt;/script&gt;
    &lt;$mt:Include module=&quot;HTMLヘッダー&quot;$&gt;
    &lt;title&gt;&lt;$mt:BlogName encode_html=&quot;1&quot;$&gt;: 検索結果&lt;/title&gt;
    &lt;mt:Ignore&gt;Below Javascript adds ajax search capability&lt;/mt:Ignore&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
    /* &lt;![CDATA[ */
    &lt;mt:IfMoreResults&gt;
    function getResults(page) {
        page = parseInt(page);
        if (timer) window.clearTimeout(timer);
        var xh = mtGetXmlHttp();
        if (!xh) return false;
        var res = results[page];
        if (!res) return;
        var url = res[&apos;next_url&apos;];
        if (!url) return;

        xh.open(&apos;GET&apos;, url + &apos;&amp;format=js&apos;, true);
        xh.onreadystatechange = function() {
            if ( xh.readyState == 4 ) {
                if ( xh.status &amp;&amp; ( xh.status != 200 ) ) {
                    // error - ignore
                } else {
                    try {
                        var page_results = eval(&quot;(&quot; + xh.responseText + &quot;)&quot;);
                        if ( page_results[&apos;error&apos;] == null )
                            results[page + 1] = page_results[&apos;result&apos;];
                    } catch (e) {
                    }
                }
            }
        };
        xh.send(null);
    }

    function swapContent(direction) {
        if ( direction == undefined ) direction = 1;
        var page_span = document.getElementById(&apos;current-page&apos;);
        if (!page_span) return true;
        var next_page = direction + parseInt(page_span.innerHTML);
        var res = results[next_page];
        if (!res) return true;
        var content = res[&apos;content&apos;];
        if (!content) return true;
        var div = document.getElementById(&apos;search-results&apos;);
        if (!div) return true;
        div.innerHTML = content;
        timer = window.setTimeout(&quot;getResults(&quot; + next_page + &quot;)&quot;, 1*1000);
        window.scroll(0, 0);
        return false;
    }
    &lt;mt:Else&gt;&lt;mt:IfPreviousResults&gt;
    function swapContent(direction) {
        return true;
    }&lt;/mt:IfPreviousResults&gt;
    &lt;/mt:IfMoreResults&gt;
    /* ]]&gt; */
    &lt;/script&gt;
&lt;/head&gt;
&lt;body id=&quot;&lt;$mt:BlogThemeID$&gt;&quot; class=&quot;mt-search-results &lt;$mt:Var name=&quot;page_layout&quot;$&gt;&quot;&gt;
    &lt;div id=&quot;container&quot;&gt;
        &lt;div id=&quot;container-inner&quot;&gt;


            &lt;$mt:Include module=&quot;バナーヘッダー&quot;$&gt;


            &lt;div id=&quot;content&quot;&gt;
                &lt;div id=&quot;content-inner&quot;&gt;


                    &lt;div id=&quot;alpha&quot;&gt;
                        &lt;div id=&quot;alpha-inner&quot;&gt;

&lt;mt:Ignore&gt;&lt;!--
    Below is the block to show search results.
    This makes an independent block to support
    Ajax-based background retrieval of the next search results.
--&gt;&lt;/mt:Ignore&gt;
&lt;mt:SetVarTemplate id=&quot;search_results&quot; name=&quot;search_results&quot;&gt;  
&lt;mt:SearchResults&gt;
    &lt;mt:SearchResultsHeader&gt;
                            &lt;div id=&quot;search-results&quot;&gt;
                                &lt;span id=&quot;current-page&quot; class=&quot;hidden&quot;&gt;&lt;$mt:CurrentPage$&gt;&lt;/span&gt;
                                &lt;h1 id=&quot;page-title&quot; class=&quot;search-results-header&quot;&gt;
        &lt;mt:IfStraightSearch&gt;
                                    「&lt;$mt:SearchString$&gt;」と一致するもの
        &lt;/mt:IfStraightSearch&gt;
        &lt;mt:IfTagSearch&gt;
                                    タグ「&lt;$mt:SearchString$&gt;」が付けられているもの
        &lt;/mt:IfTagSearch&gt;
                                &lt;/h1&gt;
                                &lt;div class=&quot;search-results-container autopagerize_page_element&quot;&gt;
    &lt;/mt:SearchResultsHeader&gt;
                                    &lt;$mt:Include module=&quot;ブログ記事の概要&quot; hide_counts=&quot;1&quot;$&gt;
    &lt;mt:SearchResultsFooter&gt;
                                &lt;/div&gt;&lt;div class=&quot;autopagerize_insert_before&quot;&gt;&lt;/div&gt;

    &lt;mt:Ignore&gt;&lt;!-- Used with the ajax search capability of the new search class --&gt;&lt;/mt:Ignore&gt;
                                &lt;div class=&quot;content-nav&quot;&gt;
                                    &lt;mt:IfPreviousResults&gt;&lt;a href=&quot;&lt;$mt:PreviousLink$&gt;&quot; rel=&quot;prev&quot; onclick=&quot;return swapContent(-1);&quot;&gt;&amp;lt; 前&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;/mt:IfPreviousResults&gt;&lt;mt:PagerBlock&gt;&lt;mt:IfCurrentPage&gt;&lt;$mt:Var name=&quot;__value__&quot;$&gt;&lt;mt:Else&gt;&lt;a href=&quot;&lt;$mt:PagerLink$&gt;&quot;&gt;&lt;$mt:Var name=&quot;__value__&quot;$&gt;&lt;/a&gt;&lt;/mt:IfCurrentPage&gt;&lt;mt:Unless name=&quot;__last__&quot;&gt;&amp;nbsp;&lt;/mt:Unless&gt;&lt;/mt:PagerBlock&gt;&lt;mt:IfMoreResults&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;&lt;$mt:NextLink$&gt;&quot; rel=&quot;next&quot; onclick=&quot;return swapContent();&quot;&gt;次 &amp;gt;&lt;/a&gt;&lt;/mt:IfMoreResults&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;
    &lt;/mt:SearchResultsFooter&gt;
&lt;/mt:SearchResults&gt;
&lt;/mt:SetVarTemplate&gt;
&lt;mt:Ignore&gt;&lt;!-- Display search results constructed in the block above --&gt;&lt;/mt:Ignore&gt;
&lt;$mt:Var name=&quot;search_results&quot;$&gt;


&lt;mt:Ignore&gt;&lt;!-- Display no results message --&gt;&lt;/mt:Ignore&gt;
&lt;mt:NoSearchResults&gt;
                            &lt;h1 id=&quot;page-title&quot; class=&quot;search-results-header&quot;&gt;
    &lt;mt:IfStraightSearch&gt;
                                「&lt;$mt:SearchString$&gt;」と一致するもの
    &lt;/mt:IfStraightSearch&gt;
    &lt;mt:IfTagSearch&gt;
                                タグ「&lt;$mt:SearchString$&gt;」が付けられているもの
    &lt;/mt:IfTagSearch&gt;
                            &lt;/h1&gt;
                            &lt;p&gt;「&lt;$mt:SearchString$&gt;」と一致する結果は見つかりませんでした。&lt;/p&gt;
&lt;/mt:NoSearchResults&gt;


&lt;mt:Ignore&gt;&lt;!-- Display instructions for searching if search script was accessed without a query --&gt;&lt;/mt:Ignore&gt;
&lt;mt:NoSearch&gt;
                            &lt;h1 id=&quot;page-title&quot; class=&quot;search-results-header&quot;&gt;例&lt;/h1&gt;
                            &lt;p&gt;すべての単語が順序に関係なく検索されます。フレーズで検索したいときは引用符で囲んでください。&lt;/p&gt;
                            &lt;blockquote&gt;
                                &lt;p&gt;&lt;code&gt;&quot;movable type&quot;&lt;/code&gt;&lt;/p&gt;
                            &lt;/blockquote&gt;
                            &lt;p&gt;AND、OR、NOTを入れることで論理検索を行うこともできます。&lt;/p&gt;
                            &lt;blockquote&gt;
                                &lt;p&gt;&lt;code&gt;個人 OR 出版&lt;/code&gt;&lt;/p&gt;
                                &lt;p&gt;&lt;code&gt;個人 NOT 出版&lt;/code&gt;&lt;/p&gt;
                            &lt;/blockquote&gt;
&lt;/mt:NoSearch&gt;

&lt;mt:Ignore&gt;&lt;!-- Used with the ajax search capability of the new search class --&gt;&lt;/mt:Ignore&gt;
&lt;mt:IfMoreResults&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
&lt;!--
var div = document.getElementById(&apos;search-results&apos;);
var results = {
    &apos;&lt;$mt:CurrentPage$&gt;&apos;: {
        &apos;content&apos;: div.innerHTML,
        &apos;next_url&apos;: &apos;&lt;$mt:NextLink$&gt;&apos;
    }
};
var timer = window.setTimeout(&quot;getResults(&quot; + &lt;$mt:CurrentPage$&gt; + &quot;)&quot;, 1*1000);
//--&gt;
&lt;/script&gt;
&lt;/mt:IfMoreResults&gt;


                        &lt;/div&gt;
                    &lt;/div&gt;

                    &lt;$mt:Include module=&quot;サイドバー&quot;$&gt;


                &lt;/div&gt;
            &lt;/div&gt;


            &lt;$mt:Include module=&quot;バナーフッター&quot;$&gt;


        &lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</text></template>
<template id='314' blog_id='9' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120123183055' identifier='recent_assets' modified_on='20120123183055' name='アイテム' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:If tag=&quot;AssetCount&quot;&gt;
    &lt;mt:Assets type=&quot;image&quot; lastn=&quot;10&quot;&gt;
        &lt;mt:AssetsHeader&gt;
&lt;div class=&quot;widget-recent-assets widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;アイテム&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:AssetsHeader&gt;
        &lt;li class=&quot;item&quot;&gt;&lt;a class=&quot;asset-image&quot; href=&quot;&lt;$mt:AssetURL$&gt;&quot;&gt;&lt;img src=&quot;&lt;$mt:AssetThumbnailURL height=&quot;70&quot;$&gt;&quot; class=&quot;asset-img-thumb&quot; alt=&quot;&lt;$mt:AssetLabel$&gt;&quot; title=&quot;&lt;$mt:AssetLabel$&gt;&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
        &lt;mt:AssetsFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:AssetsFooter&gt;
    &lt;/mt:Assets&gt;
&lt;/mt:If&gt;
</text></template>
<template id='316' blog_id='9' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120123183055' identifier='monthly_archive_dropdown' modified_on='20120123183055' name='月別アーカイブ(ドロップダウン)' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Monthly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Monthly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-monthly-dropdown widget-archive widget&quot;&gt;
   &lt;h3 class=&quot;widget-header&quot;&gt;&lt;a href=&quot;&lt;$mt:BlogURL$&gt;archives.html&quot;&gt;アーカイブ&lt;/a&gt;&lt;/h3&gt;
   &lt;div class=&quot;widget-content&quot;&gt;
      &lt;select onchange=&quot;nav(this)&quot;&gt;
         &lt;option&gt;月を選択...&lt;/option&gt;
         &lt;/mt:ArchiveListHeader&gt;
         &lt;option value=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt;&lt;/option&gt;
         &lt;mt:ArchiveListFooter&gt;
      &lt;/select&gt;
   &lt;/div&gt;
&lt;/div&gt;
&lt;script type=&quot;text/javascript&quot; charset=&quot;utf-8&quot;&gt;
/* &lt;![CDATA[ */
function nav(sel) {
   if (sel.selectedIndex == -1) return;
   var opt = sel.options[sel.selectedIndex];
   if (opt &amp;&amp; opt.value)
      location.href = opt.value;
}
/* ]]&gt; */
&lt;/script&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
</text></template>
<template id='320' blog_id='9' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120123183055' identifier='category_archive_list' modified_on='20120123183055' name='カテゴリアーカイブ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Category&quot;&gt;
&lt;div class=&quot;widget-archive widget-archive-category widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;カテゴリ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
    &lt;mt:TopLevelCategories&gt;
        &lt;mt:SubCatIsFirst&gt;
        &lt;ul&gt;
        &lt;/mt:SubCatIsFirst&gt;
        &lt;mt:If tag=&quot;CategoryCount&quot;&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:CategoryArchiveLink$&gt;&quot;&lt;mt:If tag=&quot;CategoryDescription&quot;&gt; title=&quot;&lt;$mt:CategoryDescription remove_html=&quot;1&quot; encode_html=&quot;1&quot;$&gt;&quot;&lt;/mt:If&gt;&gt;&lt;$mt:CategoryLabel$&gt; (&lt;$mt:CategoryCount$&gt;)&lt;/a&gt;
        &lt;mt:Else&gt;
            &lt;li&gt;&lt;$mt:CategoryLabel$&gt;
        &lt;/mt:If&gt;
        &lt;$mt:SubCatsRecurse$&gt;
            &lt;/li&gt;
        &lt;mt:SubCatIsLast&gt;
        &lt;/ul&gt;
        &lt;/mt:SubCatIsLast&gt;
    &lt;/mt:TopLevelCategories&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
</text></template>
<template id='321' blog_id='9' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120123183055' identifier='monthly_archive_list' modified_on='20120123183055' name='月別アーカイブ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Monthly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Monthly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-monthly widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;&lt;$mt:ArchiveTypeLabel$&gt; &lt;a href=&quot;&lt;$mt:Link template=&quot;archive_index&quot;$&gt;&quot;&gt;アーカイブ&lt;/a&gt;&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
</text></template>
<template id='322' blog_id='9' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120123183055' identifier='popup_image' modified_on='20120123183055' name='ポップアップ画像' rebuild_me='1' type='popup_image' current_revision='0'><text>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; id=&quot;sixapart-standard&quot;&gt;
&lt;head&gt;&lt;title&gt;&lt;$mt:ImageURL$&gt;&lt;/title&gt;&lt;/head&gt;
&lt;body id=&quot;uploaded-image-popup&quot; class=&quot;popup&quot; style=&quot;margin: 0;padding: 0;&quot;&gt;
    &lt;img src=&quot;&lt;$mt:ImageURL$&gt;&quot; width=&quot;&lt;$mt:ImageWidth$&gt;&quot; height=&quot;&lt;$mt:ImageHeight$&gt;&quot; alt=&quot;&lt;$mt:ImageURL$&gt;&quot; style=&quot;margin: 0;padding: 0;border: 0;&quot; /&gt;
&lt;/body&gt;
&lt;/html&gt;
</text></template>
<template id='323' blog_id='9' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120123183055' identifier='tag_cloud' modified_on='20120123183055' name='タグクラウド' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:Tags top=&quot;20&quot;&gt;
&lt;mt:If name=&quot;__first__&quot;&gt;
&lt;div class=&quot;widget-tag-cloud widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;タグクラウド&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
&lt;/mt:If&gt;
            &lt;li class=&quot;rank-&lt;$mt:TagRank max=&quot;10&quot;$&gt;&quot;&gt;&lt;a href=&quot;javascript:void(0)&quot; onclick=&quot;location.href=&apos;&lt;$mt:TagSearchLink encode_js=&quot;1&quot;$&gt;&apos;;return false;&quot; rel=&quot;tag&quot;&gt;&lt;$mt:TagName$&gt;&lt;/a&gt;&lt;/li&gt;
&lt;mt:If name=&quot;__last__&quot;&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/mt:If&gt;
&lt;/mt:Tags&gt;
</text></template>
<template id='325' blog_id='9' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120123183055' identifier='technorati_search' modified_on='20120123183055' name='Technorati Search' rebuild_me='1' type='widget' current_revision='0'><text>&lt;div class=&quot;widget-technorati widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;Techonrati&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;div id=&quot;technorati&quot;&gt;
            &lt;form id=&quot;ts_s&quot; method=&quot;post&quot; action=&quot;http://technorati.com/search.php&quot;&gt;
                &lt;fieldset&gt;
                    &lt;legend&gt;&lt;a href=&apos;http://www.technorati.com/&apos;&gt;Technorati&lt;/a&gt; search&lt;/legend&gt;
                    &lt;input type=&quot;hidden&quot; name=&quot;sub&quot; value=&quot;searchlet&quot; /&gt;
                    &lt;input type=&quot;text&quot; id=&quot;ts_search&quot; name=&quot;s&quot; size=&quot;12&quot; maxlength=&quot;255&quot; value=&quot;&quot; /&gt;&lt;br /&gt;
                    &lt;input type=&quot;radio&quot; checked=&quot;checked&quot; name=&quot;from&quot; id=&quot;ts_yb&quot; value=&quot;&lt;$mt:BlogURL$&gt;&quot; /&gt;
                    &lt;label for=&quot;ts_yb&quot; title=&quot;&lt;$mt:BlogName$&gt;&quot;&gt;このブログ&lt;/label&gt;
                    &lt;input type=&quot;radio&quot; name=&quot;from&quot; id=&quot;ts_www&quot; value=&quot;&quot; /&gt; &lt;label for=&quot;ts_www&quot;&gt;すべてのブログ&lt;/label&gt;
                    &lt;input type=&quot;submit&quot; class=&quot;btn&quot; value=&quot;検索&quot; /&gt;
                &lt;/fieldset&gt;
            &lt;/form&gt;
            &lt;p id=&quot;ts_l&quot; class=&quot;ts_l&quot;&gt;&lt;a href=&quot;http://technorati.com/search/&lt;$mt:BlogURL$&gt;&quot; id=&quot;ts_lh&quot;&gt;&#187; リンクしているブログ&lt;/a&gt;&lt;/p&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
</text></template>
<template id='326' blog_id='9' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120123183055' identifier='recent_entries' modified_on='20120123183055' name='最近のブログ記事' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:If tag=&quot;BlogEntryCount&quot;&gt;
    &lt;mt:Entries lastn=&quot;10&quot;&gt;
        &lt;mt:EntriesHeader&gt;
&lt;div class=&quot;widget-recent-entries widget-archives widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;最近のブログ記事&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:EntriesHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:EntryPermalink$&gt;&quot;&gt;&lt;$mt:EntryTitle$&gt;&lt;/a&gt;&lt;/li&gt;
        &lt;mt:EntriesFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:EntriesFooter&gt;
    &lt;/mt:Entries&gt;
&lt;/mt:If&gt;
</text></template>
<template id='327' blog_id='9' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120123183055' identifier='author_archive_list' modified_on='20120123183055' name='ユーザーアーカイブ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Author&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Author&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive widget-archive-author widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;ユーザー&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
</text></template>
<template id='328' blog_id='9' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120123183055' identifier='powered_by' modified_on='20120123183055' name='Powered By' rebuild_me='1' type='widget' current_revision='0'><text>&lt;div class=&quot;widget-powered widget&quot;&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;a href=&quot;http://www.sixapart.jp/movabletype/&quot;&gt;&lt;img src=&quot;&lt;$mt:StaticWebPath$&gt;images/bug-pbmt-white.png&quot; alt=&quot;Powered by Movable Type &lt;$mt:Version$&gt;&quot; width=&quot;120&quot; height=&quot;75&quot; /&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;
</text></template>
<template id='329' blog_id='9' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120123183055' identifier='date_based_author_archives' modified_on='20120123183055' name='日付ベースのユーザーアーカイブ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Author-Yearly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Author-Yearly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-author-yearly widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;年別ユーザーアーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;

&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Author-Monthly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Author-Monthly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-author-monthly widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;月別ユーザーアーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;

&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Author-Weekly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Author-Weekly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-author-weekly widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;週別ユーザーアーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;

&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Author-Daily&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Author-Daily&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-author-daily widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;日別ユーザーアーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;

</text></template>
<template id='330' blog_id='9' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120123183055' identifier='pages_list' modified_on='20120123183055' name='ページ一覧' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Page&quot;&gt;
&lt;div class=&quot;widget-pages widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;ウェブページ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
    &lt;mt:Pages no_folder=&quot;1&quot; sort_by=&quot;title&quot; sort_order=&quot;ascend&quot;&gt;
            &lt;li class=&quot;page page-&lt;$mt:PageID$&gt;&quot;&gt;&lt;a href=&quot;&lt;$mt:PagePermalink$&gt;&quot;&gt;&lt;$mt:PageTitle$&gt;&lt;/a&gt;&lt;/li&gt;
    &lt;/mt:Pages&gt;
    &lt;mt:TopLevelFolders&gt;
            &lt;li class=&quot;folder folder-&lt;$mt:FolderID$&gt;&quot;&gt;&lt;strong&gt;&lt;$mt:FolderLabel$&gt;&lt;/strong&gt;
        &lt;mt:Pages sort_by=&quot;title&quot; sort_order=&quot;ascend&quot;&gt;
            &lt;mt:PagesHeader&gt;
                &lt;ul&gt;
            &lt;/mt:PagesHeader&gt;
                    &lt;li class=&quot;page page-&lt;$mt:PageID$&gt;&quot;&gt;&lt;a href=&quot;&lt;$mt:PagePermalink$&gt;&quot;&gt;&lt;$mt:PageTitle$&gt;&lt;/a&gt;&lt;/li&gt;
            &lt;mt:PagesFooter&gt;
                &lt;/ul&gt;
            &lt;/mt:PagesFooter&gt;
        &lt;/mt:Pages&gt;
            &lt;/li&gt;
        &lt;$mt:SubFolderRecurse$&gt;
    &lt;/mt:TopLevelFolders&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
</text></template>
<template id='335' blog_id='9' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120123183055' identifier='signin' modified_on='20120123183055' name='サインイン' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfRegistrationAllowed&gt;
&lt;div class=&quot;widget-sign-in widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;サインイン&lt;/h3&gt;
    &lt;div id=&quot;signin-widget-content&quot; class=&quot;widget-content&quot;&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
/* &lt;![CDATA[ */
function mtUpdateSignInWidget(u) {
    var el = document.getElementById(&apos;signin-widget-content&apos;);
    var content = &apos;&apos;;
    if (!el) return;
    if (u) {
        if (u &amp;&amp; u.is_authenticated) {
            user = u;
            mtSaveUser();
        } else {
            // user really isn&apos;t logged in; so let&apos;s do this!
            return mtSignIn();
        }
    } else {
        u = mtGetUser();
    }
    if (u &amp;&amp; u.name) {
        var url;
        if (u.is_authenticated) {
            if (u.is_author) {
                url = &apos;&lt;$mt:CGIPath$&gt;&lt;$mt:CommentScript$&gt;?__mode=edit_profile&apos;;
                url += &apos;&amp;return_url=&apos; + encodeURIComponent( location.href );
            } else {
                url = u.url;
            }
        } else if (u.url) {
            url = u.url;
        } else {
            url = null;
        }
        var content = &apos;ユーザー名:&apos;;
        if (url)
            content += &apos;&lt;a href=&quot;&apos; + url + &apos;&quot;&gt;&apos; + u.name + &apos;&lt;/a&gt;&apos;;
        else
            content += u.name;
        content += &apos;.  (&lt;a href=&quot;javascript:void(0)&quot; onclick=&quot;return mtSignOutOnClick()&quot;&gt;サインアウト&lt;/a&gt;)&apos;;
    } else if (u &amp;&amp; u.is_banned) {
        content = &apos;このブログにサインインする権限がありません。&apos;;
    } else {
        content = &apos;&lt;a href=&quot;javascript:void(0)&quot; onclick=&quot;return mtSignInOnClick(\&apos;signin-widget-content\&apos;)&quot;&gt;サインイン&lt;/a&gt;&apos;;
    }
    el.innerHTML = content;
}
mtAttachEvent(&apos;usersignin&apos;, mtUpdateSignInWidget);
mtUpdateSignInWidget();
/* ]]&gt; */
&lt;/script&gt;
&lt;/mt:IfRegistrationAllowed&gt;
</text></template>
<template id='336' blog_id='9' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120123183055' identifier='current_category_monthly_archive_list' modified_on='20120123183055' name='カテゴリ月別アーカイブ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Category-Monthly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Category-Monthly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-current-category-monthly widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;&lt;$mt:CategoryLabel$&gt;: 月別アーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt;&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
</text></template>
<template id='337' blog_id='9' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120123183055' identifier='about_this_page' modified_on='20120123183055' name='About' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:unless name=&quot;main_index&quot;&gt;
&lt;div class=&quot;widget-about-this-page widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;
&lt;mt:If name=&quot;entry_template&quot;&gt;
        このブログ記事について
&lt;mt:Else&gt;
    &lt;mt:If name=&quot;archive_template&quot;&gt;
        このアーカイブについて
    &lt;/mt:If&gt;
&lt;/mt:If&gt;
&lt;mt:If name=&quot;archive_index&quot;&gt;
        このページについて
&lt;/mt:If&gt;
    &lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
&lt;mt:If name=&quot;archive_index&quot;&gt;
        &lt;p&gt;このページには過去に書かれたすべてのコンテンツが含まれています。&lt;/p&gt;
&lt;/mt:If&gt;
&lt;mt:If name=&quot;entry_template&quot;&gt;
        &lt;p class=&quot;first&quot;&gt;このページは、&lt;$mt:EntryAuthorLink$&gt;が&lt;$mt:EntryDate format=&quot;%x %X&quot;$&gt;に書いたブログ記事です。&lt;/p&gt;
    &lt;mt:EntryPrevious&gt;
        &lt;p&gt;ひとつ前のブログ記事は「&lt;a href=&quot;&lt;$mt:EntryPermalink$&gt;&quot;&gt;&lt;$mt:EntryTitle remove_html=&quot;1&quot;$&gt;&lt;/a&gt;」です。&lt;/p&gt;
    &lt;/mt:EntryPrevious&gt;
    &lt;mt:EntryNext&gt;
        &lt;p&gt;次のブログ記事は「&lt;a href=&quot;&lt;$mt:EntryPermalink$&gt;&quot;&gt;&lt;$mt:EntryTitle remove_html=&quot;1&quot;$&gt;&lt;/a&gt;」です。&lt;/p&gt;
    &lt;/mt:EntryNext&gt;
&lt;/mt:If&gt;
&lt;mt:If name=&quot;category_archive&quot;&gt;
    &lt;mt:If name=&quot;datebased_archive&quot;&gt;
        &lt;p class=&quot;first&quot;&gt;このページには、&lt;strong&gt;&lt;$mt:ArchiveDate format=&quot;%B %Y&quot;$&gt;&lt;/strong&gt;以降に書かれたブログ記事のうち&lt;strong&gt;&lt;$mt:CategoryLabel$&gt;&lt;/strong&gt;カテゴリに属しているものが含まれています。&lt;/p&gt;
        &lt;mt:ArchivePrevious&gt;
        &lt;p&gt;前のアーカイブは&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt;&lt;/a&gt;です。&lt;/p&gt;
        &lt;/mt:ArchivePrevious&gt;
        &lt;mt:ArchiveNext&gt;
        &lt;p&gt;次のアーカイブは&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt;&lt;/a&gt;です。&lt;/p&gt;
        &lt;/mt:ArchiveNext&gt;
    &lt;mt:Else&gt;
        &lt;p class=&quot;first&quot;&gt;このページには、過去に書かれたブログ記事のうち&lt;strong&gt;&lt;$mt:CategoryLabel$&gt;&lt;/strong&gt;カテゴリに属しているものが含まれています。&lt;/p&gt;
        &lt;mt:CategoryPrevious&gt;
        &lt;p&gt;前のカテゴリは&lt;a href=&quot;&lt;$mt:CategoryArchiveLink$&gt;&quot;&gt;&lt;$mt:CategoryLabel$&gt;&lt;/a&gt;です。&lt;/p&gt;
        &lt;/mt:CategoryPrevious&gt;
        &lt;mt:CategoryNext&gt;
        &lt;p&gt;次のカテゴリは&lt;a href=&quot;&lt;$mt:CategoryArchiveLink$&gt;&quot;&gt;&lt;$mt:CategoryLabel$&gt;&lt;/a&gt;です。&lt;/p&gt;
        &lt;/mt:CategoryNext&gt;
    &lt;/mt:If&gt;
&lt;/mt:If&gt;
&lt;mt:If name=&quot;author_archive&quot;&gt;
    &lt;mt:If name=&quot;datebased_archive&quot;&gt;
        &lt;p class=&quot;first&quot;&gt;このページには、&lt;strong&gt;&lt;$mt:AuthorDisplayName encode_html=&quot;1&quot;$&gt;&lt;/strong&gt;が&lt;strong&gt;&lt;$mt:ArchiveDate format=&quot;%B %Y&quot;$&gt;&lt;/strong&gt;に書いたブログ記事が含まれています。&lt;/p&gt;
        &lt;mt:ArchivePrevious&gt;
        &lt;p&gt;前のアーカイブは&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt;&lt;/a&gt;です。&lt;/p&gt;
        &lt;/mt:ArchivePrevious&gt;
        &lt;mt:ArchiveNext&gt;
        &lt;p&gt;次のアーカイブは&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt;&lt;/a&gt;です。&lt;/p&gt;
        &lt;/mt:ArchiveNext&gt;
    &lt;mt:Else&gt;
        &lt;p class=&quot;first&quot;&gt;このページには、&lt;strong&gt;&lt;$mt:AuthorDisplayName encode_html=&quot;1&quot;$&gt;&lt;/strong&gt;が最近書いたブログ記事が含まれています。&lt;/p&gt;
    &lt;/mt:If&gt;
&lt;/mt:If&gt;
&lt;mt:If name=&quot;datebased_only_archive&quot;&gt;
        &lt;p class=&quot;first&quot;&gt;このページには、&lt;strong&gt;&lt;$mt:ArchiveDate format=&quot;%B %Y&quot;$&gt;&lt;/strong&gt;に書かれたブログ記事が新しい順に公開されています。&lt;/p&gt;
    &lt;mt:ArchivePrevious&gt;
        &lt;p&gt;前のアーカイブは&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt;&lt;/a&gt;です。&lt;/p&gt;
    &lt;/mt:ArchivePrevious&gt;
    &lt;mt:ArchiveNext&gt;
        &lt;p&gt;次のアーカイブは&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt;&lt;/a&gt;です。&lt;/p&gt;
    &lt;/mt:ArchiveNext&gt;
&lt;/mt:If&gt;
&lt;mt:If name=&quot;archive_index&quot;&gt;
        &lt;p&gt;最近のコンテンツは&lt;a href=&quot;&lt;$mt:BlogURL$&gt;&quot;&gt;インデックスページ&lt;/a&gt;で見られます。&lt;/p&gt;
&lt;mt:Else&gt;
        &lt;p&gt;最近のコンテンツは&lt;a href=&quot;&lt;$mt:BlogURL$&gt;&quot;&gt;インデックスページ&lt;/a&gt;で見られます。過去に書かれたものは&lt;a href=&quot;&lt;$mt:Link template=&quot;archive_index&quot;$&gt;&quot;&gt;アーカイブのページ&lt;/a&gt;で見られます。&lt;/p&gt;
&lt;/mt:If&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/mt:unless&gt;
</text></template>
<template id='338' blog_id='9' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120123183055' identifier='openid' modified_on='20120123183055' name='OpenID対応' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfRegistrationAllowed type=&quot;OpenID&quot;&gt;
&lt;div class=&quot;widget-openid widget&quot;&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;em&gt;&lt;strong&gt;OpenID&lt;/strong&gt;対応しています&lt;/em&gt;
        &lt;a href=&quot;http://www.movabletype.jp/openid/&quot;&gt;OpenIDについて&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/mt:IfRegistrationAllowed&gt;
</text></template>
<template id='339' blog_id='9' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120123183055' identifier='creative_commons' modified_on='20120123183055' name='クリエイティブ・コモンズ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:BlogIfCCLicense&gt;
&lt;div class=&quot;widget-creative-commons widget&quot;&gt;
   &lt;div class=&quot;widget-content&quot;&gt;
      &lt;a href=&quot;&lt;$mt:BlogCCLicenseURL$&gt;&quot;&gt;&lt;img alt=&quot;Creative Commons License&quot; src=&quot;&lt;$mt:BlogCCLicenseImage$&gt;&quot; /&gt;&lt;/a&gt;&lt;br /&gt;
      このブログは&lt;a href=&quot;&lt;$mt:BlogCCLicenseURL$&gt;&quot;&gt;クリエイティブ・コモンズ&lt;/a&gt;でライセンスされています。
   &lt;/div&gt;
&lt;/div&gt;
&lt;/mt:BlogIfCCLicense&gt;
</text></template>
<template id='341' blog_id='9' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120123183055' identifier='comment_response' modified_on='20120123183055' name='コメント完了' rebuild_me='1' type='comment_response' current_revision='0'><text>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;
    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; id=&quot;sixapart-standard&quot;&gt;
&lt;head&gt;


&lt;mt:If name=&quot;comment_confirmation&quot;&gt;
    &lt;mt:Ignore&gt;&lt;!-- Success message when comment has been submitted --&gt;&lt;/mt:Ignore&gt;
    &lt;$mt:Var name=&quot;page_title&quot; value=&quot;確認&quot;$&gt;
    &lt;$mt:Var name=&quot;message&quot; value=&quot;&lt;p&gt;コメントを投稿しました。&lt;/p&gt;&quot;$&gt;
&lt;mt:Else name=&quot;comment_pending&quot;&gt;
    &lt;mt:Ignore&gt;&lt;!-- Pending message when comment is being held for review --&gt;&lt;/mt:Ignore&gt;
    &lt;$mt:Var name=&quot;page_title&quot; value=&quot;コメントありがとうございます。&quot;$&gt;
    &lt;$mt:Var name=&quot;message&quot; value=&quot;&lt;p&gt;コメントは現在承認されるまで公開を保留されています。&lt;/p&gt;&quot;$&gt;
&lt;mt:Else name=&quot;comment_error&quot;&gt;
    &lt;mt:Ignore&gt;&lt;!-- Error message when comment submission fails --&gt;&lt;/mt:Ignore&gt;
    &lt;$mt:Var name=&quot;page_title&quot; value=&quot;コメント投稿エラー&quot;$&gt;
    &lt;mt:SetVarBlock name=&quot;message&quot;&gt;&lt;p&gt;コメントを投稿できませんでした。エラー: &lt;$mt:ErrorMessage$&gt;&lt;/p&gt;&lt;/mt:SetVarBlock&gt;
&lt;/mt:If&gt;


    &lt;$mt:Include module=&quot;HTMLヘッダー&quot;$&gt;
    &lt;title&gt;&lt;$mt:BlogName encode_html=&quot;1&quot;$&gt;: &lt;$mt:Var name=&quot;page_title&quot;$&gt;&lt;/title&gt;
&lt;/head&gt;
&lt;body id=&quot;&lt;$mt:BlogThemeID$&gt;&quot; class=&quot;&lt;$mt:Var name=&quot;body_class&quot;$&gt; &lt;$mt:Var name=&quot;page_layout&quot;$&gt;&quot;&gt;
    &lt;div id=&quot;container&quot;&gt;
        &lt;div id=&quot;container-inner&quot;&gt;


            &lt;$mt:Include module=&quot;バナーヘッダー&quot;$&gt;


            &lt;div id=&quot;content&quot;&gt;
                &lt;div id=&quot;content-inner&quot;&gt;


                    &lt;div id=&quot;alpha&quot;&gt;
                        &lt;div id=&quot;alpha-inner&quot;&gt;
                            &lt;h1 id=&quot;page-title&quot;&gt;&lt;$mt:Var name=&quot;page_title&quot;$&gt;&lt;/h1&gt;
                            &lt;$mt:Var name=&quot;message&quot;$&gt;
                            &lt;p&gt;&lt;a href=&quot;&lt;mt:If name=&quot;comment_error&quot;&gt;javascript:history.back()&lt;mt:Else&gt;&lt;$mt:EntryLink$&gt;&lt;/mt:If&gt;&quot;&gt;元の記事&lt;/a&gt;に戻る&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;


                    &lt;$mt:Include module=&quot;サイドバー&quot;$&gt;


                &lt;/div&gt;
            &lt;/div&gt;


            &lt;$mt:Include module=&quot;バナーフッター&quot;$&gt;


        &lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</text></template>
<template id='342' blog_id='9' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120123183055' identifier='archive_widgets_group' modified_on='20120123183055' name='アーカイブウィジェットグループ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:Ignore&gt;
    アーカイブの種類に応じて異なる内容を表示するように設定されたウィジェットです。詳細: http://www.movabletype.org/documentation/designer/widget-sets.html
&lt;/mt:Ignore&gt;
&lt;mt:If name=&quot;category_archive&quot;&gt;
    &lt;mt:IfArchiveTypeEnabled archive_type=&quot;Category-Monthly&quot;&gt;
        &lt;$mt:Include widget=&quot;カテゴリ月別アーカイブ&quot;$&gt;
    &lt;/mt:IfArchiveTypeEnabled&gt;
&lt;/mt:If&gt;
&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Category&quot;&gt;
    &lt;$mt:Include widget=&quot;カテゴリアーカイブ&quot;$&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Monthly&quot;&gt;
    &lt;$mt:Include widget=&quot;月別アーカイブ&quot;$&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
</text></template>
<template id='344' blog_id='9' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120123183055' identifier='syndication' modified_on='20120123183055' name='購読' rebuild_me='1' type='widget' current_revision='0'><text>&lt;div class=&quot;widget-syndication widget&quot;&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
            &lt;li&gt;&lt;img src=&quot;&lt;$mt:StaticWebPath$&gt;images/status_icons/feed.gif&quot; alt=&quot;購読する&quot; width=&quot;9&quot; height=&quot;9&quot; /&gt; &lt;a href=&quot;&lt;$mt:Link template=&quot;feed_recent&quot;$&gt;&quot;&gt;このブログを購読&lt;/a&gt;&lt;/li&gt;
&lt;mt:If name=&quot;search_results&quot;&gt;
    &lt;mt:If tag=&quot;SearchString&quot;&gt;
            &lt;li class=&quot;search-results-feed&quot;&gt;&lt;img src=&quot;&lt;$mt:StaticWebPath$&gt;images/status_icons/feed.gif&quot; alt=&quot;購読する&quot; width=&quot;9&quot; height=&quot;9&quot; /&gt; &lt;a href=&quot;&lt;$mt:CGIPath$&gt;&lt;$mt:SearchScript$&gt;?&lt;mt:IfTagSearch&gt;tag&lt;mt:else&gt;search&lt;/mt:IfTagSearch&gt;=&lt;$mt:SearchString encode_url=&quot;1&quot;$&gt;&amp;amp;Template=feed&amp;amp;IncludeBlogs=&lt;$mt:SearchIncludeBlogs$&gt;&amp;amp;limit=&lt;$mt:SearchMaxResults$&gt;&quot; title=&quot;&lt;mt:IfTagSearch&gt;「&lt;$mt:SearchString$&gt;」の検索結果を購読&lt;mt:Else&gt;タグ「&lt;$mt:SearchString$&gt;」を購読&lt;/mt:IfTagSearch&gt;&quot;&gt;&lt;mt:IfTagSearch&gt;タグ「&lt;$mt:SearchString$&gt;」のフィード&lt;mt:Else&gt;「&lt;$mt:SearchString$&gt;」を検索した結果のフィード&lt;/mt:IfTagSearch&gt;&lt;/a&gt;&lt;/li&gt;
    &lt;/mt:If&gt;
&lt;/mt:If&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
</text></template>
<template id='345' blog_id='9' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120123183055' identifier='calendar' modified_on='20120123183055' name='カレンダー' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Individual&quot;&gt;
&lt;div class=&quot;widget-calendar widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;&lt;$mt:Date format=&quot;%B %Y&quot;$&gt;&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;table summary=&quot;リンク付きのカレンダー&quot;&gt;
            &lt;tr&gt;
                &lt;th abbr=&quot;日曜日&quot;&gt;日&lt;/th&gt;
                &lt;th abbr=&quot;月曜日&quot;&gt;月&lt;/th&gt;
                &lt;th abbr=&quot;火曜日&quot;&gt;火&lt;/th&gt;
                &lt;th abbr=&quot;水曜日&quot;&gt;水&lt;/th&gt;
                &lt;th abbr=&quot;木曜日&quot;&gt;木&lt;/th&gt;
                &lt;th abbr=&quot;金曜日&quot;&gt;金&lt;/th&gt;
                &lt;th abbr=&quot;土曜日&quot;&gt;土&lt;/th&gt;
            &lt;/tr&gt;
    &lt;mt:Calendar&gt;
        &lt;mt:CalendarWeekHeader&gt;
            &lt;tr&gt;
        &lt;/mt:CalendarWeekHeader&gt;
                &lt;td&gt;
        &lt;mt:CalendarIfEntries&gt;
            &lt;mt:Entries lastn=&quot;1&quot;&gt;
                    &lt;a href=&quot;&lt;$mt:EntryPermalink$&gt;&quot;&gt;&lt;$mt:CalendarDay$&gt;&lt;/a&gt;
            &lt;/mt:Entries&gt;
        &lt;/mt:CalendarIfEntries&gt;
        &lt;mt:CalendarIfNoEntries&gt;
                    &lt;$mt:CalendarDay$&gt;
        &lt;/mt:CalendarIfNoEntries&gt;
        &lt;mt:CalendarIfBlank&gt;&amp;nbsp;&lt;/mt:CalendarIfBlank&gt;
                &lt;/td&gt;
        &lt;mt:CalendarWeekFooter&gt;
            &lt;/tr&gt;
        &lt;/mt:CalendarWeekFooter&gt;
    &lt;/mt:Calendar&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
</text></template>
<template id='346' blog_id='9' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120123183055' identifier='dynamic_error' modified_on='20120123183055' name='ダイナミックパブリッシングエラー' rebuild_me='1' type='dynamic_error' current_revision='0'><text>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;
    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; id=&quot;sixapart-standard&quot;&gt;
&lt;head&gt;
    &lt;$mt:Include module=&quot;HTMLヘッダー&quot;$&gt;
    &lt;title&gt;&lt;$mt:BlogName encode_html=&quot;1&quot;$&gt;: ページが見つかりません。&lt;/title&gt;
&lt;/head&gt;
&lt;body id=&quot;&lt;$mt:BlogThemeID$&gt;&quot; class=&quot;mt-dynamic-error &lt;$mt:Var name=&quot;page_layout&quot;$&gt;&quot;&gt;
    &lt;div id=&quot;container&quot;&gt;
        &lt;div id=&quot;container-inner&quot;&gt;


            &lt;$mt:Include module=&quot;バナーヘッダー&quot;$&gt;


            &lt;div id=&quot;content&quot;&gt;
                &lt;div id=&quot;content-inner&quot;&gt;


                    &lt;div id=&quot;alpha&quot;&gt;
                        &lt;div id=&quot;alpha-inner&quot;&gt;
                            &lt;h1 id=&quot;page-title&quot;&gt;ページが見つかりません。&lt;/h1&gt;
                            &lt;blockquote&gt;
                                &lt;strong&gt;&lt;$mt:ErrorMessage$&gt;&lt;/strong&gt;
                            &lt;/blockquote&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;


                    &lt;$mt:Include module=&quot;サイドバー&quot;$&gt;


                &lt;/div&gt;
            &lt;/div&gt;


            &lt;$mt:Include module=&quot;バナーフッター&quot;$&gt;


        &lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</text></template>
<template id='347' blog_id='9' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120123183055' identifier='javascript' modified_on='20120123183055' name='JavaScript' outfile='mt.js' rebuild_me='1' type='index' current_revision='0'><text>&lt;mt:Ignore&gt;
/*  The following functions and variables are here to support legacy MT templates.
    If you have refreshed your JavaScript template but still use older MT comment
    templates, you may need to uncomment this block in order for those templates 
    to work properly. To use, simply remove the &apos;mt:Ignore&apos; tags wrapping this
    block of code.
*/
    function hideDocumentElement(id) { return mtHide(id) }
    function showDocumentElement(id) { return mtShow(id) }
    function individualArchivesOnLoad() { return mtEntryOnLoad() }
    function writeCommenterGreeting() { return mtShowGreeting() }
    function rememberMe(f) { return mtRememberMe(f) }
    function forgetMe(f) { return mtForgetMe(f) }
    var commenter_name;
    var commenter_id;
    var commenter_url;
    var commenter_blog_ids;
    var mtcmtmail;
    var mtcmtauth;
    var mtcmthome;
    var captcha_timer;
&lt;/mt:Ignore&gt;

// The cookie name to use for storing the blog-side comment session cookie.
var mtCookieName = &quot;&lt;$mt:UserSessionCookieName$&gt;&quot;;
var mtCookieDomain = &quot;&lt;$mt:UserSessionCookieDomain$&gt;&quot;;
var mtCookiePath = &quot;&lt;$mt:UserSessionCookiePath$&gt;&quot;;
var mtCookieTimeout = &lt;$mt:UserSessionCookieTimeout$&gt;;

&lt;mt:Ignore&gt;
/***
 * Simple routine for showing a DOM element (applying a CSS display
 * attribute of &apos;none&apos;).
 */
&lt;/mt:Ignore&gt;
function mtHide(id) {
    var el = (typeof id == &quot;string&quot;) ? document.getElementById(id) : id;
    if (el) el.style.display = &apos;none&apos;;
}

&lt;mt:Ignore&gt;
/***
 * Simple routine for showing a DOM element (applying a CSS display
 * attribute of &apos;block&apos;).
 */
&lt;/mt:Ignore&gt;
function mtShow(id) {
    var el = (typeof id == &quot;string&quot;) ? document.getElementById(id) : id;
    if (el) el.style.display = &apos;block&apos;;
}

&lt;mt:Ignore&gt;
/***
 * A utility function for assigning/adding handlers to window events.
 */
&lt;/mt:Ignore&gt;
function mtAttachEvent(eventName,func) {
    var onEventName = &apos;on&apos; + eventName;
    var old = window[onEventName];
    if( typeof old != &apos;function&apos; )
        window[onEventName] = func;
    else {
        window[onEventName] = function( evt ) {
            old( evt );
            return func( evt );
        };
    }
}

&lt;mt:Ignore&gt;
/***
 * Calls the event named, if there are handlers for it.
 */
&lt;/mt:Ignore&gt;
function mtFireEvent(eventName,param) {
    var fn = window[&apos;on&apos; + eventName];
    if (typeof fn == &apos;function&apos;) return fn(param);
    return;
}

if(!this.JSON){JSON={};}(function(){function f(n){return n&lt;10?&apos;0&apos;+n:n;}if(typeof Date.prototype.toJSON!==&apos;function&apos;){Date.prototype.toJSON=function(key){return this.getUTCFullYear()+&apos;-&apos;+f(this.getUTCMonth()+1)+&apos;-&apos;+f(this.getUTCDate())+&apos;T&apos;+f(this.getUTCHours())+&apos;:&apos;+f(this.getUTCMinutes())+&apos;:&apos;+f(this.getUTCSeconds())+&apos;Z&apos;;};String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(key){return this.valueOf();};}var cx=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,escapable=/[\\\&quot;\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta={&apos;\b&apos;:&apos;\\b&apos;,&apos;\t&apos;:&apos;\\t&apos;,&apos;\n&apos;:&apos;\\n&apos;,&apos;\f&apos;:&apos;\\f&apos;,&apos;\r&apos;:&apos;\\r&apos;,&apos;&quot;&apos;:&apos;\\&quot;&apos;,&apos;\\&apos;:&apos;\\\\&apos;},rep;function quote(string){escapable.lastIndex=0;return escapable.test(string)?&apos;&quot;&apos;+string.replace(escapable,function(a){var c=meta[a];return typeof c===&apos;string&apos;?c:&apos;\\u&apos;+(&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);})+&apos;&quot;&apos;:&apos;&quot;&apos;+string+&apos;&quot;&apos;;}function str(key,holder){var i,k,v,length,mind=gap,partial,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;&amp;&amp;typeof value.toJSON===&apos;function&apos;){value=value.toJSON(key);}if(typeof rep===&apos;function&apos;){value=rep.call(holder,key,value);}switch(typeof value){case&apos;string&apos;:return quote(value);case&apos;number&apos;:return isFinite(value)?String(value):&apos;null&apos;;case&apos;boolean&apos;:case&apos;null&apos;:return String(value);case&apos;object&apos;:if(!value){return&apos;null&apos;;}gap+=indent;partial=[];if(Object.prototype.toString.apply(value)===&apos;[object Array]&apos;){length=value.length;for(i=0;i&lt;length;i+=1){partial[i]=str(i,value)||&apos;null&apos;;}v=partial.length===0?&apos;[]&apos;:gap?&apos;[\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+mind+&apos;]&apos;:&apos;[&apos;+partial.join(&apos;,&apos;)+&apos;]&apos;;gap=mind;return v;}if(rep&amp;&amp;typeof rep===&apos;object&apos;){length=rep.length;for(i=0;i&lt;length;i+=1){k=rep[i];if(typeof k===&apos;string&apos;){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}}else{for(k in value){if(Object.hasOwnProperty.call(value,k)){v=str(k,value);if(v){partial.push(quote(k)+(gap?&apos;: &apos;:&apos;:&apos;)+v);}}}}v=partial.length===0?&apos;{}&apos;:gap?&apos;{\n&apos;+gap+partial.join(&apos;,\n&apos;+gap)+&apos;\n&apos;+mind+&apos;}&apos;:&apos;{&apos;+partial.join(&apos;,&apos;)+&apos;}&apos;;gap=mind;return v;}}if(typeof JSON.stringify!==&apos;function&apos;){JSON.stringify=function(value,replacer,space){var i;gap=&apos;&apos;;indent=&apos;&apos;;if(typeof space===&apos;number&apos;){for(i=0;i&lt;space;i+=1){indent+=&apos; &apos;;}}else if(typeof space===&apos;string&apos;){indent=space;}rep=replacer;if(replacer&amp;&amp;typeof replacer!==&apos;function&apos;&amp;&amp;(typeof replacer!==&apos;object&apos;||typeof replacer.length!==&apos;number&apos;)){throw new Error(&apos;JSON.stringify&apos;);}return str(&apos;&apos;,{&apos;&apos;:value});};}if(typeof JSON.parse!==&apos;function&apos;){JSON.parse=function(text,reviver){var j;function walk(holder,key){var k,v,value=holder[key];if(value&amp;&amp;typeof value===&apos;object&apos;){for(k in value){if(Object.hasOwnProperty.call(value,k)){v=walk(value,k);if(v!==undefined){value[k]=v;}else{delete value[k];}}}}return reviver.call(holder,key,value);}cx.lastIndex=0;if(cx.test(text)){text=text.replace(cx,function(a){return&apos;\\u&apos;+(&apos;0000&apos;+a.charCodeAt(0).toString(16)).slice(-4);});}if(/^[\],:{}\s]*$/.test(text.replace(/\\(?:[&quot;\\\/bfnrt]|u[0-9a-fA-F]{4})/g,&apos;@&apos;).replace(/&quot;[^&quot;\\\n\r]*&quot;|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,&apos;]&apos;).replace(/(?:^|:|,)(?:\s*\[)+/g,&apos;&apos;))){j=eval(&apos;(&apos;+text+&apos;)&apos;);return typeof reviver===&apos;function&apos;?walk({&apos;&apos;:j},&apos;&apos;):j;}throw new SyntaxError(&apos;JSON.parse&apos;);};}}());

var MT = window.MT || {};

MT.cons = function () {
  return {
    LOG : &apos;log&apos;,
    WARN : &apos;warn&apos;,
    DEBUG : &apos;debug&apos;,
    INFO : &apos;info&apos;,
    ERR : &apos;error&apos;,
    JSON : &apos;json&apos;
  };
}();

&lt;mt:Ignore&gt;
/**
 * Used for base functionality related to MT
 * 
 * @package MT
 * @class core
 * @global
 * @param {Object} o optional configuration object
 * Options:
 */
&lt;/mt:Ignore&gt;
MT.core = function (o) {
  var _debug = false;
  
  return {
    &lt;mt:Ignore&gt;
    /**
     * Makes remote call and handles response
     * 
     * @param {String} url The URL endpoint
     * @param {String} respType The type of response expected
     * @param {Function} respHandler The function to handle the response
     * @return void
     */
    &lt;/mt:Ignore&gt;
    connect : function (url,respType,respHandler) {
      var xh = mtGetXmlHttp();
      if (!xh) return false;
      
      xh.onreadystatechange = function() {
        if ( xh.readyState == 4 ) {
          if ( xh.status &amp;&amp; ( xh.status != 200 ) ) {
            // error - ignore
          } else {
            switch (respType) {
              case &apos;json&apos;:
                respHandler(JSON.parse(xh.responseText));
                break;
                
              case &apos;xml&apos;:
                break;
                
              case &apos;text&apos;:
                break;
            }
          }
        }
      };
      
      xh.open(&apos;GET&apos;,url);
      xh.send(null);
    },
    
    getEl : function (el) {
      return MT.util.checkNodeType(el)===&apos;element&apos; ? id : (document.getElementById(el) || false);
    },
    
    addEvent : function (el,type,func,obj) {
      if(!obj &amp;&amp; document.addEventListener) {
        el.addEventListener(type,func,false);
      } else if(obj &amp;&amp; document.addEventListener) {
        el.addEventListener(type,function () {
          func.call(obj,event);
        },false);
      } else {
        if(obj) {
          el.attachEvent(&apos;on&apos; + type,function () {
            func.call(obj,event);
          });
        } else {
          el.attachEvent(&apos;on&apos; + type,function () {          
            func.call(el,event);
          });
        }
      }
    },
    
    &lt;mt:Ignore&gt;
    /**
     * Basic logging function
     * 
     * @param {String} level The log level (WARN|DEBUG|INFO|ERROR|LOG)
     * Specified by one of the MT constants
     * @param {String} msg The log message
     * @return void
     */
    &lt;/mt:Ignore&gt;
    log : function (level,msg) {
      if(_debug &amp;&amp; window.console) {
        switch(level) {
          case &apos;warn&apos;:
          case &apos;debug&apos;:
          case &apos;info&apos;:
          case &apos;error&apos;:
          case &apos;log&apos;:
            console[level](msg);
            break;
            
          default:
            return false; 
        }
      } else {
        return false;
      }
    }
  }
}();

&lt;mt:Ignore&gt;
/**
 * Utilities class
 * 
 * @package MT
 * @class util
 * @global
 * Options:
 */
&lt;/mt:Ignore&gt;
MT.util = function () {
  return {
    toggleVisibility : {
      show : function () {
        var i = arguments.length;
        
        while(i--) {
          if(MT.util.checkNodeType(arguments[i])===&apos;element&apos;) {
            arguments[i].style.visibility = &apos;visible&apos;;
          } else {
            MT.core.getEl(arguments[i]).style.visibility = &apos;visible&apos;;
          }
        }
      },
      
      hide : function () {
        var i = arguments.length;
        while(i--) {
          if(MT.util.checkNodeType(arguments[i])===&apos;element&apos;) {
            arguments[i].style.visibility = &apos;hidden&apos;;
          } else {
            MT.core.getEl(arguments[i]).style.visibility = &apos;hidden&apos;;
          }
        }
      }
    },
    
    toggleDisplay : {
      show : function () {
        var i = arguments.length;
        while(i--) {
          if(MT.util.checkNodeType(arguments[i])===&apos;element&apos;) {
            arguments[i].style.display = &apos;&apos;;
          } else {
            MT.core.getEl(arguments[i]).style.display = &apos;&apos;;
          }
        }
      },
      
      hide : function () {
        var i = arguments.length;
        while(i--) {
          if(MT.util.checkNodeType(arguments[i])===&apos;element&apos;) {
            arguments[i].style.display = &apos;none&apos;;
          } else {
            MT.core.getEl(arguments[i]).style.display = &apos;none&apos;;
          }
        }
      }
    },
    
    &lt;mt:Ignore&gt;
    /**
     * Finds the nearest defining (i.e. with an id) parent to the given element
     * 
     * @param {HTMLElement} origin the node from which to start the search
     * @return {HTMLElement|Boolean} The parent node with an id attribute or false
     */
    &lt;/mt:Ignore&gt;
    findDefiningParent : function (origin) {
      if(MT.util.checkNodeType(origin)===&apos;element&apos;) {
        for(var node=origin.parentNode;node.parentNode;node=node.parentNode) {
          if((node.hasAttribute &amp;&amp; node.hasAttribute(&apos;id&apos;)) || node.getAttribute(&apos;id&apos;)) {
            return node;
          }
        }
      }
      return false;
    },
    
    &lt;mt:Ignore&gt;
    /**
     * Tests objects to verify if they are DOM nodes
     * 
     * @param {Object} obj The object to be tested
     * @return {String} the values &apos;element&apos;|&apos;textnode&apos;|&apos;whitespace&apos;
     */
    &lt;/mt:Ignore&gt;
    checkNodeType : function (obj) {
      if (obj &amp;&amp; obj.nodeName){
        switch (obj.nodeType) {
          case 1: return &apos;element&apos;;
          case 3: return (/\S/).test(obj.nodeValue) ? &apos;textnode&apos; : &apos;whitespace&apos;;
        }
      }
    }
  }
}();

&lt;mt:Ignore&gt;
/**
 * mtPaginateComments takes the currently generated static page and either:
 *  - Attempts to find an individual comment link in the query string
 *  - If no link is found, the static page loads
 * In either case, the pagination event is set
 */
&lt;/mt:Ignore&gt;
(function () {
  var M = MT.core,
      c = MT.cons,
      u = MT.util,
      cache,
      isLoading,
      direction,
      currentComments,
      commentAnchor,
      commentArrId,
      commentsPerPage,
      commentsTotalPages,
      loadingIcon,
      pageNum,
      commentsOffset,
      totalComments,
      entryID,
      commentContentDiv,
      topNav,
      nav,
      currentCommentsSpan,
      topCurrentCommentsSpan;
            
  M.addEvent(window,&apos;load&apos;,_init);
  
  /**
   * Initializes the class
   * 
   * @return void
   */
  function _init () {
    if(!MT.entryCommentCount) {
      return;
    }
    
    _initializeVariables();
    _setCommentOffset(false);
    _checkForAnchor();
		_setCurrentComments();
    _toggleNavLinks();
    _initializeEvents();
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Initializes variables to their initial values
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _initializeVariables() {
    cache = {};
    isLoading = false;
    commentAnchor = &apos;&apos;;
    commentArrId = &apos;&apos;;
    commentsPerPage = MT.commentsPerPage || 50;
    currentComments = &apos;&apos;;
    direction = &apos;ascend&apos;;
    entryID = MT.entryID;
    totalComments = MT.entryCommentCount;
    commentsTotalPages = Math.ceil(totalComments / commentsPerPage);
    pageNum = 1;
    
    loadingIcon = &quot;&lt;img title=&apos;Loading...&apos; src=&apos;&lt;$MTStaticWebPath$&gt;images/indicator.white.gif&apos; alt=&apos;Loading&apos; /&gt;&quot;;
    
    commentContentDiv = M.getEl(&quot;comments-content&quot;);
    topNav = M.getEl(&quot;top-comment-nav&quot;);
    nav = M.getEl(&quot;comment-nav&quot;);
    
    currentCommentsSpan = M.getEl(&quot;current-comments&quot;);
    topCurrentCommentsSpan = M.getEl(&quot;top-current-comments&quot;);
  }
  
  function _initializeEvents() {
    if (commentsPerPage &lt; totalComments) {
      M.addEvent(nav,&apos;click&apos;,_handleEvents);
      M.addEvent(topNav,&apos;click&apos;,_handleEvents);
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Checks for an existing anchor tag in the query string
   * If found, it looks for it on the current page
   * If that fails, it tries to find it in comment list and loads
   * the desired page
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _checkForAnchor() {
    var found = String(window.location.hash).match( /comment-(\d{1,6})/ );
		
		if (found) {
		  M.log(c.DEBUG,found);
			if (!Object.prototype.hasOwnProperty.call(M.getEl(found[0]), &apos;className&apos;)) {
				if (_findIdMatch(found[1])) {
    			pageNum = Math.floor(commentArrId / commentsPerPage) + 1;
    			M.log(c.DEBUG,&apos;Comment Array Id: &apos; + commentArrId);
    			M.log(c.DEBUG,&apos;Comments Per Page: &apos; + commentsPerPage);
    			M.log(c.DEBUG,&apos;Page Number: &apos; + pageNum);
    			M.log(c.DEBUG,&apos;Comment Offset: &apos; + _getCommentOffset());
    			_updateComments();
    		}
			}
		}
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Sets commentsOffset (i.e. the offset number to the remote list)
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _setCommentOffset() {
    commentsOffset = commentsPerPage * (pageNum-1);
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Gets the commentsOffset (i.e. the offset number to the remote list)
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _getCommentOffset() {
    return commentsOffset;
  }
  
  &lt;mt:Ignore&gt;
  /**
   * General event handler
   * 
   * @param {Event} e The event object
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _handleEvents (e) {
    var origin = e.target || e.srcElement,
        parentId;
        
    // stupid IE
    origin = origin.id &amp;&amp; M.getEl(origin.id) || false;

    if(origin) {
      parentId = u.checkNodeType(origin.parentNode)===&apos;element&apos; &amp;&amp; origin.parentNode.getAttribute(&apos;id&apos;) &amp;&amp; origin.parentNode.id;
    } else {
      return false;
    }
    
    switch(origin.nodeName) {
      case &apos;A&apos;:
        switch (parentId) {
          case &apos;prev-comments&apos;:
          case &apos;top-prev-comments&apos;:
            if(e.preventDefault) {
              e.preventDefault();
            } else {
              e.returnValue =	false;
            }
            if(!isLoading) {
              _previousPage();
            }
            break;
          case &apos;next-comments&apos;:
          case &apos;top-next-comments&apos;:
            if(e.preventDefault) {
              e.preventDefault();
            } else {
              e.returnValue =	false;
            }
            if(!isLoading) {
              _nextPage();
            }
            break;
        }
        break;
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Toggles the visibility of the navigation links
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _toggleNavLinks () {
    M.log(c.DEBUG,M.getEl(&apos;top-prev-comments&apos;));
    if(pageNum &lt;= commentsTotalPages &amp;&amp; pageNum !== 1) {
      u.toggleVisibility.show(&apos;prev-comments&apos;);
      u.toggleVisibility.show(&apos;top-prev-comments&apos;);
    }
    
    if(pageNum &gt;= 1 &amp;&amp; pageNum !== commentsTotalPages) {
      u.toggleVisibility.show(&apos;next-comments&apos;);
      u.toggleVisibility.show(&apos;top-next-comments&apos;);
    }
    
    if(pageNum===1 || nav.style.visibility===&apos;hidden&apos;) {
      u.toggleVisibility.hide(&apos;prev-comments&apos;);
      u.toggleVisibility.hide(&apos;top-prev-comments&apos;);
    }
    
    if(pageNum===commentsTotalPages || nav.style.visibility===&apos;hidden&apos;) {
      u.toggleVisibility.hide(&apos;next-comments&apos;);
      u.toggleVisibility.hide(&apos;top-next-comments&apos;);
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Determines appropriate action based on the id of the parent
   * clicked link. Decrements pageNum based on id.
   * 
   * @param {String} id the id of the parent of the clicked link
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _nextPage () {
    if(pageNum &lt; commentsTotalPages) {
      pageNum++;
      _updateComments();
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Determines appropriate action based on the id of the parent
   * clicked link. Increments/decrements pageNum based on id.
   * 
   * @param {String} id the id of the parent of the clicked link
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _previousPage() {
    if(pageNum &gt; 1) {
      pageNum--;
      _updateComments();
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Searches for a particular comment in the list of ids
   * 
   * @param {String} id The id for which to search
   * @return {Boolean} true, if found, false otherwise
   */
  &lt;/mt:Ignore&gt;
  function _findIdMatch (id) {
    var len = MT.commentIds.length;
    
  	while (len--) {
  		if (MT.commentIds[len] == id) {
  			commentAnchor = &quot;comment-&quot; + id;
  			commentArrId = len;
  			return true;
  		}
  	}
  	
  	return false;
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Sets the current comment counts on the page
   *
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _setCurrentComments() {
    var commentsOnPage = pageNum != commentsTotalPages ? commentsOffset + commentsPerPage : totalComments;
    
    _setCurrentCommentsContent([commentsOffset+1,&quot; - &quot;,commentsOnPage].join(&apos;&apos;));
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Sets the &quot;current-comments&quot; element with the HTML value
   * 
   * @param {String|Element} currentCommentsHTML The content to be set
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _setCurrentCommentsContent(currentCommentsHTML) {
    currentCommentsSpan.innerHTML = currentCommentsHTML;
    topCurrentCommentsSpan.innerHTML = currentCommentsHTML;
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Sets the content of the comment list
   * 
   * @param {String|Element} commentHTML The content to be set 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _setCommentContent(commentHTML) {
    commentContentDiv.innerHTML = commentHTML;
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Builds the appropriate URL to make a remote call to get the
   * next set of comments
   * 
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _updateComments() {
    var comments, jsonUrl;
    isLoading = true;
    _setCurrentCommentsContent(loadingIcon);
    _setCommentOffset();
    
    jsonUrl = [
        &quot;&lt;$mt:CGIPath$&gt;&lt;$mt:CommentScript$&gt;?__mode=comment_listing&amp;direction=&quot;,
        direction,
        &quot;&amp;entry_id=&quot;,
        entryID,
        &quot;&amp;limit=&quot;,
        commentsPerPage,
        &quot;&amp;offset=&quot;,
        _getCommentOffset()
      ].join(&apos;&apos;);
  	
  	if (!commentAnchor) {
      commentAnchor = &quot;comments-content&quot;;
    }
    
    if(cache.hasOwnProperty(jsonUrl)) {
      _refreshComments(cache[jsonUrl]);
      isLoading = false;
    } else {
      M.connect(jsonUrl,c.JSON,function (json) {
        cache[jsonUrl] = json.comments;
    	  _refreshComments(json.comments);
    	  isLoading = false;
      });
    }
  }
  
  &lt;mt:Ignore&gt;
  /**
   * Refreshes the comment data with the current
   * 
   * @param {String} commentData The data used to replace current comments
   * @return void
   */
  &lt;/mt:Ignore&gt;
  function _refreshComments(commentData) {
    _setCommentContent(commentData);
    _setCurrentComments();
    window.location.hash = &apos;reset&apos;;
    window.location.hash = commentAnchor;
    _toggleNavLinks();
  }
})();

&lt;mt:Ignore&gt;
/***
 * Displays a relative date.
 * &apos;ts&apos; is a Date object, &apos;fds&apos; is a string of the date which
 * will be displayed if the given date is older than 1 week.
 */
&lt;/mt:Ignore&gt;
function mtRelativeDate(ts, fds) {
    var now = new Date();
    var ref = ts;
    var delta = Math.floor((now.getTime() - ref.getTime()) / 1000);

    var str;
    if (delta &lt; 60) {
        str = &apos;直前&apos;;
    } else if (delta &lt;= 86400) {
        // less than 1 day
        var hours = Math.floor(delta / 3600);
        var min = Math.floor((delta % 3600) / 60);
        if (hours == 1)
            str = &apos;1 時間前&apos;;
        else if (hours &gt; 1)
            str = &apos;2 時間前&apos;.replace(/2/, hours);
        else if (min == 1)
            str = &apos;1 分前&apos;;
        else
            str = &apos;2 分前&apos;.replace(/2/, min);
    } else if (delta &lt;= 604800) {
        // less than 1 week
        var days = Math.floor(delta / 86400);
        var hours = Math.floor((delta % 86400) / 3600);
        if (days == 1)
            str = &apos;1 日前&apos;;
        else if (days &gt; 1)
            str = &apos;2 日前&apos;.replace(/2/, days);
        else if (hours == 1)
            str = &apos;1 時間前&apos;;
        else
            str = &apos;2 時間前&apos;.replace(/2/, hours);
    }
    return str ? str : fds;
}

&lt;mt:Ignore&gt;
/***
 * Used to display an edit link for the given entry.
 */
&lt;/mt:Ignore&gt;
function mtEditLink(entry_id, author_id) {
    var u = mtGetUser();
    if (! u) return;
    if (! entry_id) return;
    if (! author_id) return;
    if (u.id != author_id) return;
    var link = &apos;&lt;a href=&quot;&lt;$mt:AdminScript$&gt;?__mode=view&amp;amp;_type=entry&amp;amp;id=&apos; + entry_id + &apos;&quot;&gt;編集&lt;/a&gt;&apos;;
    document.write(link);
}

&lt;mt:Ignore&gt;
/***
 * Called when an input field on the comment form receives focus.
 */
&lt;/mt:Ignore&gt;
function mtCommentFormOnFocus() {
    // if CAPTCHA is enabled, this causes the captcha image to be
    // displayed if it hasn&apos;t been already.
    mtShowCaptcha();
}

&lt;mt:Ignore&gt;
/***
 * Displays a captcha field for anonymous commenters.
 */
&lt;/mt:Ignore&gt;
var mtCaptchaVisible = false;
function mtShowCaptcha() {
    var u = mtGetUser();
    if ( u &amp;&amp; u.is_authenticated ) return;
    if (mtCaptchaVisible) return;
    var div = document.getElementById(&apos;comments-open-captcha&apos;);
    if (div) {
        div.innerHTML = &apos;&lt;$mt:CaptchaFields$&gt;&apos;;
        mtCaptchaVisible = true;
    }
}

&lt;mt:Ignore&gt;
/* user object
    -- saved in user cookie --
    u.name (display name)
    u.url (link to home page)
    u.email (for anonymous only)
    u.userpic (url for commenter/author)
    u.profile (link to profile)
    u.is_trusted (boolean)
    u.is_author (user has posting rights)
    u.is_banned (banned status; neither post/comment perms)
    u.can_post (has permission to post)
    u.can_comment (has permission to comment)

    -- status fields --
    u.is_authenticated (boolean)
    u.is_anonymous (user is anonymous)
*/
&lt;/mt:Ignore&gt;

var is_preview;
var user;
&lt;mt:Ignore&gt;
/***
 * Assigns a user object as the actively logged in user; also saves the
 * user information in a browser cookie.
 */
&lt;/mt:Ignore&gt;
function mtSetUser(u) {
    if (u) {
        // persist this
        user = u;
        mtSaveUser();
        // sync up user greeting
        mtFireEvent(&apos;usersignin&apos;);
    }
}

&lt;mt:Ignore&gt;
/***
 * Simple function that escapes single quote characters for storing
 * in a cookie.
 */
&lt;/mt:Ignore&gt;
function mtEscapeJS(s) {
    s = s.replace(/&apos;/g, &quot;&amp;apos;&quot;);
    return s;
}

&lt;mt:Ignore&gt;
/***
 * Simple function that unescapes single quote characters that were
 * stored in a cookie.
 */
&lt;/mt:Ignore&gt;
function mtUnescapeJS(s) {
    s = s.replace(/&amp;apos;/g, &quot;&apos;&quot;);
    return s;
}

&lt;mt:Ignore&gt;
/***
 * Serializes a user object into a string, suitable for storing as a cookie.
 */
&lt;/mt:Ignore&gt;
function mtBakeUserCookie(u) {
    var str = &quot;&quot;;
    if (u.name) str += &quot;name:&apos;&quot; + mtEscapeJS(u.name) + &quot;&apos;;&quot;;
    if (u.url) str += &quot;url:&apos;&quot; + mtEscapeJS(u.url) + &quot;&apos;;&quot;;
    if (u.email) str += &quot;email:&apos;&quot; + mtEscapeJS(u.email) + &quot;&apos;;&quot;;
    if (u.is_authenticated) str += &quot;is_authenticated:&apos;1&apos;;&quot;;
    if (u.profile) str += &quot;profile:&apos;&quot; + mtEscapeJS(u.profile) + &quot;&apos;;&quot;;
    if (u.userpic) str += &quot;userpic:&apos;&quot; + mtEscapeJS(u.userpic) + &quot;&apos;;&quot;;
    if (u.sid) str += &quot;sid:&apos;&quot; + mtEscapeJS(u.sid) + &quot;&apos;;&quot;;
    str += &quot;is_trusted:&apos;&quot; + (u.is_trusted ? &quot;1&quot; : &quot;0&quot;) + &quot;&apos;;&quot;;
    str += &quot;is_author:&apos;&quot; + (u.is_author ? &quot;1&quot; : &quot;0&quot;) + &quot;&apos;;&quot;;
    str += &quot;is_banned:&apos;&quot; + (u.is_banned ? &quot;1&quot; : &quot;0&quot;) + &quot;&apos;;&quot;;
    str += &quot;can_post:&apos;&quot; + (u.can_post ? &quot;1&quot; : &quot;0&quot;) + &quot;&apos;;&quot;;
    str += &quot;can_comment:&apos;&quot; + (u.can_comment ? &quot;1&quot; : &quot;0&quot;) + &quot;&apos;;&quot;;
    str = str.replace(/;$/, &apos;&apos;);
    return str;
}

&lt;mt:Ignore&gt;
/***
 * Unserializes a user cookie and returns a user object with the restored
 * state.
 */
&lt;/mt:Ignore&gt;
function mtUnbakeUserCookie(s) {
    if (!s) return;

    var u = {};
    var m;
    while (m = s.match(/^((name|url|email|is_authenticated|profile|userpic|sid|is_trusted|is_author|is_banned|can_post|can_comment):&apos;([^&apos;]+?)&apos;;?)/)) {
        s = s.substring(m[1].length);
        if (m[2].match(/^(is|can)_/)) // boolean fields
            u[m[2]] = m[3] == &apos;1&apos; ? true : false;
        else
            u[m[2]] = mtUnescapeJS(m[3]);
    }
    if (u.is_authenticated) {
        u.is_anonymous = false;
    } else {
        u.is_anonymous = true;
        u.can_post = false;
        u.is_author = false;
        u.is_banned = false;
        u.is_trusted = false;
    }
    return u;
}

&lt;mt:Ignore&gt;
/***
 * Retrieves an object of the currently logged in user&apos;s state.
 * If no user is logged in or cookied, this will return null.
 */
&lt;/mt:Ignore&gt;
function mtGetUser() {
    if (!user) {
        var cookie = mtGetCookie(mtCookieName);
        if (!cookie) return;
        user = mtUnbakeUserCookie(cookie);
        if (! user) {
            user = {};
            user.is_anonymous = true;
            user.can_post = false;
            user.is_author = false;
            user.is_banned = false;
            user.is_trusted = false;
        }
    }
    return user;
}

&lt;mt:Ignore&gt;
/***
 * Issues a request to the MT comment script to retrieve the currently
 * logged-in user (if any).
 */
&lt;/mt:Ignore&gt;
var mtFetchedUser = false;
&lt;mt:IfBlog&gt;
function mtFetchUser(cb) {
    if (!cb) cb = &apos;mtSetUser&apos;;
    if ( ( cb == &apos;mtSetUser&apos; ) &amp;&amp; mtGetUser() ) {
        var url = document.URL;
        url = url.replace(/#.+$/, &apos;&apos;);
        url += &apos;#comments-open&apos;;
        location.href = url;
    } else {
        // we aren&apos;t using AJAX for this, since we may have to request
        // from a different domain. JSONP to the rescue.
        mtFetchedUser = true;
        var script = document.createElement(&apos;script&apos;);
        var ts = new Date().getTime();
        script.src = &apos;&lt;$mt:CGIPath$&gt;&lt;$mt:CommentScript$&gt;?__mode=session_js&amp;blog_id=&lt;$mt:BlogID$&gt;&amp;jsonp=&apos; + cb + &apos;&amp;ts=&apos; + ts;
        (document.getElementsByTagName(&apos;head&apos;))[0].appendChild(script);
    }
}
&lt;/mt:IfBlog&gt;

&lt;mt:Ignore&gt;
/***
 * Called when the &apos;Remember me&apos; checkbox is changed. If the checkbox
 * is cleared, the cached user cookie is immediately cleared.
 */
&lt;/mt:Ignore&gt;
function mtRememberMeOnClick(b) {
    if (!b.checked)
        mtClearUser(b.form);
    return true;
}

&lt;mt:Ignore&gt;
/***
 * Called when comment form is sent.
 * Required parameter: Form DOM object of comment form.
 * If form has a &apos;bakecookie&apos; member, it will be used to signal
 * storing the anonymous commenter information to a cookie.
 * If form has a &apos;armor&apos; member, it will be used to store
 * a token that is checked by the comment script.
 */
&lt;/mt:Ignore&gt;
&lt;mt:IfBlog&gt;
var mtRequestSubmitted = false;
function mtCommentOnSubmit(f) {
    if (!mtRequestSubmitted) {
        mtRequestSubmitted = true;

        if (f.armor)
            f.armor.value = &apos;&lt;$mt:BlogSitePath encode_sha1=&quot;1&quot;$&gt;&apos;;
        if (f.bakecookie &amp;&amp; f.bakecookie.checked)
            mtSaveUser(f);

        // disable submit buttons
        if (f.preview_button) f.preview_button.disabled = true;
        if (f.post) f.post.disabled = true;

        var u = mtGetUser();
        if ( !is_preview &amp;&amp; ( u &amp;&amp; u.is_authenticated ) ) {
            // validate session; then submit
            mtFetchedUser = false;
            mtFetchUser(&apos;mtCommentSessionVerify&apos;);
            return false;
        }

        return true;
    }
    return false;
}

function mtCommentSessionVerify(app_user) {
    var u = mtGetUser();
    var f = document[&apos;comments_form&apos;];
    if ( u &amp;&amp; app_user &amp;&amp; app_user.sid &amp;&amp; ( u.sid == app_user.sid ) ) {
        f.submit();
    } else {
        alert(&apos;セッションの有効期限が切れています。再度サインインしてください。&apos;);
        mtClearUser();
        mtFireEvent(&apos;usersignin&apos;);
&lt;mt:IfRegistrationRequired&gt;
        mtShow(&apos;comments-form&apos;);
        mtHide(&apos;comments-open-footer&apos;);
&lt;/mt:IfRegistrationRequired&gt;
    }
}

function mtUserOnLoad() {
    var u = mtGetUser();

    // if the user is authenticated, hide the &apos;anonymous&apos; fields
    // and any captcha input if already shown
    if ( document.getElementById(&apos;comments-form&apos;)) {
        if ( u &amp;&amp; u.is_authenticated ) {
            mtShow(&apos;comments-form&apos;);
            mtHide(&apos;comments-open-data&apos;);
            if (mtCaptchaVisible)
                mtHide(&apos;comments-open-captcha&apos;);
        } else {
&lt;mt:IfRegistrationRequired&gt;
            mtHide(&apos;comments-form&apos;);
&lt;/mt:IfRegistrationRequired&gt;
        }
        if ( u &amp;&amp; u.is_banned )
            mtHide(&apos;comments-form&apos;);

        // if we&apos;re previewing a comment, make sure the captcha
        // field is visible
        if (is_preview)
            mtShowCaptcha();
        else
            mtShowGreeting();

        // populate anonymous comment fields if user is cookied as anonymous
        var cf = document[&apos;comments_form&apos;];
        if (cf) {
            if (u &amp;&amp; u.is_anonymous) {
                if (u.email) cf.email.value = u.email;
                if (u.name) cf.author.value = u.name;
                if (u.url) cf.url.value = u.url;
                if (cf.bakecookie)
                    cf.bakecookie.checked = u.name || u.email;
            } else {
                if (u &amp;&amp; u.sid &amp;&amp; cf.sid)
                    cf.sid.value = u.sid;
            }
            if (cf.post &amp;&amp; cf.post.disabled)
                cf.post.disabled = false;
            if (cf.preview_button &amp;&amp; cf.preview_button.disabled)
                cf.preview_button.disabled = false;
            mtRequestSubmitted = false;
        }
    }
}
&lt;/mt:IfBlog&gt;

&lt;mt:Ignore&gt;
/***
 * Called when an entry archive page is loaded.
 * This routine controls which elements of the comment form are shown
 * or hidden, depending on commenter type and blog configuration.
 */
&lt;/mt:Ignore&gt;
&lt;mt:IfBlog&gt;
function mtEntryOnLoad() {
    var cf = document[&apos;comments_form&apos;];
    if (cf &amp;&amp; cf.preview) cf.preview.value = &apos;&apos;;
    &lt;mt:Unless tag=&quot;IfPingsAccepted&quot;&gt;mtHide(&apos;trackbacks-info&apos;);&lt;/mt:Unless&gt;
    &lt;mt:Unless tag=&quot;IfCommentsAccepted&quot;&gt;mtHide(&apos;comments-open&apos;);&lt;/mt:Unless&gt;
    mtFireEvent(&apos;usersignin&apos;);
}

function mtEntryOnUnload() {
    if (mtRequestSubmitted) {
        var cf = document[&apos;comments_form&apos;];
        if (cf) {
            if (cf.post &amp;&amp; cf.post.disabled)
                cf.post.disabled = false;
            if (cf.preview_button &amp;&amp; cf.preview_button.disabled)
                cf.preview_button.disabled = false;
        }
        mtRequestSubmitted = false;
    }
    return true;
}

mtAttachEvent(&apos;usersignin&apos;, mtUserOnLoad);
&lt;/mt:IfBlog&gt;

&lt;mt:Ignore&gt;
/***
 * Handles the action of the &quot;Sign in&quot; link. First clears any existing
 * user cookie, then directs to the MT comment script to sign the user in.
 */
&lt;/mt:Ignore&gt;
function mtSignIn() {
    var doc_url = document.URL;
    doc_url = doc_url.replace(/#.+/, &apos;&apos;);
    var url = &apos;&lt;$mt:SignInLink$&gt;&apos;;
    if (is_preview) {
        if ( document[&apos;comments_form&apos;] ) {
            var entry_id = document[&apos;comments_form&apos;].entry_id.value;
            url += &apos;&amp;entry_id=&apos; + entry_id;
        } else {
            url += &apos;&amp;return_url=&lt;$mt:BlogURL encode_url=&quot;1&quot;$&gt;&apos;;
        }
    } else {
        url += &apos;&amp;return_url=&apos; + encodeURIComponent(doc_url);
    }
    mtClearUser();
    location.href = url;
}

function mtSignInOnClick(sign_in_element) {
    var el;
    if (sign_in_element) {
        // display throbber
        el = document.getElementById(sign_in_element);
        if (!el)  // legacy MT 4.x element id
            el = document.getElementById(&apos;comment-form-external-auth&apos;);
    }
    if (el)
        el.innerHTML = &apos;サインインします... &lt;span class=&quot;status-indicator&quot;&gt;&amp;nbsp;&lt;/span&gt;&apos;;

    mtClearUser(); // clear any &apos;anonymous&apos; user cookie to allow sign in
    mtFetchUser(&apos;mtSetUserOrLogin&apos;);
    return false;
}

function mtSetUserOrLogin(u) {
    if (u &amp;&amp; u.is_authenticated) {
        mtSetUser(u);
    } else {
        // user really isn&apos;t logged in; so let&apos;s do this!
        mtSignIn();
    }
}

&lt;mt:Ignore&gt;
/***
 * Handles sign out from the web site.
 * First clears any existing user cookie, then direts to the MT comment
 * script to sign the user out.
 */
&lt;/mt:Ignore&gt;
function mtSignOut(entry_id) {
    mtClearUser();
    var doc_url = document.URL;
    doc_url = doc_url.replace(/#.+/, &apos;&apos;);
    var url = &apos;&lt;$mt:SignOutLink$&gt;&apos;;
    if (is_preview) {
        if ( document[&apos;comments_form&apos;] ) {
            var entry_id = document[&apos;comments_form&apos;].entry_id.value;
            url += &apos;&amp;entry_id=&apos; + entry_id;
        } else {
            url += &apos;&amp;return_url=&lt;$mt:BlogURL encode_url=&quot;1&quot;$&gt;&apos;;
        }
    } else {
        url += &apos;&amp;return_url=&apos; + encodeURIComponent(doc_url);
    }
    location.href = url;
}

&lt;mt:Ignore&gt;
/***
 * Handles the action of the &quot;Sign out&quot; link.
 */
&lt;/mt:Ignore&gt;
function mtSignOutOnClick() {
    mtSignOut();
    return false;
}

&lt;mt:Ignore&gt;
/***
 * Handles the display of the greeting message, depending on what kind of
 * user is logged in and blog comment policy.
 */
&lt;/mt:Ignore&gt;
&lt;mt:IfBlog&gt;
function mtShowGreeting() {
&lt;mt:IfRegistrationAllowed&gt;
    var reg_reqd = &lt;mt:IfRegistrationRequired&gt;true&lt;mt:Else&gt;false&lt;/mt:IfRegistrationRequired&gt;;

    var cf = document[&apos;comments_form&apos;];
    if (!cf) return;

    var el = document.getElementById(&apos;comment-greeting&apos;);
    if (!el)  // legacy MT 4.x element id
        el = document.getElementById(&apos;comment-form-external-auth&apos;);
    if (!el) return;

    var eid = cf.entry_id;
    var entry_id;
    if (eid) entry_id = eid.value;

    var phrase;
    var u = mtGetUser();

    if ( u &amp;&amp; u.is_authenticated ) {
        if ( u.is_banned ) {
            phrase = &apos;このブログにコメントする権限を持っていません。(\&lt;a href=\&quot;javas\cript:void(0);\&quot; onclick=\&quot;return mtSignOutOnClick();\&quot;\&gt;サインアウトする\&lt;\/a\&gt;)&apos;;
        } else {
            var user_link;
            if ( u.is_author ) {
                user_link = &apos;&lt;a href=&quot;&lt;$mt:CGIPath$&gt;&lt;$mt:CommentScript$&gt;?__mode=edit_profile&amp;return_url=&apos; + encodeURIComponent( location.href );
                user_link += &apos;&quot;&gt;&apos; + u.name + &apos;&lt;/a&gt;&apos;;
            } else {
                // registered user, but not a user with posting rights
                if (u.url)
                    user_link = &apos;&lt;a href=&quot;&apos; + u.url + &apos;&quot;&gt;&apos; + u.name + &apos;&lt;/a&gt;&apos;;
                else
                    user_link = u.name;
            }
            // TBD: supplement phrase with userpic if one is available.
            phrase = &apos;__NAME__としてサインインしています。(\&lt;a href=\&quot;javas\cript:void(0)\&quot; onclick=\&quot;return mtSignOutOnClick();\&quot;\&gt;サインアウト\&lt;\/a\&gt;)&apos;;
            phrase = phrase.replace(/__NAME__/, user_link);
        }
    } else {
        if (reg_reqd) {
            phrase = &apos;コメントするにはまず\&lt;a href=\&quot;javas\cript:void(0)\&quot; onclick=\&quot;return mtSignInOnClick(\&apos;comment-greeting\&apos;)\&quot;\&gt;サインイン\&lt;\/a\&gt;してください。&apos;;
        } else {
            phrase = &apos;コメントする前に\&lt;a href=\&quot;javas\cript:void(0)\&quot; onclick=\&quot;return mtSignInOnClick(\&apos;comment-greeting\&apos;)\&quot;\&gt;サインイン\&lt;\/a\&gt;することもできます。&apos;;
        }
    }
    el.innerHTML = phrase;
&lt;mt:Else&gt;
    mtShowCaptcha();
&lt;/mt:IfRegistrationAllowed&gt;
}
&lt;/mt:IfBlog&gt;

&lt;mt:Ignore&gt;
/***
 * Handles the action of the &apos;Reply&apos; links.
 */
&lt;/mt:Ignore&gt;
function mtReplyCommentOnClick(parent_id, author) {
    mtShow(&apos;comment-form-reply&apos;);

    var checkbox = document.getElementById(&apos;comment-reply&apos;);
    var label = document.getElementById(&apos;comment-reply-label&apos;);
    var text = document.getElementById(&apos;comment-text&apos;);

    // Populate label with new values
    var reply_text = &apos;\&lt;a href=\&quot;#comment-__PARENT__\&quot; onclick=\&quot;location.href=this.href; return false\&quot;\&gt;__AUTHOR__からのコメント\&lt;\/a\&gt;に返信&apos;;
    reply_text = reply_text.replace(/__PARENT__/, parent_id);
    reply_text = reply_text.replace(/__AUTHOR__/, author);
    label.innerHTML = reply_text;

    checkbox.value = parent_id; 
    checkbox.checked = true;
    try {
        // text field may be hidden
        text.focus();
    } catch(e) {
    }

    mtSetCommentParentID();
}

&lt;mt:Ignore&gt;
/***
 * Sets the parent comment ID when replying to a comment.
 */
&lt;/mt:Ignore&gt;
function mtSetCommentParentID() {
    var checkbox = document.getElementById(&apos;comment-reply&apos;);
    var parent_id_field = document.getElementById(&apos;comment-parent-id&apos;);
    if (!checkbox || !parent_id_field) return;

    var pid = 0;
    if (checkbox.checked == true)
        pid = checkbox.value;
    parent_id_field.value = pid;
}

&lt;mt:Ignore&gt;
/***
 * Persists a copy of the current user cookie into the browser cookie stash.
 */
&lt;/mt:Ignore&gt;
function mtSaveUser(f) {
    // We can&apos;t reliably store the user cookie during a preview.
    if (is_preview) return;

    var u = mtGetUser();

    if (f &amp;&amp; (!u || u.is_anonymous)) {
        if ( !u ) {
            u = {};
            u.is_authenticated = false;
            u.can_comment = true;
            u.is_author = false;
            u.is_banned = false;
            u.is_anonymous = true;
            u.is_trusted = false;
        }
        if (f.author != undefined) u.name = f.author.value;
        if (f.email != undefined) u.email = f.email.value;
        if (f.url != undefined) u.url = f.url.value;
    }

    if (!u) return;

    var cache_period = mtCookieTimeout * 1000;

    // cache anonymous user info for a long period if the
    // user has requested to be remembered
    if (u.is_anonymous &amp;&amp; f &amp;&amp; f.bakecookie &amp;&amp; f.bakecookie.checked)
        cache_period = 365 * 24 * 60 * 60 * 1000;

    var now = new Date();
    mtFixDate(now);
    now.setTime(now.getTime() + cache_period);

    var cmtcookie = mtBakeUserCookie(u);
    mtSetCookie(mtCookieName, cmtcookie, now, mtCookiePath, mtCookieDomain,
        location.protocol == &apos;https:&apos;);
}

&lt;mt:Ignore&gt;
/***
 * Clears the blog-side user cookie.
 */
&lt;/mt:Ignore&gt;
function mtClearUser() {
    user = null;
    mtDeleteCookie(mtCookieName, mtCookiePath, mtCookieDomain,
        location.protocol == &apos;https:&apos;);
}

&lt;mt:Ignore&gt;
/***
 * Sets a browser cookie.
 */
&lt;/mt:Ignore&gt;
function mtSetCookie(name, value, expires, path, domain, secure) {
    if (domain &amp;&amp; domain.match(/^\.?localhost$/))
        domain = null;
    var curCookie = name + &quot;=&quot; + escape(value) +
        (expires ? &quot;; expires=&quot; + expires.toGMTString() : &quot;&quot;) +
        (path ? &quot;; path=&quot; + path : &quot;&quot;) +
        (domain ? &quot;; domain=&quot; + domain : &quot;&quot;) +
        (secure ? &quot;; secure&quot; : &quot;&quot;);
    document.cookie = curCookie;
}

&lt;mt:Ignore&gt;
/***
 * Retrieves a browser cookie.
 */
&lt;/mt:Ignore&gt;
function mtGetCookie(name) {
    var prefix = name + &apos;=&apos;;
    var c = document.cookie;
    var cookieStartIndex = c.indexOf(prefix);
    if (cookieStartIndex == -1)
        return &apos;&apos;;
    var cookieEndIndex = c.indexOf(&quot;;&quot;, cookieStartIndex + prefix.length);
    if (cookieEndIndex == -1)
        cookieEndIndex = c.length;
    return unescape(c.substring(cookieStartIndex + prefix.length, cookieEndIndex));
}

&lt;mt:Ignore&gt;
/***
 * Deletes a browser cookie.
 */
&lt;/mt:Ignore&gt;
function mtDeleteCookie(name, path, domain, secure) {
    if (mtGetCookie(name)) {
        if (domain &amp;&amp; domain.match(/^\.?localhost$/))
            domain = null;
        document.cookie = name + &quot;=&quot; +
            (path ? &quot;; path=&quot; + path : &quot;&quot;) +
            (domain ? &quot;; domain=&quot; + domain : &quot;&quot;) +
            (secure ? &quot;; secure&quot; : &quot;&quot;) +
            &quot;; expires=Thu, 01-Jan-70 00:00:01 GMT&quot;;
    }
}

function mtFixDate(date) {
    var skew = (new Date(0)).getTime();
    if (skew &gt; 0)
        date.setTime(date.getTime() - skew);
}

&lt;mt:Ignore&gt;
/***
 * Returns a XMLHttpRequest object (for Ajax operations).
 */
&lt;/mt:Ignore&gt;
function mtGetXmlHttp() {
    if ( !window.XMLHttpRequest ) {
        window.XMLHttpRequest = function() {
            var types = [
                &quot;Microsoft.XMLHTTP&quot;,
                &quot;MSXML2.XMLHTTP.5.0&quot;,
                &quot;MSXML2.XMLHTTP.4.0&quot;,
                &quot;MSXML2.XMLHTTP.3.0&quot;,
                &quot;MSXML2.XMLHTTP&quot;
            ];

            for ( var i = 0; i &lt; types.length; i++ ) {
                try {
                    return new ActiveXObject( types[ i ] );
                } catch( e ) {}
            }

            return undefined;
        };
    }
    if ( window.XMLHttpRequest )
        return new XMLHttpRequest();
}

// BEGIN: fast browser onload init
// Modifications by David Davis, DWD
// Dean Edwards/Matthias Miller/John Resig
// http://dean.edwards.name/weblog/2006/06/again/?full#comment5338

function mtInit() {
    // quit if this function has already been called
    if (arguments.callee.done) return;

    // flag this function so we don&apos;t do the same thing twice
    arguments.callee.done = true;

    // kill the timer
    // DWD - check against window
    if ( window._timer ) clearInterval(window._timer);

    // DWD - fire the window onload now, and replace it
    if ( window.onload &amp;&amp; ( window.onload !== window.mtInit ) ) {
        window.onload();
        window.onload = function() {};
    }
}

/* for Mozilla/Opera9 */
if (document.addEventListener) {
    document.addEventListener(&quot;DOMContentLoaded&quot;, mtInit, false);
}

/* for Internet Explorer */
/*@cc_on @*/
/*@if (@_win32)
document.write(&quot;&lt;script id=__ie_onload defer src=javascript:void(0)&gt;&lt;\/script&gt;&quot;);
var script = document.getElementById(&quot;__ie_onload&quot;);
script.onreadystatechange = function() {
    if (this.readyState == &quot;complete&quot;) {
        mtInit(); // call the onload handler
    }
};
/*@end @*/

/* for Safari */
if (/WebKit/i.test(navigator.userAgent)) { // sniff
    _timer = setInterval(function() {
        if (/loaded|complete/.test(document.readyState)) {
            mtInit(); // call the onload handler
        }
    }, 10);
}

/* for other browsers */
window.onload = mtInit;

// END: fast browser onload init

&lt;mt:IfBlog&gt;
&lt;mt:IfRegistrationAllowed&gt;
/***
 * If request contains a &apos;#_login&apos; or &apos;#_logout&apos; hash, use this to
 * also delete the blog-side user cookie, since we&apos;re coming back from
 * a login, logout or edit profile operation.
 */
var clearCookie = ( window.location.hash &amp;&amp; window.location.hash.match( /^#_log(in|out)/ ) ) ? true : false;
if (clearCookie) {
    // clear any logged in state
    mtClearUser();
    if (RegExp.$1 == &apos;in&apos;)
        mtFetchUser();
} else {
    &lt;mt:Ignore&gt;
    /***
     * Uncondition this call to fetch the current user state (if available)
     * from MT upon page load if no user cookie is already present.
     * This is okay if you have a private install, such as an Intranet;
     * not recommended for public web sites!
     */
    &lt;/mt:Ignore&gt;
    if ( is_preview &amp;&amp; !user )
        mtFetchUser();
}
&lt;/mt:IfRegistrationAllowed&gt;
&lt;/mt:IfBlog&gt;
</text></template>
<template id='348' blog_id='9' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120123183055' identifier='comment_listing' modified_on='20120123183055' name='コメント一覧' rebuild_me='1' type='comment_listing' current_revision='0'><text>{
    &quot;direction&quot;: &quot;&lt;mt:Var name=&quot;commentDirection&quot;&gt;&quot;,
    &quot;comments&quot;: &quot;&lt;mt:Comments sort_order=&quot;$commentDirection&quot;&gt;&lt;$mt:Include module=&quot;コメント詳細&quot; replace=&quot;\&quot;,&quot;\\&quot; replace=&apos;&quot;&apos;,&apos;\&quot;&apos; strip_linefeeds=&quot;1&quot;$&gt;&lt;/mt:Comments&gt;&quot;
}</text></template>
<template id='350' blog_id='9' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120123183055' identifier='date_based_category_archives' modified_on='20120123183055' name='日付ベースのカテゴリアーカイブ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Category-Yearly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Category-Yearly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-category-yearly widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;年別カテゴリアーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;

&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Category-Monthly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Category-Monthly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-category-monthly widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;月別カテゴリアーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;

&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Category-Weekly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Category-Weekly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-category-weekly widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;週別カテゴリアーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;

&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Category-Daily&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Category-Daily&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-category-daily widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;日別カテゴリアーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;

</text></template>
<template id='351' blog_id='9' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120123183055' identifier='main_index_widgets_group' modified_on='20120123183055' name='ホームページウィジェットグループ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:Ignore&gt;
    main_indexのテンプレートだけに表示されるように設定されているウィジェットのセットです。詳細: http://www.movabletype.org/documentation/designer/widget-sets.html
&lt;/mt:Ignore&gt;
&lt;mt:If name=&quot;main_index&quot;&gt;
    &lt;$mt:Include widget=&quot;最近のコメント&quot;$&gt;
    &lt;$mt:Include widget=&quot;最近のブログ記事&quot;$&gt;
    &lt;$mt:Include widget=&quot;アイテム&quot;$&gt;
    &lt;$mt:Include widget=&quot;タグクラウド&quot;$&gt;
&lt;/mt:If&gt;
</text></template>
<template id='353' blog_id='9' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120123183055' identifier='search' modified_on='20120123183055' name='検索' rebuild_me='1' type='widget' current_revision='0'><text>&lt;div class=&quot;widget-search widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;検索&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;form method=&quot;get&quot; action=&quot;&lt;$mt:CGIPath$&gt;&lt;$mt:SearchScript$&gt;&quot;&gt;
            &lt;input type=&quot;text&quot; id=&quot;search&quot; class=&quot;ti&quot; name=&quot;search&quot; value=&quot;&lt;$mt:SearchString$&gt;&quot; /&gt;
&lt;mt:If name=&quot;search_results&quot;&gt;
            &lt;input type=&quot;hidden&quot; name=&quot;IncludeBlogs&quot; value=&quot;&lt;$mt:SearchIncludeBlogs$&gt;&quot; /&gt;
            &lt;mt:Ignore&gt;
            &lt;!-- use these options only with MT::App::Search::Legacy --&gt;
            &lt;ul class=&quot;search-options&quot;&gt;
                &lt;li&gt;&lt;input type=&quot;checkbox&quot; name=&quot;CaseSearch&quot; /&gt; 大文字/小文字を区別する&lt;/li&gt;
                &lt;li&gt;&lt;input type=&quot;checkbox&quot; name=&quot;RegexSearch&quot; /&gt; 正規表現&lt;/li&gt;
            &lt;/ul&gt;
            &lt;/mt:Ignore&gt;
&lt;mt:Else&gt;
            &lt;input type=&quot;hidden&quot; name=&quot;IncludeBlogs&quot; value=&quot;&lt;$mt:BlogID$&gt;&quot; /&gt;
&lt;/mt:If&gt;
            &lt;input type=&quot;hidden&quot; name=&quot;limit&quot; value=&quot;&lt;$mt:SearchMaxResults$&gt;&quot; /&gt;
            &lt;input type=&quot;submit&quot; accesskey=&quot;4&quot; value=&quot;検索&quot; /&gt;
        &lt;/form&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;mt:If name=&quot;search_results&quot;&gt;
    &lt;mt:IfTagSearch&gt;
&lt;div class=&quot;widget-tags widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;タグ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;mt:Tags&gt;
            &lt;li&gt;&lt;a href=&quot;javascript:void(0)&quot; onclick=&quot;location.href=&apos;&lt;$mt:TagSearchLink encode_js=&quot;1&quot;$&gt;&apos;;return false;&quot;&gt;&lt;$mt:TagName$&gt; (&lt;$mt:TagCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;/mt:Tags&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
    &lt;/mt:IfTagSearch&gt;
&lt;/mt:If&gt;
</text></template>
<template id='354' blog_id='9' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120123183055' identifier='recent_comments' modified_on='20120123183055' name='最近のコメント' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:If tag=&quot;BlogCommentCount&quot;&gt;
    &lt;mt:Comments lastn=&quot;10&quot; sort_order=&quot;descend&quot;&gt;
        &lt;mt:CommentsHeader&gt;
&lt;div class=&quot;widget-recent-comments widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;最近のコメント&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:CommentsHeader&gt;
            &lt;li&gt;&lt;strong&gt;&lt;$mt:CommentAuthor$&gt;:&lt;/strong&gt; &lt;$mt:CommentBody remove_html=&quot;1&quot; words=&quot;10&quot;$&gt; &lt;a href=&quot;&lt;$mt:CommentLink$&gt;&quot; title=&quot;&lt;mt:CommentEntry&gt;&lt;$mt:EntryTitle$&gt;&lt;/mt:CommentEntry&gt;へのコメント&quot;&gt;続きを読む&lt;/a&gt;&lt;/li&gt;
        &lt;mt:CommentsFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:CommentsFooter&gt;
    &lt;/mt:Comments&gt;
&lt;/mt:If&gt;
</text></template>
<template id='355' blog_id='9' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120123183055' identifier='current_author_monthly_archive_list' modified_on='20120123183055' name='ユーザー月別アーカイブ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Author-Monthly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Author-Monthly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-current-author-monthly widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;&lt;$mt:AuthorDisplayName encode_html=&quot;1&quot;$&gt;: 月別アーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
</text></template>
<template id='356' blog_id='9' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120123183055' identifier='main_index' modified_by='1' modified_on='20140401100707' name='メインページ' outfile='index.html' rebuild_me='1' type='index' current_revision='26' cache_expire_type='0' include_with_ssi='0' revision='26'><text>&lt;$mt:Include module=&quot;ヘッダー&quot;$&gt;
&lt;body onload=&quot;addLinkURL(&apos;code&apos;);return false;&quot;&gt;
&lt;a name=&quot;top&quot; id=&quot;top&quot;&gt;&lt;/a&gt;
&lt;header id=&quot;gHeader&quot;&gt;
&lt;h1&gt;&lt;a href=&quot;/index.html&quot;&gt;声優・ナレーターなら　日本ナレーション演技研究所&lt;/a&gt;&lt;/h1&gt;
&lt;p class=&quot;ghd_bnr&quot;&gt;&lt;a href=&quot;https://nichinare.com/request/form.cgi&quot;&gt;資料請求（無料）&lt;/a&gt;&lt;/p&gt;
&lt;/header&gt;

&lt;section id=&quot;conts&quot;&gt;
&lt;p class=&quot;topic&quot;&gt;&lt;strong&gt;代々木校・お茶の水校・立川校・大宮校・柏校・&lt;br /&gt;横浜校・大阪校・神戸校・名古屋校&lt;/strong&gt;&lt;/p&gt;
&lt;div id=&quot;slides&quot;&gt;
&lt;div class=&quot;slides_container&quot;&gt;
&lt;img src=&quot;/sp/images/photo01.jpg&quot; width=&quot;305&quot; height=&quot;171&quot; alt=&quot;&quot;&gt;
&lt;img src=&quot;/sp/images/photo02.jpg&quot; width=&quot;305&quot; height=&quot;171&quot; alt=&quot;&quot;&gt;
&lt;img src=&quot;/sp/images/photo03.jpg&quot; width=&quot;305&quot; height=&quot;171&quot; alt=&quot;&quot;&gt;
&lt;img src=&quot;/sp/images/photo04.jpg&quot; width=&quot;305&quot; height=&quot;171&quot; alt=&quot;&quot;&gt;
&lt;img src=&quot;/sp/images/photo05.jpg&quot; width=&quot;305&quot; height=&quot;171&quot; alt=&quot;&quot;&gt;
&lt;/div&gt;
&lt;p class=&quot;bt_prev&quot;&gt;&lt;img src=&quot;/sp/images/left_arr.png&quot; width=&quot;33&quot; height=&quot;33&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;bt_next&quot;&gt;&lt;img src=&quot;/sp/images/right_arr.png&quot; width=&quot;33&quot; height=&quot;33&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;js/flick.js&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;mt:Entries lastn=&quot;1&quot; blog_ids=&quot;8&quot;&gt;
&lt;div class=&quot;emergency&quot;&gt;&lt;p&gt;&lt;$MTEntryBody$&gt;&lt;/p&gt;&lt;/div&gt;
&lt;/mt:Entries&gt;

&lt;mt:SetVarBlock name=&quot;today&quot;&gt;&lt;$mt:Date format=&quot;%Y%j&quot;%&gt;&lt;/mt:SetVarBlock&gt;
&lt;section class=&quot;news&quot;&gt;
&lt;h1 class=&quot;tit&quot;&gt;最新情報&lt;/h1&gt;
&lt;ul&gt;
&lt;mt:Entries lastn=&quot;5&quot; blog_ids=&quot;3&quot;&gt;
&lt;li&gt;
&lt;mtifnonempty tag=&quot;urldata&quot;&gt;
&lt;a href=&quot;&lt;mt:urldata&gt;&quot;&gt;&lt;$mt:EntryTitle$&gt;&lt;mt:SetVarBlock name=&quot;passed&quot;&gt;&lt;$mt:EntryDate format=&quot;%Y%j&quot;%&gt;&lt;/mt:SetVarBlock&gt;&lt;mt:SetVar name=&quot;passed&quot; value=&quot;$today&quot; op=&quot;sub&quot;&gt;&lt;mt:If name=&quot;passed&quot; ge=&quot;-5&quot;&gt;&lt;span&gt;NEW!&lt;/span&gt;&lt;/mt:If&gt;&lt;mt:If name=&quot;passed&quot; ge=&quot;-640&quot;&gt;&lt;mt:If name=&quot;passed&quot; le=&quot;-635&quot;&gt;&lt;span&gt;NEW!&lt;/span&gt;&lt;/mt:If&gt;&lt;/mt:If&gt;&lt;/a&gt;
&lt;mtelse&gt;
&lt;a href=&quot;&lt;mt:EntryPermalink archive_type=&quot;Individual&quot;&gt;&quot;&gt;&lt;$mt:EntryTitle$&gt;&lt;mt:SetVarBlock name=&quot;passed&quot;&gt;&lt;$mt:EntryDate format=&quot;%Y%j&quot;%&gt;&lt;/mt:SetVarBlock&gt;&lt;mt:SetVar name=&quot;passed&quot; value=&quot;$today&quot; op=&quot;sub&quot;&gt;&lt;mt:If name=&quot;passed&quot; ge=&quot;-5&quot;&gt;&lt;span&gt;NEW!&lt;/span&gt;&lt;/mt:If&gt;&lt;mt:If name=&quot;passed&quot; ge=&quot;-640&quot;&gt;&lt;mt:If name=&quot;passed&quot; le=&quot;-635&quot;&gt;&lt;span&gt;NEW!&lt;/span&gt;&lt;/mt:If&gt;&lt;/mt:If&gt;&lt;/a&gt;
&lt;/mtelse&gt;
&lt;/mtifnonempty&gt;
&lt;/li&gt;
&lt;/mt:Entries&gt;
&lt;/ul&gt;
&lt;/section&gt;

&lt;nav class=&quot;course_nav&quot;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/course/index.html&quot;&gt;&lt;img src=&quot;/sp/images/top_nav01.png&quot; width=&quot;98&quot; height=&quot;74&quot; alt=&quot;週1回クラス&quot;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/course/threedays.html&quot;&gt;&lt;img src=&quot;/sp/images/top_nav02.png&quot; width=&quot;98&quot; height=&quot;74&quot; alt=&quot;週3回クラス&quot;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/course/jr.html&quot;&gt;&lt;img src=&quot;/sp/images/top_nav03.png&quot; width=&quot;98&quot; height=&quot;74&quot; alt=&quot;ジュニア声優クラス&quot;&gt;&lt;/a&gt;&lt;/li&gt;

&lt;li class=&quot;bt_left&quot;&gt;&lt;a href=&quot;/course/narrater.html&quot;&gt;&lt;img src=&quot;/sp/images/top_nav04.png&quot; width=&quot;149&quot; height=&quot;49&quot; alt=&quot;ナレーターセミナー&quot;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;bt_right&quot;&gt;&lt;a href=&quot;/course/starting.html&quot;&gt;&lt;img src=&quot;/sp/images/top_nav05.png&quot; width=&quot;149&quot; height=&quot;49&quot; alt=&quot;声優スターティングセミナー&quot;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/nav&gt;

&lt;p class=&quot;top_bnr&quot;&gt;&lt;a href=&quot;https://nichinare.com/request/form.cgi&quot;&gt;&lt;img src=&quot;/sp/images/top_bnr.png&quot; width=&quot;303&quot; height=&quot;62&quot; alt=&quot;【無料】資料請求&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;nav class=&quot;sec_nav&quot;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/about/index.html&quot;&gt;&lt;img src=&quot;/sp/images/top_img01.jpg&quot; width=&quot;66&quot; height=&quot;47&quot; alt=&quot;&quot;&gt;&lt;span&gt;日ナレについて&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/course/index.html&quot;&gt;&lt;img src=&quot;/sp/images/top_img02.jpg&quot; width=&quot;66&quot; height=&quot;47&quot; alt=&quot;&quot;&gt;&lt;span&gt;コース紹介&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/application/index.html&quot;&gt;&lt;img src=&quot;/sp/images/top_img03.jpg&quot; width=&quot;66&quot; height=&quot;47&quot; alt=&quot;&quot;&gt;&lt;span&gt;入所方法／面接日程&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/free/index.html&quot;&gt;&lt;img src=&quot;/sp/images/top_img04.jpg&quot; width=&quot;66&quot; height=&quot;47&quot; alt=&quot;&quot;&gt;&lt;span&gt;無料体験レッスン&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/lesson/index.html&quot;&gt;&lt;img src=&quot;/sp/images/top_img05.jpg&quot; width=&quot;66&quot; height=&quot;47&quot; alt=&quot;&quot;&gt;&lt;span&gt;レッスン見学&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/nav&gt;

&lt;nav class=&quot;sub_nav first&quot;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/about/native.html&quot;&gt;主な出身者&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/about/lecturer.html&quot;&gt;講師一覧&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/nav&gt;

&lt;nav class=&quot;sub_nav&quot;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/faq/index.html&quot;&gt;よくあるご質問&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/contact/index.html&quot;&gt;お問い合わせ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/nav&gt;

&lt;nav class=&quot;group_nav&quot;&gt;
&lt;h1&gt;グループプロダクション&lt;/h1&gt;
&lt;ul&gt;
&lt;li class=&quot;group01&quot;&gt;&lt;a href=&quot;http://www.artsvision.co.jp/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;/sp/images/production_nav01.png&quot; width=&quot;300&quot; height=&quot;37&quot; alt=&quot;アーツビジョン&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;group02&quot;&gt;&lt;a href=&quot;http://www.imenterprise.jp/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;/sp/images/production_nav02.png&quot; width=&quot;300&quot; height=&quot;37&quot; alt=&quot;アイムエンタープライズ&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;group03&quot;&gt;&lt;a href=&quot;http://www.crazy-box.co.jp/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;/sp/images/production_nav03.png&quot; width=&quot;300&quot; height=&quot;37&quot; alt=&quot;クレイジーボックス&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;group04&quot;&gt;&lt;a href=&quot;http://www.vims.co.jp/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;/sp/images/production_nav04.png&quot; width=&quot;300&quot; height=&quot;37&quot; alt=&quot;ヴィムス&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;group05&quot;&gt;&lt;a href=&quot;http://www1a.biglobe.ne.jp/mio/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;/sp/images/production_nav05.png&quot; width=&quot;300&quot; height=&quot;37&quot; alt=&quot;澪クリエーション&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/nav&gt;
&lt;/section&gt;

&lt;$mt:Include module=&quot;フッター&quot;$&gt;

&lt;$mt:Include module=&quot;測定タグ&quot;$&gt;

&lt;!--2013.09.27挿入 --&gt;
&lt;script type=&quot;text/javascript&quot; language=&quot;javascript&quot;&gt;
var yahoo_retargeting_id = &apos;43KNCMDN1Y&apos;;
var yahoo_retargeting_label = &apos;&apos;;
&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; language=&quot;javascript&quot; src=&quot;//b92.yahoo.co.jp/js/s_retargeting.js&quot;&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</text></template>
<template id='357' blog_id='9' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120123183055' identifier='3column_layout_secondary_sidebar' modified_on='20120123183055' name='3カラムのサイドバー(サブ)' rebuild_me='1' type='widgetset' current_revision='0' modulesets='353,351,337'><text>&lt;mt:include widget=&quot;検索&quot;&gt;&lt;mt:include widget=&quot;ホームページウィジェットグループ&quot;&gt;&lt;mt:include widget=&quot;About&quot;&gt;</text></template>
<template id='358' blog_id='9' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120123183056' identifier='3column_layout_primary_sidebar' modified_on='20120123183056' name='3カラムのサイドバー(メイン)' rebuild_me='1' type='widgetset' current_revision='0' modulesets='342,330,344,338,328'><text>&lt;mt:include widget=&quot;アーカイブウィジェットグループ&quot;&gt;&lt;mt:include widget=&quot;ページ一覧&quot;&gt;&lt;mt:include widget=&quot;購読&quot;&gt;&lt;mt:include widget=&quot;OpenID対応&quot;&gt;&lt;mt:include widget=&quot;Powered By&quot;&gt;</text></template>
<template id='359' blog_id='9' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120123183056' identifier='2column_layout_sidebar' modified_on='20120123183056' name='2カラムのサイドバー' rebuild_me='1' type='widgetset' current_revision='0' modulesets='353,337,351,342,330,344,338,328'><text>&lt;mt:include widget=&quot;検索&quot;&gt;&lt;mt:include widget=&quot;About&quot;&gt;&lt;mt:include widget=&quot;ホームページウィジェットグループ&quot;&gt;&lt;mt:include widget=&quot;アーカイブウィジェットグループ&quot;&gt;&lt;mt:include widget=&quot;ページ一覧&quot;&gt;&lt;mt:include widget=&quot;購読&quot;&gt;&lt;mt:include widget=&quot;OpenID対応&quot;&gt;&lt;mt:include widget=&quot;Powered By&quot;&gt;</text></template>
<template id='360' blog_id='9' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120123183610' modified_by='1' modified_on='20120730140738' name='ヘッダー' rebuild_me='0' type='custom' current_revision='8' cache_expire_type='0' include_with_ssi='0' revision='8'><text>&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;ja&quot;&gt;
&lt;head&gt;
&lt;meta charset=&quot;UTF-8&quot;&gt;
&lt;meta name=&quot;description&quot; content=&quot;&quot;&gt;
&lt;meta name=&quot;keywords&quot; content=&quot;&quot;&gt;
&lt;meta http-equiv=&quot;content-script-type&quot; content=&quot;text/javascript&quot;&gt;
&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1 &quot;&gt;
&lt;title&gt;声優・ナレーターなら　日本ナレーション演技研究所&lt;/title&gt;
&lt;link rel=&quot;stylesheet&quot; href=&quot;/common/css/sp_base.css&quot; type=&quot;text/css&quot;&gt;
&lt;link rel=&quot;stylesheet&quot; href=&quot;/sp/css/sp_style.css&quot; type=&quot;text/css&quot;&gt;
&lt;script src=&quot;/common/js/prototype.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;/common/js/setQueryParamNew.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;/sp/js/jquery-1.6.3.min.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;/sp/js/slides.min.jquery.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
$(function(){
$(&apos;#slides&apos;).slides({
next: &quot;bt_next&quot;,
prev: &quot;bt_prev&quot;,
pagination: false,
generatePagination: false,
play: 3000,
pause: 1000,
slideSpeed: 600,
hoverPause: false
});
});
&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot;&gt;

  var _gaq = _gaq || [];
  _gaq.push([&apos;_setAccount&apos;, &apos;UA-26631444-3&apos;]);
  _gaq.push([&apos;_setDomainName&apos;, &apos;nichinare.com&apos;]);
  _gaq.push([&apos;_trackPageview&apos;]);

  (function() {
    var ga = document.createElement(&apos;script&apos;); ga.type = &apos;text/javascript&apos;; ga.async = true;
    ga.src = (&apos;https:&apos; == document.location.protocol ? &apos;https://ssl&apos; : &apos;http://www&apos;) + &apos;.google-analytics.com/ga.js&apos;;
    var s = document.getElementsByTagName(&apos;script&apos;)[0]; s.parentNode.insertBefore(ga, s);
  })();

&lt;/script&gt;
&lt;/head&gt;</text></template>
<template id='361' blog_id='9' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120123183813' modified_by='1' modified_on='20120123185204' name='フッター' rebuild_me='0' type='custom' current_revision='2' cache_expire_type='0' include_with_ssi='0' revision='2'><text>&lt;footer id=&quot;gFooter&quot;&gt;
&lt;nav&gt;
&lt;p&gt;&lt;a href=&quot;/company/index.html&quot;&gt;会社概要&lt;/a&gt; ｜ &lt;a href=&quot;/link/index.html&quot;&gt;関連リンク&lt;/a&gt; ｜ &lt;a href=&quot;/privacy/index.html&quot;&gt;個人情報の取り扱い&lt;/a&gt;&lt;/p&gt;
&lt;/nav&gt;
&lt;p class=&quot;authors&quot;&gt;当サイトに掲載されているすべての内容（画像・音声・文章等）の無断での使用・転載・引用を禁止します。&lt;/p&gt;
&lt;p class=&quot;copyright&quot;&gt;copyright (C) 日本ナレーション演技研究所 all right reserved.&lt;/p&gt;
&lt;/footer&gt;</text></template>
<template id='363' blog_id='7' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120229194821' identifier='styles' modified_on='20120229194821' name='スタイルシート' outfile='styles.css' rebuild_me='1' type='index' current_revision='0'><text>@import url(&lt;$MTStaticWebPath$&gt;themes-base/blog.css);
@import url(&lt;$MTStaticWebPath$&gt;themes/minimalist-red/styles.css);
</text></template>
<template id='367' blog_id='10' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120313171702' identifier='comment_preview' modified_on='20120313171702' name='コメントプレビュー' rebuild_me='1' type='comment_preview' current_revision='0'><text>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;
    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; id=&quot;sixapart-standard&quot;&gt;
&lt;head&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
    /* &lt;![CDATA[ */
    var user = &lt;$mt:UserSessionState$&gt;;
    var is_preview = true;
    /* ]]&gt; */
    &lt;/script&gt;
    &lt;$mt:Include module=&quot;HTMLヘッダー&quot;$&gt;
    &lt;title&gt;&lt;$mt:BlogName encode_html=&quot;1&quot;$&gt;: コメントのプレビュー&lt;/title&gt;
&lt;/head&gt;
&lt;body id=&quot;&lt;$mt:BlogThemeID$&gt;&quot; class=&quot;mt-comment-preview &lt;$mt:Var name=&quot;page_layout&quot;$&gt;&quot; onload=&quot;mtEntryOnLoad()&quot; onunload=&quot;mtEntryOnUnload()&quot;&gt;
    &lt;div id=&quot;container&quot;&gt;
        &lt;div id=&quot;container-inner&quot;&gt;


            &lt;$mt:Include module=&quot;バナーヘッダー&quot;$&gt;


            &lt;div id=&quot;content&quot;&gt;
                &lt;div id=&quot;content-inner&quot;&gt;


                    &lt;div id=&quot;alpha&quot;&gt;
                        &lt;div id=&quot;alpha-inner&quot;&gt;


                            &lt;h1 id=&quot;page-title&quot;&gt;&lt;$mt:Var name=&quot;page_title&quot;$&gt;&lt;/h1&gt;


&lt;mt:Ignore&gt;&lt;!-- Comment Preview --&gt;&lt;/mt:Ignore&gt;
                            &lt;div class=&quot;comment&quot; id=&quot;comment-&lt;$mt:CommentID$&gt;&quot;&gt;
                                &lt;div class=&quot;inner&quot;&gt;
                                    &lt;div class=&quot;comment-header&quot;&gt;
                                        &lt;div class=&quot;asset-meta&quot;&gt;
                                            &lt;span class=&quot;byline&quot;&gt;
                                                &lt;$mt:CommentAuthorIdentity$&gt;
    &lt;mt:IfCommentParent&gt;
                                                &lt;span class=&quot;vcard author&quot;&gt;&lt;$mt:CommentAuthorLink$&gt;&lt;/span&gt;から&lt;a href=&quot;&lt;mt:CommentParent&gt;&lt;$mt:CommentLink$&gt;&lt;/mt:CommentParent&gt;&quot;&gt;&lt;mt:CommentParent&gt;&lt;$mt:CommentAuthor$&gt;&lt;/mt:CommentParent&gt;&lt;/a&gt;への返信
    &lt;mt:Else&gt;
                                                &lt;span class=&quot;vcard author&quot;&gt;&lt;$mt:CommentAuthorLink$&gt;&lt;/span&gt;
    &lt;/mt:IfCommentParent&gt;
                                                | &lt;a href=&quot;&lt;$mt:CommentLink$&gt;&quot;&gt;&lt;abbr class=&quot;published&quot; title=&quot;&lt;$mt:CommentDate format_name=&quot;iso8601&quot;$&gt;&quot;&gt;&lt;$mt:CommentDate$&gt;&lt;/abbr&gt;&lt;/a&gt;
                                            &lt;/span&gt;
                                        &lt;/div&gt;
                                    &lt;/div&gt;
                                    &lt;div class=&quot;comment-content&quot;&gt;
                                        &lt;$mt:CommentBody$&gt;
                                    &lt;/div&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;


&lt;mt:Ignore&gt;&lt;!-- Comment Form --&gt;&lt;/mt:Ignore&gt;
                            &lt;div class=&quot;comments-open&quot; id=&quot;comments-open&quot;&gt;
                                &lt;h2 class=&quot;comments-open-header&quot;&gt;コメントする&lt;/h2&gt;
                                &lt;div class=&quot;comments-open-content&quot;&gt;
                                    &lt;div id=&quot;comment-greeting&quot;&gt;&lt;/div&gt;
                                    &lt;form method=&quot;post&quot; action=&quot;&lt;$mt:CGIPath$&gt;&lt;$mt:CommentScript$&gt;&quot; name=&quot;comments_form&quot; id=&quot;comments-form&quot; onsubmit=&quot;return mtCommentOnSubmit(this)&quot;&gt;
                                        &lt;input type=&quot;hidden&quot; name=&quot;static&quot; value=&quot;1&quot; /&gt;
                                        &lt;input type=&quot;hidden&quot; name=&quot;armor&quot; value=&quot;1&quot; /&gt;
                                        &lt;input type=&quot;hidden&quot; name=&quot;preview&quot; value=&quot;&quot; /&gt;
                                        &lt;input type=&quot;hidden&quot; name=&quot;entry_id&quot; value=&quot;&lt;$mt:EntryID$&gt;&quot; /&gt;
                                        &lt;input type=&quot;hidden&quot; name=&quot;__lang&quot; value=&quot;&lt;$mt:BlogLanguage$&gt;&quot; /&gt;
&lt;mt:IfCommentParent&gt;
                                            &lt;input type=&quot;hidden&quot; name=&quot;parent_id&quot; value=&quot;&lt;$mt:CommentParentID escape=&quot;html&quot;$&gt;&quot; id=&quot;comment-parent-id&quot;&gt;
&lt;/mt:IfCommentParent&gt;
                                        &lt;div id=&quot;comments-open-data&quot;&gt;
                                            &lt;div id=&quot;comment-form-name&quot;&gt;
                                                &lt;label for=&quot;comment-author&quot;&gt;名前&lt;/label&gt;
                                                &lt;input id=&quot;comment-author&quot; name=&quot;author&quot; size=&quot;30&quot; value=&quot;&lt;$mt:CommentAuthor encode_html=&quot;1&quot;$&gt;&quot; onfocus=&quot;mtShowCaptcha()&quot; /&gt;
                                            &lt;/div&gt;
                                            &lt;div id=&quot;comment-form-email&quot;&gt;
                                                &lt;label for=&quot;comment-email&quot;&gt;電子メール&lt;/label&gt;
                                                &lt;input id=&quot;comment-email&quot; name=&quot;email&quot; size=&quot;30&quot; value=&quot;&lt;$mt:CommentEmail encode_html=&quot;1&quot;$&gt;&quot; onfocus=&quot;mtShowCaptcha()&quot; /&gt;
                                            &lt;/div&gt;
                                            &lt;div id=&quot;comment-form-url&quot;&gt;
                                                &lt;label for=&quot;comment-url&quot;&gt;URL&lt;/label&gt;
                                                &lt;input id=&quot;comment-url&quot; name=&quot;url&quot; size=&quot;30&quot; value=&quot;&lt;$mt:CommentURL encode_html=&quot;1&quot;$&gt;&quot; onfocus=&quot;mtShowCaptcha()&quot; /&gt;
                                            &lt;/div&gt;
                                        &lt;/div&gt;
&lt;mt:IfCommentParent&gt;
                                        &lt;div id=&quot;comment-form-reply&quot;&gt;
                                            &lt;input type=&quot;checkbox&quot; id=&quot;comment-reply&quot; name=&quot;comment_reply&quot; value=&quot;&lt;$mt:CommentParentID escape=&quot;html&quot;$&gt;&quot; checked=&quot;checked&quot; onclick=&quot;mtSetCommentParentID()&quot; /&gt;
                                            &lt;label for=&quot;comment-reply&quot; id=&quot;comment-reply-label&quot;&gt;&lt;mt:CommentParent&gt;&lt;$mt:CommentAuthor$&gt;&lt;/mt:CommentParent&gt;からのコメントに返信&lt;/label&gt;
                                        &lt;/div&gt;
&lt;/mt:IfCommentParent&gt;
                                        &lt;div id=&quot;comments-open-text&quot;&gt;
                                            &lt;label for=&quot;comment-text&quot;&gt;コメント &lt;mt:IfAllowCommentHTML&gt;(スタイル用のHTMLタグを使えます)&lt;/mt:IfAllowCommentHTML&gt;&lt;/label&gt;
                                            &lt;textarea id=&quot;comment-text&quot; name=&quot;text&quot; rows=&quot;15&quot; cols=&quot;50&quot; onfocus=&quot;mtShowCaptcha()&quot;&gt;&lt;$mt:CommentBody autolink=&quot;0&quot; sanitize=&quot;0&quot; convert_breaks=&quot;0&quot; encode_html=&quot;1&quot;$&gt;&lt;/textarea&gt;
                                        &lt;/div&gt;
                                        &lt;div id=&quot;comments-open-captcha&quot;&gt;&lt;/div&gt;
                                        &lt;div id=&quot;comments-open-footer&quot;&gt;
                                            &lt;input type=&quot;submit&quot; accesskey=&quot;v&quot; name=&quot;preview_button&quot; id=&quot;comment-preview&quot; value=&quot;プレビュー&quot; onclick=&quot;this.form.preview.value=&apos;1&apos;;&quot; /&gt;
                                            &lt;input type=&quot;submit&quot; accesskey=&quot;s&quot; name=&quot;post&quot; id=&quot;comment-submit&quot; value=&quot;投稿&quot; /&gt;
                                            &lt;input type=&quot;button&quot; name=&quot;cancel&quot; id=&quot;comment-cancel&quot; value=&quot;キャンセル&quot; onclick=&quot;window.location=&apos;&lt;$mt:EntryPermalink$&gt;&apos;&quot; /&gt;
                                        &lt;/div&gt;
                                    &lt;/form&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;


                    &lt;$mt:Include module=&quot;サイドバー&quot;$&gt;


                &lt;/div&gt;
            &lt;/div&gt;


            &lt;$mt:Include module=&quot;バナーフッター&quot;$&gt;


        &lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</text></template>
<template id='369' blog_id='10' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120313171702' identifier='search_results' modified_on='20120313171702' name='検索結果' rebuild_me='1' type='search_results' current_revision='0'><text>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;
    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; id=&quot;sixapart-standard&quot;&gt;
&lt;head&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
    /* &lt;![CDATA[ */
    var user = &lt;$mt:UserSessionState$&gt;;
    /* ]]&gt; */
    &lt;/script&gt;
    &lt;$mt:Include module=&quot;HTMLヘッダー&quot;$&gt;
    &lt;title&gt;&lt;$mt:BlogName encode_html=&quot;1&quot;$&gt;: 検索結果&lt;/title&gt;
    &lt;mt:Ignore&gt;Below Javascript adds ajax search capability&lt;/mt:Ignore&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
    /* &lt;![CDATA[ */
    &lt;mt:IfMoreResults&gt;
    function getResults(page) {
        page = parseInt(page);
        if (timer) window.clearTimeout(timer);
        var xh = mtGetXmlHttp();
        if (!xh) return false;
        var res = results[page];
        if (!res) return;
        var url = res[&apos;next_url&apos;];
        if (!url) return;

        xh.open(&apos;GET&apos;, url + &apos;&amp;format=js&apos;, true);
        xh.onreadystatechange = function() {
            if ( xh.readyState == 4 ) {
                if ( xh.status &amp;&amp; ( xh.status != 200 ) ) {
                    // error - ignore
                } else {
                    try {
                        var page_results = eval(&quot;(&quot; + xh.responseText + &quot;)&quot;);
                        if ( page_results[&apos;error&apos;] == null )
                            results[page + 1] = page_results[&apos;result&apos;];
                    } catch (e) {
                    }
                }
            }
        };
        xh.send(null);
    }

    function swapContent(direction) {
        if ( direction == undefined ) direction = 1;
        var page_span = document.getElementById(&apos;current-page&apos;);
        if (!page_span) return true;
        var next_page = direction + parseInt(page_span.innerHTML);
        var res = results[next_page];
        if (!res) return true;
        var content = res[&apos;content&apos;];
        if (!content) return true;
        var div = document.getElementById(&apos;search-results&apos;);
        if (!div) return true;
        div.innerHTML = content;
        timer = window.setTimeout(&quot;getResults(&quot; + next_page + &quot;)&quot;, 1*1000);
        window.scroll(0, 0);
        return false;
    }
    &lt;mt:Else&gt;&lt;mt:IfPreviousResults&gt;
    function swapContent(direction) {
        return true;
    }&lt;/mt:IfPreviousResults&gt;
    &lt;/mt:IfMoreResults&gt;
    /* ]]&gt; */
    &lt;/script&gt;
&lt;/head&gt;
&lt;body id=&quot;&lt;$mt:BlogThemeID$&gt;&quot; class=&quot;mt-search-results &lt;$mt:Var name=&quot;page_layout&quot;$&gt;&quot;&gt;
    &lt;div id=&quot;container&quot;&gt;
        &lt;div id=&quot;container-inner&quot;&gt;


            &lt;$mt:Include module=&quot;バナーヘッダー&quot;$&gt;


            &lt;div id=&quot;content&quot;&gt;
                &lt;div id=&quot;content-inner&quot;&gt;


                    &lt;div id=&quot;alpha&quot;&gt;
                        &lt;div id=&quot;alpha-inner&quot;&gt;

&lt;mt:Ignore&gt;&lt;!--
    Below is the block to show search results.
    This makes an independent block to support
    Ajax-based background retrieval of the next search results.
--&gt;&lt;/mt:Ignore&gt;
&lt;mt:SetVarTemplate id=&quot;search_results&quot; name=&quot;search_results&quot;&gt;  
&lt;mt:SearchResults&gt;
    &lt;mt:SearchResultsHeader&gt;
                            &lt;div id=&quot;search-results&quot;&gt;
                                &lt;span id=&quot;current-page&quot; class=&quot;hidden&quot;&gt;&lt;$mt:CurrentPage$&gt;&lt;/span&gt;
                                &lt;h1 id=&quot;page-title&quot; class=&quot;search-results-header&quot;&gt;
        &lt;mt:IfStraightSearch&gt;
                                    「&lt;$mt:SearchString$&gt;」と一致するもの
        &lt;/mt:IfStraightSearch&gt;
        &lt;mt:IfTagSearch&gt;
                                    タグ「&lt;$mt:SearchString$&gt;」が付けられているもの
        &lt;/mt:IfTagSearch&gt;
                                &lt;/h1&gt;
                                &lt;div class=&quot;search-results-container autopagerize_page_element&quot;&gt;
    &lt;/mt:SearchResultsHeader&gt;
                                    &lt;$mt:Include module=&quot;ブログ記事の概要&quot; hide_counts=&quot;1&quot;$&gt;
    &lt;mt:SearchResultsFooter&gt;
                                &lt;/div&gt;&lt;div class=&quot;autopagerize_insert_before&quot;&gt;&lt;/div&gt;

    &lt;mt:Ignore&gt;&lt;!-- Used with the ajax search capability of the new search class --&gt;&lt;/mt:Ignore&gt;
                                &lt;div class=&quot;content-nav&quot;&gt;
                                    &lt;mt:IfPreviousResults&gt;&lt;a href=&quot;&lt;$mt:PreviousLink$&gt;&quot; rel=&quot;prev&quot; onclick=&quot;return swapContent(-1);&quot;&gt;&amp;lt; 前&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;/mt:IfPreviousResults&gt;&lt;mt:PagerBlock&gt;&lt;mt:IfCurrentPage&gt;&lt;$mt:Var name=&quot;__value__&quot;$&gt;&lt;mt:Else&gt;&lt;a href=&quot;&lt;$mt:PagerLink$&gt;&quot;&gt;&lt;$mt:Var name=&quot;__value__&quot;$&gt;&lt;/a&gt;&lt;/mt:IfCurrentPage&gt;&lt;mt:Unless name=&quot;__last__&quot;&gt;&amp;nbsp;&lt;/mt:Unless&gt;&lt;/mt:PagerBlock&gt;&lt;mt:IfMoreResults&gt;&amp;nbsp;&amp;nbsp;&lt;a href=&quot;&lt;$mt:NextLink$&gt;&quot; rel=&quot;next&quot; onclick=&quot;return swapContent();&quot;&gt;次 &amp;gt;&lt;/a&gt;&lt;/mt:IfMoreResults&gt;
                                &lt;/div&gt;
                            &lt;/div&gt;
    &lt;/mt:SearchResultsFooter&gt;
&lt;/mt:SearchResults&gt;
&lt;/mt:SetVarTemplate&gt;
&lt;mt:Ignore&gt;&lt;!-- Display search results constructed in the block above --&gt;&lt;/mt:Ignore&gt;
&lt;$mt:Var name=&quot;search_results&quot;$&gt;


&lt;mt:Ignore&gt;&lt;!-- Display no results message --&gt;&lt;/mt:Ignore&gt;
&lt;mt:NoSearchResults&gt;
                            &lt;h1 id=&quot;page-title&quot; class=&quot;search-results-header&quot;&gt;
    &lt;mt:IfStraightSearch&gt;
                                「&lt;$mt:SearchString$&gt;」と一致するもの
    &lt;/mt:IfStraightSearch&gt;
    &lt;mt:IfTagSearch&gt;
                                タグ「&lt;$mt:SearchString$&gt;」が付けられているもの
    &lt;/mt:IfTagSearch&gt;
                            &lt;/h1&gt;
                            &lt;p&gt;「&lt;$mt:SearchString$&gt;」と一致する結果は見つかりませんでした。&lt;/p&gt;
&lt;/mt:NoSearchResults&gt;


&lt;mt:Ignore&gt;&lt;!-- Display instructions for searching if search script was accessed without a query --&gt;&lt;/mt:Ignore&gt;
&lt;mt:NoSearch&gt;
                            &lt;h1 id=&quot;page-title&quot; class=&quot;search-results-header&quot;&gt;例&lt;/h1&gt;
                            &lt;p&gt;すべての単語が順序に関係なく検索されます。フレーズで検索したいときは引用符で囲んでください。&lt;/p&gt;
                            &lt;blockquote&gt;
                                &lt;p&gt;&lt;code&gt;&quot;movable type&quot;&lt;/code&gt;&lt;/p&gt;
                            &lt;/blockquote&gt;
                            &lt;p&gt;AND、OR、NOTを入れることで論理検索を行うこともできます。&lt;/p&gt;
                            &lt;blockquote&gt;
                                &lt;p&gt;&lt;code&gt;個人 OR 出版&lt;/code&gt;&lt;/p&gt;
                                &lt;p&gt;&lt;code&gt;個人 NOT 出版&lt;/code&gt;&lt;/p&gt;
                            &lt;/blockquote&gt;
&lt;/mt:NoSearch&gt;

&lt;mt:Ignore&gt;&lt;!-- Used with the ajax search capability of the new search class --&gt;&lt;/mt:Ignore&gt;
&lt;mt:IfMoreResults&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
&lt;!--
var div = document.getElementById(&apos;search-results&apos;);
var results = {
    &apos;&lt;$mt:CurrentPage$&gt;&apos;: {
        &apos;content&apos;: div.innerHTML,
        &apos;next_url&apos;: &apos;&lt;$mt:NextLink$&gt;&apos;
    }
};
var timer = window.setTimeout(&quot;getResults(&quot; + &lt;$mt:CurrentPage$&gt; + &quot;)&quot;, 1*1000);
//--&gt;
&lt;/script&gt;
&lt;/mt:IfMoreResults&gt;


                        &lt;/div&gt;
                    &lt;/div&gt;

                    &lt;$mt:Include module=&quot;サイドバー&quot;$&gt;


                &lt;/div&gt;
            &lt;/div&gt;


            &lt;$mt:Include module=&quot;バナーフッター&quot;$&gt;


        &lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</text></template>
<template id='370' blog_id='10' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120313171702' identifier='recent_assets' modified_on='20120313171702' name='アイテム' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:If tag=&quot;AssetCount&quot;&gt;
    &lt;mt:Assets type=&quot;image&quot; lastn=&quot;10&quot;&gt;
        &lt;mt:AssetsHeader&gt;
&lt;div class=&quot;widget-recent-assets widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;アイテム&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:AssetsHeader&gt;
        &lt;li class=&quot;item&quot;&gt;&lt;a class=&quot;asset-image&quot; href=&quot;&lt;$mt:AssetURL$&gt;&quot;&gt;&lt;img src=&quot;&lt;$mt:AssetThumbnailURL height=&quot;70&quot;$&gt;&quot; class=&quot;asset-img-thumb&quot; alt=&quot;&lt;$mt:AssetLabel$&gt;&quot; title=&quot;&lt;$mt:AssetLabel$&gt;&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
        &lt;mt:AssetsFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:AssetsFooter&gt;
    &lt;/mt:Assets&gt;
&lt;/mt:If&gt;
</text></template>
<template id='372' blog_id='10' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120313171702' identifier='monthly_archive_dropdown' modified_on='20120313171702' name='月別アーカイブ(ドロップダウン)' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Monthly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Monthly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-monthly-dropdown widget-archive widget&quot;&gt;
   &lt;h3 class=&quot;widget-header&quot;&gt;&lt;a href=&quot;&lt;$mt:BlogURL$&gt;archives.html&quot;&gt;アーカイブ&lt;/a&gt;&lt;/h3&gt;
   &lt;div class=&quot;widget-content&quot;&gt;
      &lt;select onchange=&quot;nav(this)&quot;&gt;
         &lt;option&gt;月を選択...&lt;/option&gt;
         &lt;/mt:ArchiveListHeader&gt;
         &lt;option value=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt;&lt;/option&gt;
         &lt;mt:ArchiveListFooter&gt;
      &lt;/select&gt;
   &lt;/div&gt;
&lt;/div&gt;
&lt;script type=&quot;text/javascript&quot; charset=&quot;utf-8&quot;&gt;
/* &lt;![CDATA[ */
function nav(sel) {
   if (sel.selectedIndex == -1) return;
   var opt = sel.options[sel.selectedIndex];
   if (opt &amp;&amp; opt.value)
      location.href = opt.value;
}
/* ]]&gt; */
&lt;/script&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
</text></template>
<template id='376' blog_id='10' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120313171702' identifier='category_archive_list' modified_on='20120313171702' name='カテゴリアーカイブ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Category&quot;&gt;
&lt;div class=&quot;widget-archive widget-archive-category widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;カテゴリ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
    &lt;mt:TopLevelCategories&gt;
        &lt;mt:SubCatIsFirst&gt;
        &lt;ul&gt;
        &lt;/mt:SubCatIsFirst&gt;
        &lt;mt:If tag=&quot;CategoryCount&quot;&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:CategoryArchiveLink$&gt;&quot;&lt;mt:If tag=&quot;CategoryDescription&quot;&gt; title=&quot;&lt;$mt:CategoryDescription remove_html=&quot;1&quot; encode_html=&quot;1&quot;$&gt;&quot;&lt;/mt:If&gt;&gt;&lt;$mt:CategoryLabel$&gt; (&lt;$mt:CategoryCount$&gt;)&lt;/a&gt;
        &lt;mt:Else&gt;
            &lt;li&gt;&lt;$mt:CategoryLabel$&gt;
        &lt;/mt:If&gt;
        &lt;$mt:SubCatsRecurse$&gt;
            &lt;/li&gt;
        &lt;mt:SubCatIsLast&gt;
        &lt;/ul&gt;
        &lt;/mt:SubCatIsLast&gt;
    &lt;/mt:TopLevelCategories&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
</text></template>
<template id='377' blog_id='10' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120313171702' identifier='monthly_archive_list' modified_on='20120313171702' name='月別アーカイブ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Monthly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Monthly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-monthly widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;&lt;$mt:ArchiveTypeLabel$&gt; &lt;a href=&quot;&lt;$mt:Link template=&quot;archive_index&quot;$&gt;&quot;&gt;アーカイブ&lt;/a&gt;&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
</text></template>
<template id='378' blog_id='10' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120313171702' identifier='popup_image' modified_on='20120313171702' name='ポップアップ画像' rebuild_me='1' type='popup_image' current_revision='0'><text>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; id=&quot;sixapart-standard&quot;&gt;
&lt;head&gt;&lt;title&gt;&lt;$mt:ImageURL$&gt;&lt;/title&gt;&lt;/head&gt;
&lt;body id=&quot;uploaded-image-popup&quot; class=&quot;popup&quot; style=&quot;margin: 0;padding: 0;&quot;&gt;
    &lt;img src=&quot;&lt;$mt:ImageURL$&gt;&quot; width=&quot;&lt;$mt:ImageWidth$&gt;&quot; height=&quot;&lt;$mt:ImageHeight$&gt;&quot; alt=&quot;&lt;$mt:ImageURL$&gt;&quot; style=&quot;margin: 0;padding: 0;border: 0;&quot; /&gt;
&lt;/body&gt;
&lt;/html&gt;
</text></template>
<template id='379' blog_id='10' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120313171702' identifier='tag_cloud' modified_on='20120313171702' name='タグクラウド' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:Tags top=&quot;20&quot;&gt;
&lt;mt:If name=&quot;__first__&quot;&gt;
&lt;div class=&quot;widget-tag-cloud widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;タグクラウド&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
&lt;/mt:If&gt;
            &lt;li class=&quot;rank-&lt;$mt:TagRank max=&quot;10&quot;$&gt;&quot;&gt;&lt;a href=&quot;javascript:void(0)&quot; onclick=&quot;location.href=&apos;&lt;$mt:TagSearchLink encode_js=&quot;1&quot;$&gt;&apos;;return false;&quot; rel=&quot;tag&quot;&gt;&lt;$mt:TagName$&gt;&lt;/a&gt;&lt;/li&gt;
&lt;mt:If name=&quot;__last__&quot;&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/mt:If&gt;
&lt;/mt:Tags&gt;
</text></template>
<template id='381' blog_id='10' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120313171702' identifier='technorati_search' modified_on='20120313171702' name='Technorati Search' rebuild_me='1' type='widget' current_revision='0'><text>&lt;div class=&quot;widget-technorati widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;Techonrati&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;div id=&quot;technorati&quot;&gt;
            &lt;form id=&quot;ts_s&quot; method=&quot;post&quot; action=&quot;http://technorati.com/search.php&quot;&gt;
                &lt;fieldset&gt;
                    &lt;legend&gt;&lt;a href=&apos;http://www.technorati.com/&apos;&gt;Technorati&lt;/a&gt; search&lt;/legend&gt;
                    &lt;input type=&quot;hidden&quot; name=&quot;sub&quot; value=&quot;searchlet&quot; /&gt;
                    &lt;input type=&quot;text&quot; id=&quot;ts_search&quot; name=&quot;s&quot; size=&quot;12&quot; maxlength=&quot;255&quot; value=&quot;&quot; /&gt;&lt;br /&gt;
                    &lt;input type=&quot;radio&quot; checked=&quot;checked&quot; name=&quot;from&quot; id=&quot;ts_yb&quot; value=&quot;&lt;$mt:BlogURL$&gt;&quot; /&gt;
                    &lt;label for=&quot;ts_yb&quot; title=&quot;&lt;$mt:BlogName$&gt;&quot;&gt;このブログ&lt;/label&gt;
                    &lt;input type=&quot;radio&quot; name=&quot;from&quot; id=&quot;ts_www&quot; value=&quot;&quot; /&gt; &lt;label for=&quot;ts_www&quot;&gt;すべてのブログ&lt;/label&gt;
                    &lt;input type=&quot;submit&quot; class=&quot;btn&quot; value=&quot;検索&quot; /&gt;
                &lt;/fieldset&gt;
            &lt;/form&gt;
            &lt;p id=&quot;ts_l&quot; class=&quot;ts_l&quot;&gt;&lt;a href=&quot;http://technorati.com/search/&lt;$mt:BlogURL$&gt;&quot; id=&quot;ts_lh&quot;&gt;&#187; リンクしているブログ&lt;/a&gt;&lt;/p&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
</text></template>
<template id='382' blog_id='10' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120313171702' identifier='recent_entries' modified_on='20120313171702' name='最近のブログ記事' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:If tag=&quot;BlogEntryCount&quot;&gt;
    &lt;mt:Entries lastn=&quot;10&quot;&gt;
        &lt;mt:EntriesHeader&gt;
&lt;div class=&quot;widget-recent-entries widget-archives widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;最近のブログ記事&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:EntriesHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:EntryPermalink$&gt;&quot;&gt;&lt;$mt:EntryTitle$&gt;&lt;/a&gt;&lt;/li&gt;
        &lt;mt:EntriesFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:EntriesFooter&gt;
    &lt;/mt:Entries&gt;
&lt;/mt:If&gt;
</text></template>
<template id='383' blog_id='10' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120313171702' identifier='author_archive_list' modified_on='20120313171702' name='ユーザーアーカイブ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Author&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Author&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive widget-archive-author widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;ユーザー&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
</text></template>
<template id='384' blog_id='10' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120313171702' identifier='powered_by' modified_on='20120313171702' name='Powered By' rebuild_me='1' type='widget' current_revision='0'><text>&lt;div class=&quot;widget-powered widget&quot;&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;a href=&quot;http://www.sixapart.jp/movabletype/&quot;&gt;&lt;img src=&quot;&lt;$mt:StaticWebPath$&gt;images/bug-pbmt-white.png&quot; alt=&quot;Powered by Movable Type &lt;$mt:Version$&gt;&quot; width=&quot;120&quot; height=&quot;75&quot; /&gt;&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;
</text></template>
<template id='385' blog_id='10' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120313171702' identifier='date_based_author_archives' modified_on='20120313171702' name='日付ベースのユーザーアーカイブ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Author-Yearly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Author-Yearly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-author-yearly widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;年別ユーザーアーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;

&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Author-Monthly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Author-Monthly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-author-monthly widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;月別ユーザーアーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;

&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Author-Weekly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Author-Weekly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-author-weekly widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;週別ユーザーアーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;

&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Author-Daily&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Author-Daily&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-author-daily widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;日別ユーザーアーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;

</text></template>
<template id='386' blog_id='10' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120313171702' identifier='pages_list' modified_on='20120313171702' name='ページ一覧' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Page&quot;&gt;
&lt;div class=&quot;widget-pages widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;ウェブページ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
    &lt;mt:Pages no_folder=&quot;1&quot; sort_by=&quot;title&quot; sort_order=&quot;ascend&quot;&gt;
            &lt;li class=&quot;page page-&lt;$mt:PageID$&gt;&quot;&gt;&lt;a href=&quot;&lt;$mt:PagePermalink$&gt;&quot;&gt;&lt;$mt:PageTitle$&gt;&lt;/a&gt;&lt;/li&gt;
    &lt;/mt:Pages&gt;
    &lt;mt:TopLevelFolders&gt;
            &lt;li class=&quot;folder folder-&lt;$mt:FolderID$&gt;&quot;&gt;&lt;strong&gt;&lt;$mt:FolderLabel$&gt;&lt;/strong&gt;
        &lt;mt:Pages sort_by=&quot;title&quot; sort_order=&quot;ascend&quot;&gt;
            &lt;mt:PagesHeader&gt;
                &lt;ul&gt;
            &lt;/mt:PagesHeader&gt;
                    &lt;li class=&quot;page page-&lt;$mt:PageID$&gt;&quot;&gt;&lt;a href=&quot;&lt;$mt:PagePermalink$&gt;&quot;&gt;&lt;$mt:PageTitle$&gt;&lt;/a&gt;&lt;/li&gt;
            &lt;mt:PagesFooter&gt;
                &lt;/ul&gt;
            &lt;/mt:PagesFooter&gt;
        &lt;/mt:Pages&gt;
            &lt;/li&gt;
        &lt;$mt:SubFolderRecurse$&gt;
    &lt;/mt:TopLevelFolders&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
</text></template>
<template id='389' blog_id='10' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120313171702' identifier='page' modified_on='20120313171702' name='ウェブページ' rebuild_me='1' type='page' current_revision='0'><text>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;
    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; id=&quot;sixapart-standard&quot;&gt;
&lt;head&gt;
    &lt;$mt:Include module=&quot;HTMLヘッダー&quot;$&gt;
    &lt;$mt:EntryTrackbackData$&gt;
    &lt;$mt:Var name=&quot;comments_per_page&quot; value=&quot;50&quot;$&gt;
    &lt;mt:If tag=&quot;EntryCommentCount&quot; gt=&quot;$comments_per_page&quot;&gt;
	    &lt;script type=&quot;text/javascript&quot;&gt;
         MT.entryID = &lt;$mt:PageID$&gt;;
         MT.commentsPerPage = &lt;$mt:Var name=&quot;comments_per_page&quot;$&gt;;
         MT.entryCommentCount = &lt;$mt:EntryCommentCount$&gt;;
         MT.commentIds = [&lt;mt:Comments sort_order=&quot;ascend&quot; glue=&quot;,&quot;&gt;&lt;mt:CommentID&gt;&lt;/mt:Comments&gt;];
	    &lt;/script&gt;
    &lt;/mt:If&gt;
    &lt;title&gt;&lt;$mt:PageTitle encode_html=&quot;1&quot;$&gt; - &lt;$mt:BlogName encode_html=&quot;1&quot;$&gt;&lt;/title&gt;
&lt;/head&gt;
&lt;body id=&quot;&lt;$mt:BlogThemeID$&gt;&quot; class=&quot;mt-page-archive &lt;$mt:Var name=&quot;page_layout&quot;$&gt;&quot;&gt;
    &lt;div id=&quot;container&quot;&gt;
        &lt;div id=&quot;container-inner&quot;&gt;


            &lt;$mt:Include module=&quot;バナーヘッダー&quot;$&gt;


            &lt;div id=&quot;content&quot;&gt;
                &lt;div id=&quot;content-inner&quot;&gt;


                    &lt;div id=&quot;alpha&quot;&gt;
                        &lt;div id=&quot;alpha-inner&quot;&gt;


                            &lt;div id=&quot;page-&lt;$mt:PageID$&gt;&quot; class=&quot;page-asset asset&quot;&gt;
                                &lt;div class=&quot;asset-header&quot;&gt;
                                    &lt;h1 id=&quot;page-title&quot; class=&quot;asset-name&quot;&gt;&lt;$mt:PageTitle$&gt;&lt;/h1&gt;
                                &lt;/div&gt;
                                &lt;div class=&quot;asset-content&quot;&gt;
&lt;mt:If tag=&quot;PageBody&quot;&gt;
                                    &lt;div class=&quot;asset-body&quot;&gt;
                                        &lt;$mt:PageBody$&gt;
                                    &lt;/div&gt;
&lt;/mt:If&gt;
&lt;mt:If tag=&quot;PageMore&quot;&gt;
                                    &lt;div id=&quot;more&quot; class=&quot;asset-more&quot;&gt;
                                        &lt;$mt:PageMore$&gt;
                                    &lt;/div&gt;
&lt;/mt:If&gt;
                                &lt;/div&gt;
                                &lt;div class=&quot;asset-footer&quot;&gt;&lt;/div&gt;
                            &lt;/div&gt;


                    &lt;$mt:Include module=&quot;トラックバック&quot;$&gt;
                    &lt;$mt:Include module=&quot;コメント&quot;$&gt;


                        &lt;/div&gt;
                    &lt;/div&gt;


                    &lt;$mt:Include module=&quot;サイドバー&quot;$&gt;


                &lt;/div&gt;
            &lt;/div&gt;


            &lt;$mt:Include module=&quot;バナーフッター&quot;$&gt;


        &lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</text></template>
<template id='391' blog_id='10' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120313171702' identifier='signin' modified_on='20120313171702' name='サインイン' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfRegistrationAllowed&gt;
&lt;div class=&quot;widget-sign-in widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;サインイン&lt;/h3&gt;
    &lt;div id=&quot;signin-widget-content&quot; class=&quot;widget-content&quot;&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
/* &lt;![CDATA[ */
function mtUpdateSignInWidget(u) {
    var el = document.getElementById(&apos;signin-widget-content&apos;);
    var content = &apos;&apos;;
    if (!el) return;
    if (u) {
        if (u &amp;&amp; u.is_authenticated) {
            user = u;
            mtSaveUser();
        } else {
            // user really isn&apos;t logged in; so let&apos;s do this!
            return mtSignIn();
        }
    } else {
        u = mtGetUser();
    }
    if (u &amp;&amp; u.name) {
        var url;
        if (u.is_authenticated) {
            if (u.is_author) {
                url = &apos;&lt;$mt:CGIPath$&gt;&lt;$mt:CommentScript$&gt;?__mode=edit_profile&apos;;
                url += &apos;&amp;return_url=&apos; + encodeURIComponent( location.href );
            } else {
                url = u.url;
            }
        } else if (u.url) {
            url = u.url;
        } else {
            url = null;
        }
        var content = &apos;ユーザー名:&apos;;
        if (url)
            content += &apos;&lt;a href=&quot;&apos; + url + &apos;&quot;&gt;&apos; + u.name + &apos;&lt;/a&gt;&apos;;
        else
            content += u.name;
        content += &apos;.  (&lt;a href=&quot;javascript:void(0)&quot; onclick=&quot;return mtSignOutOnClick()&quot;&gt;サインアウト&lt;/a&gt;)&apos;;
    } else if (u &amp;&amp; u.is_banned) {
        content = &apos;このブログにサインインする権限がありません。&apos;;
    } else {
        content = &apos;&lt;a href=&quot;javascript:void(0)&quot; onclick=&quot;return mtSignInOnClick(\&apos;signin-widget-content\&apos;)&quot;&gt;サインイン&lt;/a&gt;&apos;;
    }
    el.innerHTML = content;
}
mtAttachEvent(&apos;usersignin&apos;, mtUpdateSignInWidget);
mtUpdateSignInWidget();
/* ]]&gt; */
&lt;/script&gt;
&lt;/mt:IfRegistrationAllowed&gt;
</text></template>
<template id='392' blog_id='10' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120313171702' identifier='current_category_monthly_archive_list' modified_on='20120313171702' name='カテゴリ月別アーカイブ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Category-Monthly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Category-Monthly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-current-category-monthly widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;&lt;$mt:CategoryLabel$&gt;: 月別アーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt;&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
</text></template>
<template id='393' blog_id='10' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120313171702' identifier='about_this_page' modified_on='20120313171702' name='About' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:unless name=&quot;main_index&quot;&gt;
&lt;div class=&quot;widget-about-this-page widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;
&lt;mt:If name=&quot;entry_template&quot;&gt;
        このブログ記事について
&lt;mt:Else&gt;
    &lt;mt:If name=&quot;archive_template&quot;&gt;
        このアーカイブについて
    &lt;/mt:If&gt;
&lt;/mt:If&gt;
&lt;mt:If name=&quot;archive_index&quot;&gt;
        このページについて
&lt;/mt:If&gt;
    &lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
&lt;mt:If name=&quot;archive_index&quot;&gt;
        &lt;p&gt;このページには過去に書かれたすべてのコンテンツが含まれています。&lt;/p&gt;
&lt;/mt:If&gt;
&lt;mt:If name=&quot;entry_template&quot;&gt;
        &lt;p class=&quot;first&quot;&gt;このページは、&lt;$mt:EntryAuthorLink$&gt;が&lt;$mt:EntryDate format=&quot;%x %X&quot;$&gt;に書いたブログ記事です。&lt;/p&gt;
    &lt;mt:EntryPrevious&gt;
        &lt;p&gt;ひとつ前のブログ記事は「&lt;a href=&quot;&lt;$mt:EntryPermalink$&gt;&quot;&gt;&lt;$mt:EntryTitle remove_html=&quot;1&quot;$&gt;&lt;/a&gt;」です。&lt;/p&gt;
    &lt;/mt:EntryPrevious&gt;
    &lt;mt:EntryNext&gt;
        &lt;p&gt;次のブログ記事は「&lt;a href=&quot;&lt;$mt:EntryPermalink$&gt;&quot;&gt;&lt;$mt:EntryTitle remove_html=&quot;1&quot;$&gt;&lt;/a&gt;」です。&lt;/p&gt;
    &lt;/mt:EntryNext&gt;
&lt;/mt:If&gt;
&lt;mt:If name=&quot;category_archive&quot;&gt;
    &lt;mt:If name=&quot;datebased_archive&quot;&gt;
        &lt;p class=&quot;first&quot;&gt;このページには、&lt;strong&gt;&lt;$mt:ArchiveDate format=&quot;%B %Y&quot;$&gt;&lt;/strong&gt;以降に書かれたブログ記事のうち&lt;strong&gt;&lt;$mt:CategoryLabel$&gt;&lt;/strong&gt;カテゴリに属しているものが含まれています。&lt;/p&gt;
        &lt;mt:ArchivePrevious&gt;
        &lt;p&gt;前のアーカイブは&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt;&lt;/a&gt;です。&lt;/p&gt;
        &lt;/mt:ArchivePrevious&gt;
        &lt;mt:ArchiveNext&gt;
        &lt;p&gt;次のアーカイブは&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt;&lt;/a&gt;です。&lt;/p&gt;
        &lt;/mt:ArchiveNext&gt;
    &lt;mt:Else&gt;
        &lt;p class=&quot;first&quot;&gt;このページには、過去に書かれたブログ記事のうち&lt;strong&gt;&lt;$mt:CategoryLabel$&gt;&lt;/strong&gt;カテゴリに属しているものが含まれています。&lt;/p&gt;
        &lt;mt:CategoryPrevious&gt;
        &lt;p&gt;前のカテゴリは&lt;a href=&quot;&lt;$mt:CategoryArchiveLink$&gt;&quot;&gt;&lt;$mt:CategoryLabel$&gt;&lt;/a&gt;です。&lt;/p&gt;
        &lt;/mt:CategoryPrevious&gt;
        &lt;mt:CategoryNext&gt;
        &lt;p&gt;次のカテゴリは&lt;a href=&quot;&lt;$mt:CategoryArchiveLink$&gt;&quot;&gt;&lt;$mt:CategoryLabel$&gt;&lt;/a&gt;です。&lt;/p&gt;
        &lt;/mt:CategoryNext&gt;
    &lt;/mt:If&gt;
&lt;/mt:If&gt;
&lt;mt:If name=&quot;author_archive&quot;&gt;
    &lt;mt:If name=&quot;datebased_archive&quot;&gt;
        &lt;p class=&quot;first&quot;&gt;このページには、&lt;strong&gt;&lt;$mt:AuthorDisplayName encode_html=&quot;1&quot;$&gt;&lt;/strong&gt;が&lt;strong&gt;&lt;$mt:ArchiveDate format=&quot;%B %Y&quot;$&gt;&lt;/strong&gt;に書いたブログ記事が含まれています。&lt;/p&gt;
        &lt;mt:ArchivePrevious&gt;
        &lt;p&gt;前のアーカイブは&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt;&lt;/a&gt;です。&lt;/p&gt;
        &lt;/mt:ArchivePrevious&gt;
        &lt;mt:ArchiveNext&gt;
        &lt;p&gt;次のアーカイブは&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt;&lt;/a&gt;です。&lt;/p&gt;
        &lt;/mt:ArchiveNext&gt;
    &lt;mt:Else&gt;
        &lt;p class=&quot;first&quot;&gt;このページには、&lt;strong&gt;&lt;$mt:AuthorDisplayName encode_html=&quot;1&quot;$&gt;&lt;/strong&gt;が最近書いたブログ記事が含まれています。&lt;/p&gt;
    &lt;/mt:If&gt;
&lt;/mt:If&gt;
&lt;mt:If name=&quot;datebased_only_archive&quot;&gt;
        &lt;p class=&quot;first&quot;&gt;このページには、&lt;strong&gt;&lt;$mt:ArchiveDate format=&quot;%B %Y&quot;$&gt;&lt;/strong&gt;に書かれたブログ記事が新しい順に公開されています。&lt;/p&gt;
    &lt;mt:ArchivePrevious&gt;
        &lt;p&gt;前のアーカイブは&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt;&lt;/a&gt;です。&lt;/p&gt;
    &lt;/mt:ArchivePrevious&gt;
    &lt;mt:ArchiveNext&gt;
        &lt;p&gt;次のアーカイブは&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt;&lt;/a&gt;です。&lt;/p&gt;
    &lt;/mt:ArchiveNext&gt;
&lt;/mt:If&gt;
&lt;mt:If name=&quot;archive_index&quot;&gt;
        &lt;p&gt;最近のコンテンツは&lt;a href=&quot;&lt;$mt:BlogURL$&gt;&quot;&gt;インデックスページ&lt;/a&gt;で見られます。&lt;/p&gt;
&lt;mt:Else&gt;
        &lt;p&gt;最近のコンテンツは&lt;a href=&quot;&lt;$mt:BlogURL$&gt;&quot;&gt;インデックスページ&lt;/a&gt;で見られます。過去に書かれたものは&lt;a href=&quot;&lt;$mt:Link template=&quot;archive_index&quot;$&gt;&quot;&gt;アーカイブのページ&lt;/a&gt;で見られます。&lt;/p&gt;
&lt;/mt:If&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/mt:unless&gt;
</text></template>
<template id='394' blog_id='10' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120313171702' identifier='openid' modified_on='20120313171702' name='OpenID対応' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfRegistrationAllowed type=&quot;OpenID&quot;&gt;
&lt;div class=&quot;widget-openid widget&quot;&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;em&gt;&lt;strong&gt;OpenID&lt;/strong&gt;対応しています&lt;/em&gt;
        &lt;a href=&quot;http://www.movabletype.jp/openid/&quot;&gt;OpenIDについて&lt;/a&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/mt:IfRegistrationAllowed&gt;
</text></template>
<template id='395' blog_id='10' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120313171702' identifier='creative_commons' modified_on='20120313171702' name='クリエイティブ・コモンズ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:BlogIfCCLicense&gt;
&lt;div class=&quot;widget-creative-commons widget&quot;&gt;
   &lt;div class=&quot;widget-content&quot;&gt;
      &lt;a href=&quot;&lt;$mt:BlogCCLicenseURL$&gt;&quot;&gt;&lt;img alt=&quot;Creative Commons License&quot; src=&quot;&lt;$mt:BlogCCLicenseImage$&gt;&quot; /&gt;&lt;/a&gt;&lt;br /&gt;
      このブログは&lt;a href=&quot;&lt;$mt:BlogCCLicenseURL$&gt;&quot;&gt;クリエイティブ・コモンズ&lt;/a&gt;でライセンスされています。
   &lt;/div&gt;
&lt;/div&gt;
&lt;/mt:BlogIfCCLicense&gt;
</text></template>
<template id='397' blog_id='10' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120313171702' identifier='comment_response' modified_on='20120313171702' name='コメント完了' rebuild_me='1' type='comment_response' current_revision='0'><text>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;
    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; id=&quot;sixapart-standard&quot;&gt;
&lt;head&gt;


&lt;mt:If name=&quot;comment_confirmation&quot;&gt;
    &lt;mt:Ignore&gt;&lt;!-- Success message when comment has been submitted --&gt;&lt;/mt:Ignore&gt;
    &lt;$mt:Var name=&quot;page_title&quot; value=&quot;確認&quot;$&gt;
    &lt;$mt:Var name=&quot;message&quot; value=&quot;&lt;p&gt;コメントを投稿しました。&lt;/p&gt;&quot;$&gt;
&lt;mt:Else name=&quot;comment_pending&quot;&gt;
    &lt;mt:Ignore&gt;&lt;!-- Pending message when comment is being held for review --&gt;&lt;/mt:Ignore&gt;
    &lt;$mt:Var name=&quot;page_title&quot; value=&quot;コメントありがとうございます。&quot;$&gt;
    &lt;$mt:Var name=&quot;message&quot; value=&quot;&lt;p&gt;コメントは現在承認されるまで公開を保留されています。&lt;/p&gt;&quot;$&gt;
&lt;mt:Else name=&quot;comment_error&quot;&gt;
    &lt;mt:Ignore&gt;&lt;!-- Error message when comment submission fails --&gt;&lt;/mt:Ignore&gt;
    &lt;$mt:Var name=&quot;page_title&quot; value=&quot;コメント投稿エラー&quot;$&gt;
    &lt;mt:SetVarBlock name=&quot;message&quot;&gt;&lt;p&gt;コメントを投稿できませんでした。エラー: &lt;$mt:ErrorMessage$&gt;&lt;/p&gt;&lt;/mt:SetVarBlock&gt;
&lt;/mt:If&gt;


    &lt;$mt:Include module=&quot;HTMLヘッダー&quot;$&gt;
    &lt;title&gt;&lt;$mt:BlogName encode_html=&quot;1&quot;$&gt;: &lt;$mt:Var name=&quot;page_title&quot;$&gt;&lt;/title&gt;
&lt;/head&gt;
&lt;body id=&quot;&lt;$mt:BlogThemeID$&gt;&quot; class=&quot;&lt;$mt:Var name=&quot;body_class&quot;$&gt; &lt;$mt:Var name=&quot;page_layout&quot;$&gt;&quot;&gt;
    &lt;div id=&quot;container&quot;&gt;
        &lt;div id=&quot;container-inner&quot;&gt;


            &lt;$mt:Include module=&quot;バナーヘッダー&quot;$&gt;


            &lt;div id=&quot;content&quot;&gt;
                &lt;div id=&quot;content-inner&quot;&gt;


                    &lt;div id=&quot;alpha&quot;&gt;
                        &lt;div id=&quot;alpha-inner&quot;&gt;
                            &lt;h1 id=&quot;page-title&quot;&gt;&lt;$mt:Var name=&quot;page_title&quot;$&gt;&lt;/h1&gt;
                            &lt;$mt:Var name=&quot;message&quot;$&gt;
                            &lt;p&gt;&lt;a href=&quot;&lt;mt:If name=&quot;comment_error&quot;&gt;javascript:history.back()&lt;mt:Else&gt;&lt;$mt:EntryLink$&gt;&lt;/mt:If&gt;&quot;&gt;元の記事&lt;/a&gt;に戻る&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;


                    &lt;$mt:Include module=&quot;サイドバー&quot;$&gt;


                &lt;/div&gt;
            &lt;/div&gt;


            &lt;$mt:Include module=&quot;バナーフッター&quot;$&gt;


        &lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</text></template>
<template id='398' blog_id='10' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120313171702' identifier='archive_widgets_group' modified_on='20120313171702' name='アーカイブウィジェットグループ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:Ignore&gt;
    アーカイブの種類に応じて異なる内容を表示するように設定されたウィジェットです。詳細: http://www.movabletype.org/documentation/designer/widget-sets.html
&lt;/mt:Ignore&gt;
&lt;mt:If name=&quot;category_archive&quot;&gt;
    &lt;mt:IfArchiveTypeEnabled archive_type=&quot;Category-Monthly&quot;&gt;
        &lt;$mt:Include widget=&quot;カテゴリ月別アーカイブ&quot;$&gt;
    &lt;/mt:IfArchiveTypeEnabled&gt;
&lt;/mt:If&gt;
&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Category&quot;&gt;
    &lt;$mt:Include widget=&quot;カテゴリアーカイブ&quot;$&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Monthly&quot;&gt;
    &lt;$mt:Include widget=&quot;月別アーカイブ&quot;$&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
</text></template>
<template id='400' blog_id='10' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120313171702' identifier='syndication' modified_on='20120313171702' name='購読' rebuild_me='1' type='widget' current_revision='0'><text>&lt;div class=&quot;widget-syndication widget&quot;&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
            &lt;li&gt;&lt;img src=&quot;&lt;$mt:StaticWebPath$&gt;images/status_icons/feed.gif&quot; alt=&quot;購読する&quot; width=&quot;9&quot; height=&quot;9&quot; /&gt; &lt;a href=&quot;&lt;$mt:Link template=&quot;feed_recent&quot;$&gt;&quot;&gt;このブログを購読&lt;/a&gt;&lt;/li&gt;
&lt;mt:If name=&quot;search_results&quot;&gt;
    &lt;mt:If tag=&quot;SearchString&quot;&gt;
            &lt;li class=&quot;search-results-feed&quot;&gt;&lt;img src=&quot;&lt;$mt:StaticWebPath$&gt;images/status_icons/feed.gif&quot; alt=&quot;購読する&quot; width=&quot;9&quot; height=&quot;9&quot; /&gt; &lt;a href=&quot;&lt;$mt:CGIPath$&gt;&lt;$mt:SearchScript$&gt;?&lt;mt:IfTagSearch&gt;tag&lt;mt:else&gt;search&lt;/mt:IfTagSearch&gt;=&lt;$mt:SearchString encode_url=&quot;1&quot;$&gt;&amp;amp;Template=feed&amp;amp;IncludeBlogs=&lt;$mt:SearchIncludeBlogs$&gt;&amp;amp;limit=&lt;$mt:SearchMaxResults$&gt;&quot; title=&quot;&lt;mt:IfTagSearch&gt;「&lt;$mt:SearchString$&gt;」の検索結果を購読&lt;mt:Else&gt;タグ「&lt;$mt:SearchString$&gt;」を購読&lt;/mt:IfTagSearch&gt;&quot;&gt;&lt;mt:IfTagSearch&gt;タグ「&lt;$mt:SearchString$&gt;」のフィード&lt;mt:Else&gt;「&lt;$mt:SearchString$&gt;」を検索した結果のフィード&lt;/mt:IfTagSearch&gt;&lt;/a&gt;&lt;/li&gt;
    &lt;/mt:If&gt;
&lt;/mt:If&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
</text></template>
<template id='401' blog_id='10' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120313171702' identifier='calendar' modified_on='20120313171702' name='カレンダー' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Individual&quot;&gt;
&lt;div class=&quot;widget-calendar widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;&lt;$mt:Date format=&quot;%B %Y&quot;$&gt;&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;table summary=&quot;リンク付きのカレンダー&quot;&gt;
            &lt;tr&gt;
                &lt;th abbr=&quot;日曜日&quot;&gt;日&lt;/th&gt;
                &lt;th abbr=&quot;月曜日&quot;&gt;月&lt;/th&gt;
                &lt;th abbr=&quot;火曜日&quot;&gt;火&lt;/th&gt;
                &lt;th abbr=&quot;水曜日&quot;&gt;水&lt;/th&gt;
                &lt;th abbr=&quot;木曜日&quot;&gt;木&lt;/th&gt;
                &lt;th abbr=&quot;金曜日&quot;&gt;金&lt;/th&gt;
                &lt;th abbr=&quot;土曜日&quot;&gt;土&lt;/th&gt;
            &lt;/tr&gt;
    &lt;mt:Calendar&gt;
        &lt;mt:CalendarWeekHeader&gt;
            &lt;tr&gt;
        &lt;/mt:CalendarWeekHeader&gt;
                &lt;td&gt;
        &lt;mt:CalendarIfEntries&gt;
            &lt;mt:Entries lastn=&quot;1&quot;&gt;
                    &lt;a href=&quot;&lt;$mt:EntryPermalink$&gt;&quot;&gt;&lt;$mt:CalendarDay$&gt;&lt;/a&gt;
            &lt;/mt:Entries&gt;
        &lt;/mt:CalendarIfEntries&gt;
        &lt;mt:CalendarIfNoEntries&gt;
                    &lt;$mt:CalendarDay$&gt;
        &lt;/mt:CalendarIfNoEntries&gt;
        &lt;mt:CalendarIfBlank&gt;&amp;nbsp;&lt;/mt:CalendarIfBlank&gt;
                &lt;/td&gt;
        &lt;mt:CalendarWeekFooter&gt;
            &lt;/tr&gt;
        &lt;/mt:CalendarWeekFooter&gt;
    &lt;/mt:Calendar&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;/div&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;
</text></template>
<template id='402' blog_id='10' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120313171702' identifier='dynamic_error' modified_on='20120313171702' name='ダイナミックパブリッシングエラー' rebuild_me='1' type='dynamic_error' current_revision='0'><text>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;
    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; id=&quot;sixapart-standard&quot;&gt;
&lt;head&gt;
    &lt;$mt:Include module=&quot;HTMLヘッダー&quot;$&gt;
    &lt;title&gt;&lt;$mt:BlogName encode_html=&quot;1&quot;$&gt;: ページが見つかりません。&lt;/title&gt;
&lt;/head&gt;
&lt;body id=&quot;&lt;$mt:BlogThemeID$&gt;&quot; class=&quot;mt-dynamic-error &lt;$mt:Var name=&quot;page_layout&quot;$&gt;&quot;&gt;
    &lt;div id=&quot;container&quot;&gt;
        &lt;div id=&quot;container-inner&quot;&gt;


            &lt;$mt:Include module=&quot;バナーヘッダー&quot;$&gt;


            &lt;div id=&quot;content&quot;&gt;
                &lt;div id=&quot;content-inner&quot;&gt;


                    &lt;div id=&quot;alpha&quot;&gt;
                        &lt;div id=&quot;alpha-inner&quot;&gt;
                            &lt;h1 id=&quot;page-title&quot;&gt;ページが見つかりません。&lt;/h1&gt;
                            &lt;blockquote&gt;
                                &lt;strong&gt;&lt;$mt:ErrorMessage$&gt;&lt;/strong&gt;
                            &lt;/blockquote&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;


                    &lt;$mt:Include module=&quot;サイドバー&quot;$&gt;


                &lt;/div&gt;
            &lt;/div&gt;


            &lt;$mt:Include module=&quot;バナーフッター&quot;$&gt;


        &lt;/div&gt;
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</text></template>
<template id='404' blog_id='10' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120313171702' identifier='comment_listing' modified_on='20120313171702' name='コメント一覧' rebuild_me='1' type='comment_listing' current_revision='0'><text>{
    &quot;direction&quot;: &quot;&lt;mt:Var name=&quot;commentDirection&quot;&gt;&quot;,
    &quot;comments&quot;: &quot;&lt;mt:Comments sort_order=&quot;$commentDirection&quot;&gt;&lt;$mt:Include module=&quot;コメント詳細&quot; replace=&quot;\&quot;,&quot;\\&quot; replace=&apos;&quot;&apos;,&apos;\&quot;&apos; strip_linefeeds=&quot;1&quot;$&gt;&lt;/mt:Comments&gt;&quot;
}</text></template>
<template id='406' blog_id='10' build_dynamic='0' build_interval='0' build_type='1' created_by='1' created_on='20120313171702' identifier='date_based_category_archives' modified_on='20120313171702' name='日付ベースのカテゴリアーカイブ' rebuild_me='1' type='widget' current_revision='0'><text>&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Category-Yearly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Category-Yearly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-category-yearly widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;年別カテゴリアーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;

&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Category-Monthly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Category-Monthly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-category-monthly widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;月別カテゴリアーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;

&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Category-Weekly&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Category-Weekly&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-category-weekly widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;週別カテゴリアーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;

&lt;mt:IfArchiveTypeEnabled archive_type=&quot;Category-Daily&quot;&gt;
    &lt;mt:ArchiveList archive_type=&quot;Category-Daily&quot;&gt;
        &lt;mt:ArchiveListHeader&gt;
&lt;div class=&quot;widget-archive-category-daily widget-archive widget&quot;&gt;
    &lt;h3 class=&quot;widget-header&quot;&gt;日別カテゴリアーカイブ&lt;/h3&gt;
    &lt;div class=&quot;widget-content&quot;&gt;
        &lt;ul&gt;
        &lt;/mt:ArchiveListHeader&gt;
            &lt;li&gt;&lt;a href=&quot;&lt;$mt:ArchiveLink$&gt;&quot;&gt;&lt;$mt:ArchiveTitle$&gt; (&lt;$mt:ArchiveCount$&gt;)&lt;/a&gt;&lt;/li&gt;
        &lt;mt:ArchiveListFooter&gt;
        &lt;/ul&gt;
    &lt;/div&gt;
&lt;/div&gt;
        &lt;/mt:ArchiveListFooter&gt;
    &lt;/mt:ArchiveList&gt;
&lt;/mt:IfArchiveTypeEnabled&gt;

</text></template>
</movabletype>